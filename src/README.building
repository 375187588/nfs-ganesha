
Building and Running  -   Paul Sheer <paulsheer@gmail.com>   -   5 Aug 2012


This is an explanation of how to build; and what you need before you
build.  I put this together from trial and error.  If the core
developers could update this file please.


1. You seem to need the package krb5-1.10.2.  Compile and install as per
its own instructions.  I use --prefix=/opt/nfs-ganesha to install
everything under /opt/ and allow for a clean removal.

2. You seem to need the package libnfsidmap-0.25.  Compile and install
as per its own instructions.  I use --prefix=/opt/nfs-ganesha to install
everything under /opt/ and allow for a clean removal.

2.1: Are there other dependencies?

2.2: Install all the autoconf tools as per your distribution. This means
automake, autoconf, and libtool. Others?  You need to do things like
'yum install automake' (rpm-based distros); or 'apt-get install automake'
Debian-base distros.

3. Because the "configure" and "autoconf" tools are broken and
unworkable, you need this before you continue:

    export PATH=/opt/nfs-ganesha/bin/:$PATH
    export PKG_CONFIG_PATH=/opt/nfs-ganesha/lib/pkgconfig/
    export LDFLAGS=-L/opt/nfs-ganesha/lib/


4. Because the "configure" and "autoconf" tools are broken and
unworkable, you need edit this line in MainNFSD/Makefile.am:

Find the line,

    libMainServices_la_DEPENDENCIES = $(libMainServices_la_SOURCES) $(libMainServices_la_LIBADD)

and change into:

    libMainServices_la_DEPENDENCIES = $(libMainServices_la_SOURCES)


5. If you are compiling from a git dump, then you need to do a whole lot
of stuff first. Fortunately a lot of this is packed into to scripts:

   ./tirpc.sh
   ./autogen.sh


6. For a generic build, do:

    ./configure --prefix=/opt/nfs-ganesha \
            --enable-fsal-posix \
            --disable-fsal-proxy \
            --disable-fsal-lustre \
            --disable-fsal-shook \
            --with-krb5=/opt/nfs-ganesha

7. Type

    make
    make install

8.1 Create a directory /posix_fs which will contain the files you wish to export.

8.2 Create a file /etc/ganesha/ganesha.conf containing the text
as follows. You will need to edit the 10.1.x.x network to match the IP
addresses of the machines you wish to have access to the export.



           FSAL
           {
             POSIX {
               FSAL_Shared_Library = "/opt/nfs-ganesha/lib/libfsalposix.so";
               DebugLevel = "NIV_CRIT";
               LogFile = "/var/log/nfs-ganesha.log";
               max_FS_calls = 0;
             }
           }
           
           NFSv4_ClientId_Cache
           {
             Index_Size = 71;
             Alphabet_Length = 10;
           }
           
           FileSystem
           { 
             Umask = 0000;
             Link_support = TRUE;
             Symlink_support = TRUE;
             CanSetTime = TRUE;
             xattr_access_rights = 0600; 
           }
           
           CacheInode_Hash
           {
             Index_Size = 71;
             Alphabet_Length = 10;
           }
           
           CacheInode_Client
           {
             Attr_Expiration_Time = 2;
             Symlink_Expiration_Time = 2;
             Directory_Expiration_Time = 2;
             Use_Test_Access = 1;
             Max_Fd = 128;
             OpenFile_Retention = 2;
             Use_OpenClose_cache = NO;
           }
           
           NFS_Worker_Param
           {
             Nb_Before_GC = 101 ;
           }
           
           NFS_Core_Param
           {
             Nb_Worker = 10;
             NFS_Port = 2049;
             Stats_File_Path = "/tmp/ganesha.stats";
             Stats_Update_Delay = 600;
           }
           
           NFS_DupReq_Hash
           {
             Index_Size = 71;
             Alphabet_Length = 10;
           }
           
           NFS_IP_Name
           {
             Index_Size = 71;
             Alphabet_Length = 10;
             Expiration_Time = 3600 ;   
           }
           
           SNMP_ADM
           {
             snmp_agentx_socket = "tcp:localhost:761";
             product_id = 2;
             snmp_adm_log = "/tmp/snmp_adm.log";
             export_cache_stats    = TRUE;
             export_requests_stats = TRUE;
             export_maps_stats     = FALSE;
             export_buddy_stats    = TRUE;
             export_nfs_calls_detail = FALSE;
             export_cache_inode_calls_detail = FALSE;
             export_fsal_calls_detail = FALSE;
           }
           
           STAT_EXPORTER
           {
             Access = "localhost";
             Port = "10401";
           }
           
           NFSv4
           {
             Lease_Lifetime = 3;
             FH_Expire = FALSE;
             Returns_ERR_FH_EXPIRED = TRUE;
           }
           
           EXPORT
           {
             FSAL = "POSIX";
             Export_Id = 77;
             Path = "/posix_fs";
             Root_Access = "10.1.0.3,10.1.0.1";
             RW_Access = "10.1.0.3,10.1.0.1";
             Pseudo = "/posix_fs";
             Anonymous_root_uid = -2;
             NFS_Protocols = "3,4";
             Transport_Protocols = "UDP,TCP";
             SecType = "sys";
             MaxRead = 32768;
             MaxWrite = 32768;
             Filesystem_id = 10.1;
             Tag = "fs0";
             Use_NFS_Commit = TRUE;
             Use_Ganesha_Write_Buffer = FALSE;
           }




9. Run nfsd as follows:

    /opt/nfs-ganesha/bin/ganesha.nfsd -L /tmp/nfs-ganesha.log -f /etc/ganesha/ganesha.conf -N NIV_CRIT


10. That should have taken you quite a few hours at least. What could be
simpler!?


11. If you need to re-install, you may meet certain dependency misery;
so clean out old libs before using 'make install':

    find . -name 'lib*.a' -o -name 'lib*.la' -o -name 'lib*.so.*' -o -name 'lib*.so' | grep -v libgpfs.so | grep -v libnfs_mnt_xdr.a | xargs rm -f
    rm -f ./MainNFSD/ganesha.nfsd
    make
    make install



