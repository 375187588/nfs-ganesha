#!/usr/bin/perl
# 
# Copyright IBM (2010)
# author: Sean Dague <sdague@linux.vnet.ibm.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

use strict;

our $OIDBASE = ".1.3.6.1.4.1.12384.999.1.1";

sub help {
    print <<USAGE;
ganesha_log_level - get and set the log levels for ganesh

USAGE
}

sub my_exec($) {
    my $cmd = shift;
    my $output = "";
    open(OUT, "$cmd 2>&1 |") or return undef;
    while(<OUT>) {
        $output .= $_;
    }
    close(OUT) or return undef;
    # get rid of final newline
    chomp($output);
    return $output;
}

sub error($) {
    my $msg = shift;
    print "ERROR: ", $msg, "\n";
    exit 1;
}

sub test_for_snmp_tools() {
    foreach my $tool (qw/snmpget snmpset snmpwalk/) {
        my $version = my_exec("$tool --version");
        if ($version) {
            # print "$version\n";
        } else {
            error("$tool not found on system, please install net-smmp-utils");
        }
    }
}

sub list() {
    my $comps = {};

    my $output = my_exec("snmpwalk -On -c public -v 1 localhost $OIDBASE");
    my @lines = split /\n/, $output;
    my $oid = "";
    my $comp = "";
    for my $line (@lines) {
        if($line =~ /($OIDBASE\.\d+)\.0 = STRING: \"(\w+)\"/) {
            $oid = $1;
            $comp = $2;
        }
        if($oid and $line =~ /$oid\.2\.1 = STRING: \"(\w+)\"/) {
            $comps->{$comp} = $1;
        }
    }
    
    print "Current Log Levels:\n";
    for my $comp (sort keys %$comps) {
        printf("  %-30s  %s\n", $comp, $comps->{$comp});
    }
}

sub main() {
    # exits if tools don't exist
    test_for_snmp_tools();

    list();
}

main();
