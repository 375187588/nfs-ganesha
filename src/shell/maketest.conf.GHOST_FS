
Test FSAL_ReadOnly_Features
{
   Product = FSAL upon GHOSTFS.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_fsal.gansh
   Comment = FSAL Tests.

        # no error occured
        Success TestOk
        {
            NOT
          STDOUT =~ /ERR_FSAL_/m
        }
        
        # Command execution problem
        Failure BadStatus
        {
          STDERR =~ /Return code: [^0]/m
        }
        
        # FSAL error
        Failure ErrorFSAL
        {
          STDOUT =~ /ERR_FSAL_/m
        }        
        
        # Change dir checks
        Failure ErrorCd
        {
          NOT
          STDOUT =~ /^Current directory is \"\/\"/m
          OR
          NOT
          STDOUT =~ /^Current directory is \"\/AIX_4\/bin\"/m
          OR
          NOT
          STDOUT =~ /^Current directory is \"\/OSF1_V5\/etc\"/m
        }
        
        # ls check
        Failure ErrorLs
        {
          NOT
          STDOUT =~ /^\s*[0-9a-f]+\s*[\-pcdbl][\-rwxSsl]+\s*[0-9]+\s*[0-9]+\s*[0-9]+\s*[0-9]+\s*/m
        }
        
        # symlink check
        Failure ErrorSymlink
        {
           NOT
           STDOUT =~ /sherpa_ret\.X\.conf -> \.\.\/\.\.\/share\/etc\/sherpa_ret\.X\.conf/m
        }
        
        # stat check
        Failure ErrorStats
        {
           NOT
           STDOUT =~ /^FSAL_lookup\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_getattrs\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_opendir\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_readdir\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_closedir\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_readlink\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_GetUserCred\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_Init\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
           OR
           NOT
           STDOUT =~ /^FSAL_lookupPath\s*\|\s*[^0][0-9]*\s*\|\s*[^0][0-9]*\s*\|\s*0\s*\|\s*0/m
        }
        
        # anormal termination (shell should return 0)
        Failure AnormalTermination
        {
          STATUS != 0
        }
}




Test FSAL_ErrorCodes
{
   Product = FSAL upon GHOSTFS.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_fsal_errors.gansh
   Comment = FSAL error code tests.

        # test if we executed all the commands (10)
        # and the program ended well.
        Success TestOk
        {
          STDERR =~ /<11>[^:]*::[^:]*: Return code:/m
          AND
          STATUS == 0
        }
        
        # anormal termination (shell should return 0)
        Failure AnormalTermination
        {
          STATUS != 0
        }
        
        # commands 1,2,3 must return ERR_FSAL_BAD_INIT
        Failure should_return_ERR_FSAL_BAD_INIT
        {
          NOT
          STDERR =~ /<2>[^:]*::[^:]*: Return code: 20003/m
          OR
          NOT
          STDERR =~ /<3>[^:]*::[^:]*: Return code: 20003/m
          OR
          NOT
          STDERR =~ /<4>[^:]*::[^:]*: Return code: 20003/m
        }
        
        # commands 1,2,3 must return ERR_FSAL_BAD_INIT
        # for different reasons
        Failure Missing_ERR_FSAL_BAD_INIT
        {
          NOT
          STDOUT =~ /FSAL_Init:ERR_FSAL_BAD_INIT[^,]*,ERR_GHOSTFS_OPEN/m
  #        OR
  #        NOT
  #        STDOUT =~ /FSAL_Init:ERR_FSAL_BAD_INIT[^,]*,ERR_GHOSTFS_READ/m
          OR
          NOT
          STDOUT =~ /FSAL_Init:ERR_FSAL_BAD_INIT[^,]*,ERR_GHOSTFS_SYNTAX/m
        }
        
        # commands 4,5,9 must be successful
        Failure should_success
        {
          NOT
          STDERR =~ /<5>[^:]*::[^:]*: Return code: 0/m
          OR
          NOT
          STDERR =~ /<6>[^:]*::[^:]*: Return code: 0/m
          OR
          NOT
          STDERR =~ /<10>[^:]*::[^:]*: Return code: 0/m
        }        

        # commands 6,7,8 must result in a ERR_FSAL_ACCESS error
        Failure should_return_ERR_FSAL_ACCESS
        {
          NOT
          STDERR =~ /<7>[^:]*::[^:]*: Return code: 13/m
          OR
          NOT
          STDERR =~ /<8>[^:]*::[^:]*: Return code: 13/m
          OR
          NOT
          STDERR =~ /<9>[^:]*::[^:]*: Return code: 13/m
        }
        
        # commands that must return access error are opendir and lookup
        Failure Missing_ERR_FSAL_ACCESS
        {
          NOT
          STDOUT =~ /FSAL_opendir:ERR_FSAL_ACCESS[^,]*,ERR_GHOSTFS_ACCES/m
          OR
          NOT
          STDOUT =~ /FSAL_lookup:ERR_FSAL_ACCESS[^,]*,ERR_GHOSTFS_ACCES/m
        }
        
        # commands 10 must result in a ERR_FSAL_NOENT error
        Failure should_return_ERR_FSAL_NOENT
        {
          NOT
          STDERR =~ /<11>[^:]*::[^:]*: Return code: 2/m
        }
        
        # command that must return NOENT is lookupPath
        Failure Missing_ERR_FSAL_NOENT
        {
          NOT
          STDOUT =~ /FSAL_lookupPath:ERR_FSAL_NOENT[^,]*,ERR_GHOSTFS_NOENT/m
        }
        
}

Test FSAL_BugStat
{
   Product = FSAL layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_fsal_stat.gansh
   Comment = FSAL test.

        # no error occured,
        # all the compared value are equal
        # and directory counts are OK
        # listed attributes count is OK
        Success TestOk
        {
          STDERR =~ /Return code: 0/
            AND
            NOT
            STDERR =~ /Return code: [^0]/
            AND
          STDOUT =~ /STAT._.=STAT._./
            AND
           NOT
           STDOUT =~ /STAT._.<>STAT._./
            AND
          STDOUT =~ /LS._.=LS._./
            AND
          STDOUT =~ /STAT[^:\n]+:\s+[0-9]+\s+12$/m
            AND
         STDOUT =~ /LS5_1:.* 8$/m
           AND
           NOT
           STDOUT =~ /LS._.<>LS._./
        }
        
        # A command failed
        Failure NON_NULL_RETURN_STATUS
        {
          STDERR =~ /Return code: [^0]/m
        }

        # some stat are different
        Failure DIFFERENT_STAT
        {
          STDOUT =~ /STAT._.<>STAT._./   
        }

        # some stat are different
        Failure DIFFERENT_LS
        {
          STDOUT =~ /STAT._.<>STAT._./
        }
      
        Failure INVALID_DIRECTORY_COUNT
        {
          STDOUT =~ /LS5_1:\s+[0-9]+\s+(?:[^8]|8[0-9])/
        }
        
        Failure INVALID_ATTRIBUTES_COUNT
        {
          STDOUT =~ /STAT[^:\n]+: [0-9]+ (?:[^1]|1[^2]|12[0-9])/
        }

}


Test Cache_inode_Lookup_and_Stat
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_lookupstat.gansh
   Comment = FSAL Tests.

        # no error occured
        Success TestOk
        {
          STDERR =~ /Return code: 0/m
            AND
            NOT
          STDERR =~ /Return code: [^0]/m
            AND
          STDOUT =~ /STAT_ABS=STAT_REL/m  
            AND
            NOT
          STDOUT =~ /STAT_ABS<>STAT_REL/m
        }
      
      # A command failed
      Failure NON_NULL_RETURN_STATUS
      {
        STDERR =~ /Return code: [^0]/m
      }
      
      # A stat is different
      Failure ABSOLUTE_AND_RELATIVE_STAT_ARE_DIFFERENT
      {
         STDOUT =~ /STAT_ABS<>STAT_REL/m
      }

}

Test Cache_inode_Readdir
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_readdir.gansh
   Comment = Cache_inode Tests.

        # no error occured,
        # and there are 11 elements in root dir
        # and there are 6 elements in /AIX_5
        # and there are 5 elements in /share
        Success TestOk
        {
          STDERR =~ /Return code: 0/m
            AND
            NOT
          STDERR =~ /Return code: [^0]/m
            AND
          STDOUT =~ /LS_ROOT:\s+[0-9]+\s+11[^0-9]*/m
            AND
          STDOUT =~ /LS_AIX5:\s+[0-9]+\s+6[^0-9]*/m
            AND
          STDOUT =~ /LS_SHARE:\s+[0-9]+\s+5[^0-9]*/m
        }
      
      # A command failed
      Failure NON_NULL_RETURN_STATUS
      {
        STDERR =~ /Return code: [^0]/m
      }
      
      # invalid count
      # count is not 11 <=> not begin with 1
      #                     or begin with 1 not followed by 1
      #                     or begin with 11 followed by another number
      Failure INVALID_DIRECTORY_COUNT
      {
        STDOUT =~ /LS_ROOT:\s+[0-9]+\s+(?:[^1]|1[^1]|11[0-9])/m
        OR
        STDOUT =~ /LS_AIX5:\s+[0-9]+\s+(?:[^6]|6[0-9])/m
        OR
        STDOUT =~ /LS_SHARE:\s+[0-9]+\s+(?:[^5]|5[0-9])/m
      }
      
      # only paths may differs
      # the only "->" and "<-" that may be returned
      # during diffing stats are filepaths (the line ends with ":")
      Failure ABSOLUTE_AND_RELATIVE_LS_ARE_DIFFERENT
      {
        STDOUT =~ /<-(.*)[^:]$/m
        OR
        STDOUT =~ /->(.*)[^:]$/m
      }
      
}

Test Cache_inode_BugStat
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_stat.gansh
   Comment = cache inode test.

        # no error occured,
        # all the compared value are equal
        # and directory counts are OK
        # listed attributes count is OK
        Success TestOk
        {
          STDERR =~ /Return code: 0/
            AND
            NOT
            STDERR =~ /Return code: [^0]/
            AND
          STDOUT =~ /STAT._.=STAT._./
            AND
           NOT
           STDOUT =~ /STAT._.<>STAT._./
            AND
          STDOUT =~ /LS._.=LS._./
            AND
          STDOUT =~ /STAT[^:\n]+:\s+[0-9]+\s+12$/m
            AND
         STDOUT =~ /LS5_1:.* 6$/m
           AND
           NOT
           STDOUT =~ /LS._.<>LS._./
        }
        
        # A command failed
        Failure NON_NULL_RETURN_STATUS
        {
          STDERR =~ /Return code: [^0]/m
        }

        # some stat are different
        Failure DIFFERENT_STAT
        {
          STDOUT =~ /STAT._.<>STAT._./   
        }

        # some stat are different
        Failure DIFFERENT_LS
        {
          STDOUT =~ /STAT._.<>STAT._./
        }
      
        Failure INVALID_DIRECTORY_COUNT
        {
          STDOUT =~ /LS5_1:\s+[0-9]+\s+(?:[^6]|6[0-9])/
        }
        
        Failure INVALID_ATTRIBUTES_COUNT
        {
          STDOUT =~ /STAT[^:\n]+: [0-9]+ (?:[^1]|1[^2]|12[0-9])/
        }

}

Test Cache_inode_Caching
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_caching.gansh
   Comment = cache inode caching test.

        # no error occured,
        # stats are equal
        Success TestOk
        {
          STDERR =~ /Return code: 0/
            AND
            NOT
          STDERR =~ /Return code: [^0]/
            AND
          STDOUT =~ /FSAL_CALL_STATS_1=FSAL_CALL_STATS_2/
        }
        
        # A command failed
        Failure NON_NULL_RETURN_STATUS
        {
          STDERR =~ /Return code: [^0]/m
        }
        
        # some stat are different
        Failure DIFFERENT_STATS
        {
          STDOUT =~ /FSAL_CALL_STATS_1<>FSAL_CALL_STATS_2/   
        }


}

Test Cache_inode_Readdir_and_GC
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_readdir_and_gc.gansh
   Comment = Cache_inode Tests. Readdir, then perform garbagge collection and repopulate the cache with readdir.

	# No error occured: all commands succeeded
        # All the outputs are the same before and after GC
        Success TestOk
        {
          STDERR =~ /Return code: 0/m
            AND
            NOT
          STDERR =~ /Return code: [^0]/m
            AND
          STDOUT =~ /LS_SHARE=LS_SHARE_GC/m
	    AND
	  STDOUT =~ /LS_REL=LS_REL_GC/m
	    AND
	  STDOUT =~ /LS_AIX5=LS_AIX5_GC/m
	    AND
          STDOUT =~ /LS_BIG=LS_BIG_GC/m
        }
      
      # A command failed
      Failure NON_NULL_RETURN_STATUS
      {
        STDERR =~ /Return code: [^0]/m
      }
      

      # The readdir differs before and after the gc
      Failure GC_HAS_CHANGED_READDIR_OUTPUTS
      {
        STDOUT =~ /LS_SHARE<>LS_SHARE_GC/m
	  OR
 	STDOUT =~ /LS_REL<>LS_REL_GC/m
          OR
	STDOUT =~ /LS_AIX5<>LS_AIX5_GC/m
	  OR
        STDOUT =~ /LS_BIG<>LS_BIG_GC/m
      }
      
}
Test Cache_inode_Readdir_and_expire
{
   Product = Cache_inode layer.
   Command = ../../bin/`archi -M`/ganeshell -v ../scripts/test_cache_inode_readdir_and_expires.gansh
   Comment = Cache_inode Tests. Readdir, then wait for entry attr expiration and readdir again.

	# No error occured: all commands succeeded
        # All the outputs are the same before and after expiration
        Success TestOk
        {
          STDERR =~ /Return code: 0/m
            AND
            NOT
          STDERR =~ /Return code: [^0]/m
            AND
          STDOUT =~ /LS_SHARE=LS_SHARE_EXPIRES/m
	    AND
	  STDOUT =~ /LS_REL=LS_REL_EXPIRES/m
	    AND
	  STDOUT =~ /LS_AIX5=LS_AIX5_EXPIRES/m
	    AND
          STDOUT =~ /LS_BIG=LS_BIG_EXPIRES/m
        }
      
      # A command failed
      Failure NON_NULL_RETURN_STATUS
      {
        STDERR =~ /Return code: [^0]/m
      }
      

      # The readdir differs before and after the gc
      Failure GC_HAS_CHANGED_READDIR_OUTPUTS
      {
        STDOUT =~ /LS_SHARE<>LS_SHARE_EXPIRES/m
	  OR
 	STDOUT =~ /LS_REL<>LS_REL_EXPIRES/m
          OR
	STDOUT =~ /LS_AIX5<>LS_AIX5_EXPIRES/m
	  OR
        STDOUT =~ /LS_BIG<>LS_BIG_EXPIRES/m
      }
      
}
