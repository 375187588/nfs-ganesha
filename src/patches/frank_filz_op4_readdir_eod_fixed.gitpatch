diff --git a/src/NFS_Protocols/nfs4_op_readdir.c b/src/NFS_Protocols/nfs4_op_readdir.c
index 6e19243..26b066d 100644
--- a/src/NFS_Protocols/nfs4_op_readdir.c
+++ b/src/NFS_Protocols/nfs4_op_readdir.c
@@ -307,15 +307,6 @@ int nfs4_op_readdir(  struct nfs_argop4 * op ,
       return res_READDIR4.status;
     }
 
-  if( eod_met == END_OF_DIR )
-    {
-      /* This is the end of the directory */
-      res_READDIR4.READDIR4res_u.resok4.reply.eof = TRUE ;
-      memcpy( res_READDIR4.READDIR4res_u.resok4.cookieverf, cookie_verifier, NFS4_VERIFIER_SIZE ) ;
-    }
-  
-    
-
   /* For an empty directory, we will find only . and .., so reply af if the end if reached */
   if( num_entries == 0 )
     {
@@ -431,6 +422,12 @@ int nfs4_op_readdir(  struct nfs_argop4 * op ,
              break ;
         } /* for i */
 
+      if( eod_met == END_OF_DIR && ( i == num_entries ) )
+        {
+          /* This is the end of the directory */
+          res_READDIR4.READDIR4res_u.resok4.reply.eof = TRUE ;
+          memcpy( res_READDIR4.READDIR4res_u.resok4.cookieverf, cookie_verifier, NFS4_VERIFIER_SIZE ) ;
+        }
       
       /* Put the entry's list in the READDIR reply */
       res_READDIR4.READDIR4res_u.resok4.reply.entries = entry_nfs_array ;
