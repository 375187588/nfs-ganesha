diff --git a/src/MainNFSD/nfs_init.c b/src/MainNFSD/nfs_init.c
index fe7aec0..1d9db81 100644
--- a/src/MainNFSD/nfs_init.c
+++ b/src/MainNFSD/nfs_init.c
@@ -274,6 +274,9 @@ int nfs_set_param_default(nfs_parameter_t * p_nfs_param)
   p_nfs_param->core_param.expiration_dupreq = DUPREQ_EXPIRATION;
   p_nfs_param->core_param.nfs_port = NFS_PORT;
   p_nfs_param->core_param.mnt_port = 0;
+  p_nfs_param->core_param.bind_addr.sin_family = AF_INET;             /* IPv4 only right now */
+  p_nfs_param->core_param.bind_addr.sin_addr.s_addr = INADDR_ANY;     /* All the interfaces on the machine are used */
+  p_nfs_param->core_param.bind_addr.sin_port = 0;                     /* No port specified */
   p_nfs_param->core_param.nfs_program = NFS_PROGRAM;
   p_nfs_param->core_param.mnt_program = MOUNTPROG;
   p_nfs_param->core_param.nlm_program = NLMPROG;
diff --git a/src/MainNFSD/nfs_rpc_dispatcher_thread.c b/src/MainNFSD/nfs_rpc_dispatcher_thread.c
index 4d98eed..d51cff8 100644
--- a/src/MainNFSD/nfs_rpc_dispatcher_thread.c
+++ b/src/MainNFSD/nfs_rpc_dispatcher_thread.c
@@ -549,7 +549,7 @@ int nfs_Init_svc()
   /* Bind the udp and tcp socket to port 2049/tcp and 2049/udp */
   memset((char *)&sinaddr_nfs, 0, sizeof(sinaddr_nfs));
   sinaddr_nfs.sin_family = AF_INET;
-  sinaddr_nfs.sin_addr.s_addr = INADDR_ANY;     /* All the interfaces on the machine are used */
+  sinaddr_nfs.sin_addr.s_addr = nfs_param.core_param.bind_addr.sin_addr.s_addr;
   sinaddr_nfs.sin_port = htons(nfs_param.core_param.nfs_port);
 
   /* It's now time for binding the sockets */
@@ -573,7 +573,7 @@ int nfs_Init_svc()
   /* Bind the udp and tcp socket to ephemeral port for mountd */
   memset((char *)&sinaddr_mnt, 0, sizeof(sinaddr_mnt));
   sinaddr_mnt.sin_family = AF_INET;
-  sinaddr_mnt.sin_addr.s_addr = INADDR_ANY;     /* All the interfaces on the machine are used */
+  sinaddr_mnt.sin_addr.s_addr = nfs_param.core_param.bind_addr.sin_addr.s_addr;
   sinaddr_mnt.sin_port = htons(nfs_param.core_param.mnt_port);
 
   /* It's now time for binding the sockets */
@@ -596,7 +596,7 @@ int nfs_Init_svc()
   /* Bind the nlm service */
   memset((char *)&sinaddr_nlm, 0, sizeof(sinaddr_nlm));
   sinaddr_nlm.sin_family = AF_INET;
-  sinaddr_nlm.sin_addr.s_addr = INADDR_ANY;     /* All the interfaces on the machine are used */
+  sinaddr_nlm.sin_addr.s_addr = nfs_param.core_param.bind_addr.sin_addr.s_addr;
   sinaddr_nlm.sin_port = htons(nfs_param.core_param.nlm_port);
 
   /* It's now time for binding the sockets */
diff --git a/src/include/nfs_core.h b/src/include/nfs_core.h
index f5790b6..f969dbd 100644
--- a/src/include/nfs_core.h
+++ b/src/include/nfs_core.h
@@ -306,6 +306,7 @@ typedef struct nfs_core_param__
   unsigned short nfs_port;
   unsigned short mnt_port;
   unsigned short nlm_port;
+  struct sockaddr_in bind_addr; // IPv4 only for now...
   unsigned int nfs_program;
   unsigned int mnt_program;
   unsigned int nlm_program;
diff --git a/src/support/nfs_read_conf.c b/src/support/nfs_read_conf.c
index 8130983..b78c818 100644
--- a/src/support/nfs_read_conf.c
+++ b/src/support/nfs_read_conf.c
@@ -362,6 +362,17 @@ int nfs_read_core_conf(config_file_t in_config, nfs_core_parameter_t * pparam)
         {
           pparam->nlm_program = atoi(key_value);
         }
+      else if (!strcasecmp(key_name, "Bind_Addr"))
+        {
+          int rc;
+          memset(&pparam->bind_addr.sin_addr, 0, sizeof(pparam->bind_addr.sin_addr));
+          rc = inet_pton(AF_INET, key_value, &pparam->bind_addr.sin_addr);
+          if (rc <= 0)
+          {
+            /* Revert to INADDR_ANY in case of any error */
+            pparam->bind_addr.sin_addr.s_addr = INADDR_ANY;     /* All the interfaces on the machine are used */
+          }
+        }
       else if(!strcasecmp(key_name, "Core_Dump_Size"))
         {
           pparam->core_dump_size = atol(key_value);
