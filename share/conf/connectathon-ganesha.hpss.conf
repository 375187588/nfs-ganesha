###################################################
#     Export entries
###################################################


# First export entry

EXPORT
{
  
  # Export Id (mandatory)
  Export_Id = 1 ;
  
  # Exported path (mandatory)
  Path = "/my_exported_hone";
 
  Root_Access = "nfsclient[1-10].localdomain,nfsclient2" ;
  
  Access = "mynetwork.all";
  
  # Pseudo path for NFSv4 export (mandatory)
  Pseudo = "/users/clarck_kent";
  
  # Filesystem ID (default  666.666)
  # This sets the filesystem id for the entries of this export.
  Filesystem_id = 192.168 ;
  
}


# Second export entry (minimum set of options)

EXPORT
{
  
  Export_Id = 3;
  
  Path = "/my_exported_home" ;
  
  Root_Access = "fsclient1.localdomain,nfsclient2" ;
  
  Access = "mynetwork.all";
  
  Pseudo = "/users/bruce_wayne";
  
}



###################################################
#
# FSAL parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FSAL
{
  
  # logging level (NIV_FULL_DEBUG, NIV_DEBUG,
  # NIV_EVNMT, NIV_CRIT, NIV_MAJ, NIV_NULL)
  DebugLevel = "NIV_DEBUG" ;
  
  # Logging file
  LogFile    = "/dev/tty"  ;
  
  # maximum number of simultaneous calls
  # to the filesystem.
  # ( 0 = no limit ).  
  max_FS_calls = 10;
  

}


###################################################
#
# FileSystem common parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FileSystem
{ 
  
  MaxRead = 0 ;         # Max read size from FS
  MaxWrite = 0 ;        # Max write size to FS
    
  # If set, this mask is applied on the mode of created objects.
  Umask = 0000 ;
  
  # Setting one of those values to 0
  # will desactivate the associated feature :
  
  Link_support = 1;     # hardlink support (0/1)
  Symlink_support = 1;  # symlinks support (0/1)
  CanSetTime = 1;       # Is it possible to change file times (0/1)
  
}


###################################################
#
# HPSS client API configuration.
#
# For the description of those variables,
# see HPSS programmer's reference guide.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

HPSS
{

    # DCE principal name
    PrincipalName = "hpss_nfs";
    
    # DCE security keytab file
    KeytabPath = "/krb5/hpssserver.keytab";
    
    #defaut CosId for creating files
    DefaultCosId = 1;
    
    # thread credential lifetime
    CredentialLifetime = 3600;
    
}


###################################################
#
# Cache_Inode Hash Parameter
#
###################################################

CacheInode_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    Prealloc_Node_Pool_Size = 500 ;
}

###################################################
#
# Cache_Inode Client Parameter
#
###################################################

CacheInode_Client
{
    # LRU list item preallocated pool size
    LRU_Prealloc_PoolSize = 500 ;
        
    # Number of use of the LRU list before garbagging it
    LRU_Nb_Call_Gc_invalid = 100 ;
    
    # CacheInode Entry preallocated pool size
    Entry_Prealloc_PoolSize = 500 ;

    # CacheInode Dir Data preallocated pool size
    DirData_Prealloc_PoolSize = 200 ;

    # CacheInode Parent Data preallocated pool size
    ParentData_Prealloc_PoolSize = 500 ;

    # Time after which attributes should be renewed
    # A value of 0 will disable this feature
    Attr_Expiration_Time = 0 ;

    # Time after which symbolic links should be renewed
    # A value of 0 will disable this feature
    Symlink_Expiration_Time = 0 ;

    # Time after which directory content should be renewed
    # A value of 0 will disable this feature
    Directory_Expiration_Time = 0 ;

    # This flag tells if 'access' operation are to be performed
    # explicitely on the FileSystem or only on cached attributes information
    Use_Test_Access = 1 ;
}

###################################################
#	
# Cache_Inode Garbagge collection policy
#
###################################################

CacheInode_GC_Policy
{
    # Lifetime for a file before being a candidate to GC
    # A value of -1 will disable file GC
    File_Lifetime = 2 ;

    # Lifetime for a directory before being a candidate to GC
    # A value of -1 will disable file GC
    Directory_Lifetime = 5 ;

    # GC High Water Mark 
    NbEntries_HighWater = 5 ;

    # GC Low Water Mark
    NbEntries_LowWater = 0 ;

    # Runtime interval (in seconds)
    Runtime_Interval = 60 ;
}


###################################################
#
# File_content Client Parameter
#
###################################################

FileContent_Client
{
	# LRU list item preallocated pool size
	LRU_Prealloc_PoolSize = 500 ;

	#Number of use of the LRU list before garbagging it
    LRU_Nb_Call_Gc_invalid = 100 ;

	# File content preallocated pool size 
	Entry_Prealloc_PoolSize = 100 ;

 	# The place where this client should store its cached entry
	Cache_Directory = /tmp/ganesha.datacache ;
}


###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Worker_Param
{
	# Size of the prealloc pool size for pending jobs
	Pending_Job_Prealloc = 30 ;

	# LRU list item preallocated pool size
	LRU_Pending_Job_Prealloc_PoolSize = 200 ;

	# Number of job before GC on the worker's job pool size
	Nb_Before_GC = 101  ;

	# Number of preallocated entry for duplicate requests 
	Nb_DupReq_Prealloc = 100 	;
	
	# LRU list item preallocated pool size
	LRU_DupReq_Prealloc_PoolSize = 100 ;

	# Number of Duplicate Request before GC
	Nb_DupReq_Before_GC = 10 ;

}

###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Core_Param
{
	# Number of worker threads to be used
	Nb_Worker = 15 ;
	#Nb_Worker = 1 ;
	

	# Expiration for an entry in the duplicate request cache
	DupReq_Expiration = 2 ;
}

###################################################
#
# Duplicate Request Hash Parameter
#
###################################################

NFS_DupReq_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    Prealloc_Node_Pool_Size = 1000;
}

