###################################################
#     Export entries
###################################################

# First export entry

EXPORT
{
  
  # Export Id (mandatory)
  Export_Id = 1 ;
  
  # Exported path (mandatory)
  Path = "/cea/prot/S/lama";
 
  # Grant root access to thoses nodes, networks and @netgroups
  # - A hostname can contain wildcards (*?).
  # - Coma separated list.  
  Root_Access = "*" ;

  
  # Provide access to thoses nodes, networks and @netgroups
  # - A hostname can contain wildcards (*?).
  # - Coma separated list.
  Access = "*";
  
  # Pseudo path for NFSv4 export (mandatory)
  Pseudo = "/stockage/lama";
  
  # Type of access to the filesystem. (default: RW)
  # Possible values :
  # - RW: All read/write operations are allowed on filesystem.
  # - RO: Filesystem is read-only (for data and metadata).
  #       Read operations are allowed.
  # - MDONLY: Data operations (read/write) are forbidden.
  #           However, all metadata operations are allowed (mkdir, create, remove, ...).
  # - MDONLY_RO : Filesystem is read-only (for metadata). Both Data Write AND Data Read operations are FORBIDDEN.
  Access_Type = RW ;
    
  # The uid for root when its host doesn't have a root_access. (default: -2)
  Anonymous_root_uid = -2 ;
   
  ## Bit masks options ##
  
  # mask off setuid bit (default: FALSE)
  NOSUID = TRUE;
  
  # mask off setgid bit (default: FALSE)
  NOSGID = FALSE;
    
  # NFS protocols that can be used for accessing this export. (default: 2,3,4)
  NFS_Protocols = "2,3,4" ;
  
  # Transport layer that can be used for accessing this export. (default: UDP,TCP)
  Transport_Protocols = "UDP,TCP" ;
  
  # List of supported RPC_SEC_GSS authentication flavors for this export.
  # It can be a coma-separated list of the following values: sys, krb5i, krb5p.
  # (default: "sys")
  SecType = "sys";
  
  # The following parameters are pre-setted depending on
  # the filesystem configuration. However, the default values
  # can be overridden with the following export settings :
  
  # Maximum size for a read operation.
  # MaxRead = 0;
  
  # Maximum size for a write operation.
  # MaxWrite = 0;
  
  # Prefered size for a read operation.
  # PrefRead = 0;
  
  # Prefered size for a write operation.
  # PrefWrite = 0;
  
  # Prefered size for a readdir operation.
  # PrefReaddir = 0;

  # Filesystem ID (default  666.666)
  # This sets the filesystem id for the entries of this export.
  #### on utilise des identifiant commencant par 100 sur le X
  Filesystem_id = 101.1 ;
 
  # Should the client to this export entry come from a privileged port ?	
  PrivilegedPort = FALSE ;

  # Is File content cache enbled for this export entry 
  Cache_Data = TRUE ;
  
  # Export entry file system dependant options.
  # This must have the getsubopt format.
  # With HPSS, this options are 'fileset' and 'cos'.
  #FS_Specific = "fileset=toto,cos=1" ;
  #FS_Specific = "cos=13" ;
  #FS_Specific = "cos=13" ;
  FS_Specific = "cos=14" ;
 
  # Export entry "tag" name
  # Can be used as an alternative way of addressing the
  # export entry at mount time ( alternate to the 'Path')
  Tag = "prot" ;
  
}


###################################################
#
# FSAL parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FSAL
{
  
  # logging level (NIV_FULL_DEBUG, NIV_DEBUG,
  # NIV_EVENT, NIV_CRIT, NIV_MAJ, NIV_NULL)
  DebugLevel = "NIV_EVENT" ;
  
  # Logging file
  LogFile    = "/dev/tty" ;
  
  # maximum number of simultaneous calls
  # to the filesystem.
  # ( 0 = no limit ).  
  max_FS_calls = 15;
  
}


###################################################
#
# FileSystem common parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FileSystem
{ 
  
  MaxRead = 4194304 ;         # Max read size from FS
  MaxWrite = 4194304 ;        # Max write size to FS
    
  # If set, this mask is applied on the mode of created objects.
  Umask = 0000 ;
  
  # Setting one of those values to 0
  # will desactivate the associated feature :
  
  Link_support = TRUE;     # hardlink support (0/1)
  Symlink_support = TRUE;  # symlinks support (0/1)
  CanSetTime = TRUE;       # Is it possible to change file times (0/1)

  # Don't allow exporting cross dev paths 
  auth_xdev_export = TRUE;
   
}


###################################################
#
# HPSS client API configuration.
#
# For the description of those variables,
# see HPSS programmer's reference guide.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

HPSS
{
    # Hpss 6.2 only
    AuthMech = "krb5" ;   

    # DCE principal name
    PrincipalName = "hpssfs";
    
    # DCE security keytab file
    KeytabPath = "/var/hpss/etc/hpss.keytab";
    
    # thread credential lifetime
    CredentialLifetime = 3600;    

    # Number of retries in ClAPI
    # for connection failures with HPSS
    # (0: no retry, -1: retry forever)
    NumRetries = 100;

    # Retry delay if core is busy
    BusyDelay = 1;

    # Number of retries when core is busy
    # (0: no retry, -1: retry forever)
    BusyRetries = 20;

    # Max connections to core server
    MaxConnections = 100;
}


###################################################
#
# Cache_Inode Hash Parameter
#
###################################################

CacheInode_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 31 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    Prealloc_Node_Pool_Size = 10000 ;
}

###################################################
#
# Cache_Inode Client Parameter
#
###################################################

CacheInode_Client
{
    DebugLevel = "NIV_EVENT" ;
    LogFile    = "/dev/tty" ;
  
    # LRU list item preallocated pool size
    LRU_Prealloc_PoolSize = 250 ;

    #Number of use of the LRU list before garbagging it
    LRU_Nb_Call_Gc_invalid = 50 ;
    
    # CacheInode Entry preallocated pool size
    Entry_Prealloc_PoolSize = 250 ;

    # CacheInode Dir Data preallocated pool size
    DirData_Prealloc_PoolSize = 250 ;

    # CacheInode Parent Data preallocated pool size
    ParentData_Prealloc_PoolSize = 250 ;

    # Time after which attributes should be renewed
    # A value of 0 will disable this feature
    Attr_Expiration_Time = 120 ;

    # Time after which symbolic links should be renewed
    # A value of 0 will disable this feature
    Symlink_Expiration_Time = 1200 ;

    # Time after which directory content should be renewed
    # A value of 0 will disable this feature
    Directory_Expiration_Time = 3600 ;

    # This flag tells if 'access' operation are to be performed
    # explicitely on the FileSystem or only on cached attributes information
    Use_Test_Access = 1 ;

    # Number of opened files per thread (take care of tcp connections...)
    Max_Fd = 40 ;

    # Open file retention (in seconds)
    OpenFile_Retention = 60 ;

    # flag used to enable/disable this feature
    Use_OpenClose_cache = NO ;

    # Number of synclets to be used (default = 10 ), for writeback md only
    Nb_Synclet = 2; 
    
    # Number of asynchronous op desc to be used (default = 128) 
    Async_Op_Prealloc_Poolsize = 128 ;
  
    # Asynchronous Task Dispatcher Sleep Time (default = 60)
    #ATD_SleepTime = 15 ;
    ATD_SleepTime = 60 ;

    # Number of sync per synclet before LRU gc invalid (default = 10 )
    Nb_Sync_Before_GC = 10 ;

    # Directory for precreated objects 
    PreCreatedObject_Directory = /cea/prot/S/lama/s8/deniel/PreCreatedObj ;

    # Number of preallocated files 
    Nb_PreCreated_Files = 5 ;

    # Number of preallocated directories 
    Nb_PreCreated_Directories = 5 ;

}

###################################################
#	
# Cache_Inode Garbagge collection policy
#
###################################################

CacheInode_GC_Policy
{
    # Lifetime for a file before being a candidate to GC
    # A value of -1 will disable file GC
    File_Lifetime = 3000 ;
    #File_Lifetime = -1  ;

    # Lifetime for a directory before being a candidate to GC
    # A value of -1 will disable file GC
    #Directory_Lifetime = -1 ;
    Directory_Lifetime = 5000 ;

    # GC High Water Mark 
    NbEntries_HighWater = 100000 ;

    # GC Low Water Mark
    NbEntries_LowWater = 80000 ;

    # Runtime interval (in seconds)
    Runtime_Interval = 3000 ;

    # Number of calls to be made to Cache_Inode layer before testing for GC
    Nb_Call_Before_GC = 10000 ;
}


###################################################
#
# File_content Client Parameter
#
###################################################

FileContent_Client
{
	# LRU list item preallocated pool size
	LRU_Prealloc_PoolSize = 100 ;

	#Number of use of the LRU list before garbagging it
    	LRU_Nb_Call_Gc_invalid = 100 ;

	# File content preallocated pool size 
	Entry_Prealloc_PoolSize = 100 ;

 	# The place where this client should store its cached entry
	Cache_Directory = "/tmp/ganesha.datacache" ;

        # Number of opened files per thread (take care of tcp connections...)
        Max_Fd = 40 ;

       # Open file retention (in seconds)
       OpenFile_Retention = 60 ;

       # flag used to enable/disable this feature
       Use_OpenClose_cache = NO ;
}


###################################################
#
# File_Content  Garbagge collection policy
#
###################################################

FileContent_GC_Policy
{
    # Lifetime for a file before being a candidate to GC
    # A value of -1 will disable file GC
    Lifetime = -1 ;

    # The duration of inactivity needed for a file to become
    # eligible for being fushed to the FSAL
    # A value of -1 will disable file flush to FSAL
    Inactivity_Before_Flush = 12000 ;

    # GC High Water Mark (in percent)
    Df_HighWater = 90 ;

    # GC Low Water Mark (in percent)
    Df_LowWater = 80 ;

    # Runtime interval (in seconds)
    Runtime_Interval = 12000 ;

    #  !!!!! DEPRECATED PARAMETER !!!!!! 
    # Df Interval (in seconds)
    # Df_Interval = 60 ;

    # Number of calls to be made to File_Content layer before testing for GC
    Nb_Call_Before_GC = 10000 ;
    
    # Grace delay before flushing files
    Emergency_Grace_Delay = 600 ;

}

###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Worker_Param
{
	# Size of the prealloc pool size for pending jobs
	Pending_Job_Prealloc = 100 ;

	# LRU list item preallocated pool size
	LRU_Pending_Job_Prealloc_PoolSize = 100 ;

	# Number of job before GC on the worker's job pool size
	Nb_Before_GC = 85  ;

	# Number of preallocated entry for duplicate requests 
	Nb_DupReq_Prealloc = 100 	;
	
	# LRU list item preallocated pool size
	LRU_DupReq_Prealloc_PoolSize = 100 ;

	# Number of Duplicate Request before GC
	Nb_DupReq_Before_GC = 50 ;

	# Number of preallocated IP/Name cache entries
	Nb_IP_Stats_Prealloc = 10 ;
}

###################################################
#
#  NFS_Worker_Param 
#
###################################################

NFS_Core_Param
{
	# Number of worker threads to be used
	# Nb_Worker = 20 ;
	Nb_Worker = 2 ;

        # Maximum Number of worker threads performing gc at the same time
        Nb_MaxConcurrentGC = 2 ;

	# NFS Port to be used 
	# Default value is 2049
	# NFS_Port = 2049 ;

	# Mount port to be used 
	# Default is 0 (let the system use an available ephemeral port)
	# MNT_Port = 0 ;
	
	# NFS RPC Program number 
	# Default value is 100003
	# NFS_Program = 100003 ;

	# Mount protocol RPC Program Number
	# Default value is 100005
	# MNT_Program = 100005 ;

	# Expiration for an entry in the duplicate request cache
	DupReq_Expiration = 300 ;

	# Size to be used for the core dump file (if the daemon crashes)
        ##Core_Dump_Size = 0 ;
    
    # The path for the stats file
    Stats_File_Path = "/tmp/stats" ;

    # The delay for producing stats (in seconds)
    Stats_Update_Delay = 600 ;

    # Should we drop internal EIO (client will hang until pb fixed) or inform the client ? */
    #Drop_IO_Errors = TRUE ;

    # Should we drop EINVAL errors (client will hang until pb fixed) or inform the client ? */
    #Drop_Inval_Errors = FALSE ;

}

###################################################
#
# Duplicate Request Hash Parameter
#
###################################################

NFS_DupReq_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    Prealloc_Node_Pool_Size = 500;
}

###################################################
#
# IP/Name cache paramters
#
###################################################

NFS_IP_Name
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Number of preallocated RBT nodes
    Prealloc_Node_Pool_Size = 50;

    # Expiration time for this cache 
    Expiration_Time = 3600 ;   
}


###################################################
#
# Buddy Memory Manager configuration
# for worker threads and dispatcher.
#
###################################################

BUDDY_MALLOC
{
  # buddy page size for workers
  # (must be a power of 2 )
  Page_Size = 8388608;
  
  # Indicates whether buddy memory manager can
  # alloc new pages for client's needs.
  # (TRUE is recommanded)
  Enable_OnDemand_Alloc = TRUE;

  # Indicates whether buddy memory manager
  # allow threads to alloc memory areas
  # that are larger than Page_Size.
  Enable_Extra_Alloc = TRUE;

  # Indicates whether buddy memory manager
  # can release unused pages, according to
  # GC_Keep_Factor and GC_Keep_Min parameters.
  Enable_GC = TRUE;
  
  # Buddy's GC must keep at least
  # GC_Keep_Factor times the current number of used pages.
  GC_Keep_Factor = 2;

  # Buddy's GC must keep at least this number of pages.
  GC_Keep_Min = 2;
  
  # log file for memory errors
  LogFile = "/dev/tty" ;

}
