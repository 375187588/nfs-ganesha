.TH "log_functions.c" 3 "31 Mar 2009" "Version 0.1" "Log Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log_functions.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib.h>\fP
.br
\fC#include <ctype.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <stdarg.h>\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <signal.h>\fP
.br
\fC#include 'log_functions.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBThreadLogContext_t\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBSTR_LEN_TXT\fP   2048"
.br
.ti -1c
.RI "#define \fBPATH_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBMAX_STR_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBMAX_NUM_FAMILY\fP   50"
.br
.ti -1c
.RI "#define \fBUNUSED_SLOT\fP   -1"
.br
.ti -1c
.RI "#define \fBP\fP(_mutex_)   pthread_mutex_lock( &_mutex_)"
.br
.ti -1c
.RI "#define \fBV\fP(_mutex_)   pthread_mutex_unlock( &_mutex_ )"
.br
.ti -1c
.RI "#define \fBLocaltime_r\fP   localtime_r"
.br
.ti -1c
.RI "#define \fBONE_STEP\fP   do { iterformat +=1 ; len += 1; } while(0)"
.br
.ti -1c
.RI "#define \fBNO_TYPE\fP   0"
.br
.ti -1c
.RI "#define \fBINT_TYPE\fP   1"
.br
.ti -1c
.RI "#define \fBLONG_TYPE\fP   2"
.br
.ti -1c
.RI "#define \fBCHAR_TYPE\fP   3"
.br
.ti -1c
.RI "#define \fBSTRING_TYPE\fP   4"
.br
.ti -1c
.RI "#define \fBFLOAT_TYPE\fP   5"
.br
.ti -1c
.RI "#define \fBDOUBLE_TYPE\fP   6"
.br
.ti -1c
.RI "#define \fBPOINTEUR_TYPE\fP   7"
.br
.ti -1c
.RI "#define \fBEXTENDED_TYPE\fP   8"
.br
.ti -1c
.RI "#define \fBSTATUS_SHORT\fP   1"
.br
.ti -1c
.RI "#define \fBSTATUS_LONG\fP   2"
.br
.ti -1c
.RI "#define \fBCONTEXTE_SHORT\fP   3"
.br
.ti -1c
.RI "#define \fBCONTEXTE_LONG\fP   4"
.br
.ti -1c
.RI "#define \fBERREUR_SHORT\fP   5"
.br
.ti -1c
.RI "#define \fBERREUR_LONG\fP   6"
.br
.ti -1c
.RI "#define \fBERRNUM_SHORT\fP   7"
.br
.ti -1c
.RI "#define \fBERRNUM_LONG\fP   8"
.br
.ti -1c
.RI "#define \fBERRCTX_SHORT\fP   9"
.br
.ti -1c
.RI "#define \fBERRCTX_LONG\fP   10"
.br
.ti -1c
.RI "#define \fBCHANGE_ERR_FAMILY\fP   11"
.br
.ti -1c
.RI "#define \fBCHANGE_CTX_FAMILY\fP   12"
.br
.ti -1c
.RI "#define \fBNO_LONG\fP   0"
.br
.ti -1c
.RI "#define \fBSHORT_LG\fP   1"
.br
.ti -1c
.RI "#define \fBLONG_LG\fP   2"
.br
.ti -1c
.RI "#define \fBLONG_LONG_LG\fP   3"
.br
.ti -1c
.RI "#define \fBMAX_STR_TOK\fP   1024"
.br
.ti -1c
.RI "#define \fBVA_ARG_ERREUR_T\fP   numero = va_arg( arguments, long ) ; label  = va_arg( arguments, char * ) ; msg    = va_arg( arguments, char *)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBReturnLevelAscii\fP (char *LevelEnAscii)"
.br
.ti -1c
.RI "char * \fBReturnLevelInt\fP (int level)"
.br
.ti -1c
.RI "int \fBSetNamePgm\fP (char *nom)"
.br
.ti -1c
.RI "int \fBSetNameHost\fP (char *nom)"
.br
.ti -1c
.RI "int \fBSetNameFunction\fP (char *nom)"
.br
.ti -1c
.RI "int \fBSetNameFileLog\fP (char *nom)"
.br
.ti -1c
.RI "char * \fBReturnNamePgm\fP ()"
.br
.ti -1c
.RI "char * \fBReturnNameHost\fP ()"
.br
.ti -1c
.RI "char * \fBReturnNameFunction\fP ()"
.br
.ti -1c
.RI "char * \fBReturnNameFileLog\fP ()"
.br
.ti -1c
.RI "int \fBReturnLevelDebug\fP ()"
.br
.ti -1c
.RI "int \fBSetLevelDebug\fP (int level_to_set)"
.br
.ti -1c
.RI "int \fBInitDebug\fP (int level_to_set)"
.br
.ti -1c
.RI "int \fBDisplayLogString\fP (char *chaine, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogFd\fP (int fd, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogFlux\fP (FILE *flux, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogPath\fP (char *path, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLog\fP (char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogStringLevel\fP (char *tampon, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogFluxLevel\fP (FILE *flux, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogFdLevel\fP (int fd, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogLevel\fP (int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogPathLevel\fP (char *path, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBAddFamilyError\fP (int num_family, char *name_family, family_error_t *tab_err)"
.br
.ti -1c
.RI "int \fBRemoveFamilyError\fP (int num_family)"
.br
.ti -1c
.RI "char * \fBReturnNameFamilyError\fP (int num_family)"
.br
.ti -1c
.RI "int \fBDisplayErrorStringLine\fP (char *tampon, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBDisplayErrorFluxLine\fP (FILE *flux, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBDisplayErrorFdLine\fP (int fd, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBDisplayErrorLogLine\fP (int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBAddLogStreamJd\fP (log_t *pjd, type_log_stream_t type, desc_log_stream_t desc_voie, niveau_t niveau, aiguillage_t aiguillage)"
.br
.ti -1c
.RI "int \fBDisplayLogJdLevel\fP (log_t jd, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayLogJd\fP (log_t jd, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayErrorJdLine\fP (log_t jd, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBlog_vsnprintf\fP (char *out, size_t taille, char *format, va_list arguments)"
.br
.ti -1c
.RI "int \fBlog_sprintf\fP (char *out, char *format,...)"
.br
.ti -1c
.RI "int \fBlog_snprintf\fP (char *out, size_t n, char *format,...)"
.br
.ti -1c
.RI "int \fBlog_fprintf\fP (FILE *file, char *format,...)"
.br
.ti -1c
.RI "int \fBlog_vfprintf\fP (FILE *file, char *format, va_list arguments)"
.br
.ti -1c
.RI "int \fBlog_printf\fP (char *format,...)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define CHANGE_CTX_FAMILY   12"
.PP
Definition at line 1150 of file log_functions.c.
.SS "#define CHANGE_ERR_FAMILY   11"
.PP
Definition at line 1149 of file log_functions.c.
.SS "#define CHAR_TYPE   3"
.PP
Definition at line 1130 of file log_functions.c.
.SS "#define CONTEXTE_LONG   4"
.PP
Definition at line 1142 of file log_functions.c.
.SS "#define CONTEXTE_SHORT   3"
.PP
Definition at line 1141 of file log_functions.c.
.SS "#define DOUBLE_TYPE   6"
.PP
Definition at line 1133 of file log_functions.c.
.SS "#define ERRCTX_LONG   10"
.PP
Definition at line 1148 of file log_functions.c.
.SS "#define ERRCTX_SHORT   9"
.PP
Definition at line 1147 of file log_functions.c.
.SS "#define ERREUR_LONG   6"
.PP
Definition at line 1144 of file log_functions.c.
.SS "#define ERREUR_SHORT   5"
.PP
Definition at line 1143 of file log_functions.c.
.SS "#define ERRNUM_LONG   8"
.PP
Definition at line 1146 of file log_functions.c.
.SS "#define ERRNUM_SHORT   7"
.PP
Definition at line 1145 of file log_functions.c.
.SS "#define EXTENDED_TYPE   8"
.PP
Definition at line 1137 of file log_functions.c.
.SS "#define FLOAT_TYPE   5"
.PP
Definition at line 1132 of file log_functions.c.
.SS "#define INT_TYPE   1"
.PP
Definition at line 1128 of file log_functions.c.
.SS "#define Localtime_r   localtime_r"
.PP
Definition at line 175 of file log_functions.c.
.SS "#define LONG_LG   2"
.PP
Definition at line 1155 of file log_functions.c.
.SS "#define LONG_LONG_LG   3"
.PP
Definition at line 1156 of file log_functions.c.
.SS "#define LONG_TYPE   2"
.PP
Definition at line 1129 of file log_functions.c.
.SS "#define MAX_NUM_FAMILY   50"
.PP
Definition at line 103 of file log_functions.c.
.SS "#define MAX_STR_LEN   1024"
.PP
Definition at line 102 of file log_functions.c.
.SS "#define MAX_STR_TOK   1024"
.PP
Definition at line 1158 of file log_functions.c.
.SS "#define NO_LONG   0"
.PP
Definition at line 1153 of file log_functions.c.
.SS "#define NO_TYPE   0"
.PP
Definition at line 1127 of file log_functions.c.
.SS "#define ONE_STEP   do { iterformat +=1 ; len += 1; } while(0)"
.PP
Definition at line 1125 of file log_functions.c.
.SS "#define P(_mutex_)   pthread_mutex_lock( &_mutex_)"
.PP
Definition at line 107 of file log_functions.c.
.SS "#define PATH_LEN   1024"
.PP
Definition at line 101 of file log_functions.c.
.SS "#define POINTEUR_TYPE   7"
.PP
Definition at line 1134 of file log_functions.c.
.SS "#define SHORT_LG   1"
.PP
Definition at line 1154 of file log_functions.c.
.SS "#define STATUS_LONG   2"
.PP
Definition at line 1140 of file log_functions.c.
.SS "#define STATUS_SHORT   1"
.PP
Definition at line 1139 of file log_functions.c.
.SS "#define STR_LEN_TXT   2048"
.PP
Definition at line 100 of file log_functions.c.
.SS "#define STRING_TYPE   4"
.PP
Definition at line 1131 of file log_functions.c.
.SS "#define UNUSED_SLOT   -1"
.PP
Definition at line 104 of file log_functions.c.
.SS "#define V(_mutex_)   pthread_mutex_unlock( &_mutex_ )"
.PP
Definition at line 108 of file log_functions.c.
.SS "#define VA_ARG_ERREUR_T   numero = va_arg( arguments, long ) ; label  = va_arg( arguments, char * ) ; msg    = va_arg( arguments, char *)"
.PP
.SH "Function Documentation"
.PP 
.SS "int AddFamilyError (int num_family, char * name_family, family_error_t * tab_err)"
.PP
Definition at line 794 of file log_functions.c.
.SS "int AddLogStreamJd (log_t * pjd, type_log_stream_t type, desc_log_stream_t desc_voie, niveau_t niveau, aiguillage_t aiguillage)"
.PP
Definition at line 966 of file log_functions.c.
.SS "int DisplayErrorFdLine (int fd, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 943 of file log_functions.c.
.SS "int DisplayErrorFluxLine (FILE * flux, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 933 of file log_functions.c.
.SS "int DisplayErrorJdLine (log_t jd, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 1113 of file log_functions.c.
.SS "int DisplayErrorLogLine (int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 953 of file log_functions.c.
.SS "int DisplayErrorStringLine (char * tampon, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 923 of file log_functions.c.
.SS "int DisplayLog (char * format,  ...)"
.PP
Definition at line 672 of file log_functions.c.
.SS "int DisplayLogFd (int fd, char * format,  ...)"
.PP
Definition at line 545 of file log_functions.c.
.SS "int DisplayLogFdLevel (int fd, int level, char * format,  ...)"
.PP
Definition at line 733 of file log_functions.c.
.SS "int DisplayLogFlux (FILE * flux, char * format,  ...)"
.PP
Definition at line 569 of file log_functions.c.
.SS "int DisplayLogFluxLevel (FILE * flux, int level, char * format,  ...)"
.PP
Definition at line 714 of file log_functions.c.
.SS "int DisplayLogJd (log_t jd, char * format,  ...)"
.PP
Definition at line 1071 of file log_functions.c.
.SS "int DisplayLogJdLevel (log_t jd, int level, char * format,  ...)"
.PP
Definition at line 997 of file log_functions.c.
.SS "int DisplayLogLevel (int level, char * format,  ...)"
.PP
Definition at line 751 of file log_functions.c.
.SS "int DisplayLogPath (char * path, char * format,  ...)"
.PP
Definition at line 654 of file log_functions.c.
.SS "int DisplayLogPathLevel (char * path, int level, char * format,  ...)"
.PP
Definition at line 770 of file log_functions.c.
.SS "int DisplayLogString (char * chaine, char * format,  ...)"
.PP
Definition at line 523 of file log_functions.c.
.SS "int DisplayLogStringLevel (char * tampon, int level, char * format,  ...)"
.PP
Definition at line 693 of file log_functions.c.
.SS "int InitDebug (int level_to_set)"
.PP
Definition at line 456 of file log_functions.c.
.SS "int log_fprintf (FILE * file, char * format,  ...)"
.PP
Definition at line 1755 of file log_functions.c.
.SS "int log_printf (char * format,  ...)"
.PP
Definition at line 1780 of file log_functions.c.
.SS "int log_snprintf (char * out, size_t n, char * format,  ...)"
.PP
Definition at line 1743 of file log_functions.c.
.SS "int log_sprintf (char * out, char * format,  ...)"
.PP
Definition at line 1731 of file log_functions.c.
.SS "int log_vfprintf (FILE * file, char * format, va_list arguments)"
.PP
Definition at line 1769 of file log_functions.c.
.SS "int log_vsnprintf (char * out, size_t taille, char * format, va_list arguments)"
.PP
Definition at line 1161 of file log_functions.c.
.SS "int RemoveFamilyError (int num_family)"
.PP
Definition at line 822 of file log_functions.c.
.SS "int ReturnLevelAscii (char * LevelEnAscii)"
.PP
Definition at line 258 of file log_functions.c.
.SS "int ReturnLevelDebug ()"
.PP
Definition at line 410 of file log_functions.c.
.SS "char* ReturnLevelInt (int level)"
.PP
Definition at line 270 of file log_functions.c.
.SS "char* ReturnNameFamilyError (int num_family)"
.PP
Definition at line 837 of file log_functions.c.
.SS "char* ReturnNameFileLog ()"
.PP
Definition at line 368 of file log_functions.c.
.SS "char* ReturnNameFunction ()"
.PP
Definition at line 357 of file log_functions.c.
.SS "char* ReturnNameHost ()"
.PP
Definition at line 347 of file log_functions.c.
.SS "char* ReturnNamePgm ()"
.PP
Definition at line 338 of file log_functions.c.
.SS "int SetLevelDebug (int level_to_set)"
.PP
Definition at line 415 of file log_functions.c.
.SS "int SetNameFileLog (char * nom)"
.PP
Definition at line 325 of file log_functions.c.
.SS "int SetNameFunction (char * nom)"
.PP
Definition at line 311 of file log_functions.c.
.SS "int SetNameHost (char * nom)"
.PP
Definition at line 300 of file log_functions.c.
.SS "int SetNamePgm (char * nom)"
.PP
Definition at line 286 of file log_functions.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Log Library from the source code.
