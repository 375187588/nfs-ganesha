.TH "log_functions.c" 3 "15 Sep 2010" "Version 0.1" "Log Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log_functions.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib.h>\fP
.br
\fC#include <ctype.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <stdarg.h>\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <signal.h>\fP
.br
\fC#include <libgen.h>\fP
.br
\fC#include 'log_macros.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBThreadLogContext_t\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBSTR_LEN_TXT\fP   2048"
.br
.ti -1c
.RI "#define \fBPATH_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBMAX_STR_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBMAX_NUM_FAMILY\fP   50"
.br
.ti -1c
.RI "#define \fBUNUSED_SLOT\fP   -1"
.br
.ti -1c
.RI "#define \fBLogChanges\fP(format, args...)"
.br
.ti -1c
.RI "#define \fBLocaltime_r\fP   localtime_r"
.br
.ti -1c
.RI "#define \fBONE_STEP\fP   do { iterformat +=1 ; len += 1; } while(0)"
.br
.ti -1c
.RI "#define \fBNO_TYPE\fP   0"
.br
.ti -1c
.RI "#define \fBINT_TYPE\fP   1"
.br
.ti -1c
.RI "#define \fBLONG_TYPE\fP   2"
.br
.ti -1c
.RI "#define \fBCHAR_TYPE\fP   3"
.br
.ti -1c
.RI "#define \fBSTRING_TYPE\fP   4"
.br
.ti -1c
.RI "#define \fBFLOAT_TYPE\fP   5"
.br
.ti -1c
.RI "#define \fBDOUBLE_TYPE\fP   6"
.br
.ti -1c
.RI "#define \fBPOINTEUR_TYPE\fP   7"
.br
.ti -1c
.RI "#define \fBEXTENDED_TYPE\fP   8"
.br
.ti -1c
.RI "#define \fBSTATUS_SHORT\fP   1"
.br
.ti -1c
.RI "#define \fBSTATUS_LONG\fP   2"
.br
.ti -1c
.RI "#define \fBCONTEXTE_SHORT\fP   3"
.br
.ti -1c
.RI "#define \fBCONTEXTE_LONG\fP   4"
.br
.ti -1c
.RI "#define \fBERREUR_SHORT\fP   5"
.br
.ti -1c
.RI "#define \fBERREUR_LONG\fP   6"
.br
.ti -1c
.RI "#define \fBERRNUM_SHORT\fP   7"
.br
.ti -1c
.RI "#define \fBERRNUM_LONG\fP   8"
.br
.ti -1c
.RI "#define \fBERRCTX_SHORT\fP   9"
.br
.ti -1c
.RI "#define \fBERRCTX_LONG\fP   10"
.br
.ti -1c
.RI "#define \fBCHANGE_ERR_FAMILY\fP   11"
.br
.ti -1c
.RI "#define \fBCHANGE_CTX_FAMILY\fP   12"
.br
.ti -1c
.RI "#define \fBERRNO_SHORT\fP   13"
.br
.ti -1c
.RI "#define \fBERRNO_LONG\fP   14"
.br
.ti -1c
.RI "#define \fBNO_LONG\fP   0"
.br
.ti -1c
.RI "#define \fBSHORT_LG\fP   1"
.br
.ti -1c
.RI "#define \fBLONG_LG\fP   2"
.br
.ti -1c
.RI "#define \fBLONG_LONG_LG\fP   3"
.br
.ti -1c
.RI "#define \fBMAX_STR_TOK\fP   LOG_MAX_STRLEN"
.br
.ti -1c
.RI "#define \fBVA_ARG_ERREUR_T\fP   numero = va_arg( arguments, long ) ; label  = va_arg( arguments, char * ) ; msg    = va_arg( arguments, char *)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBReturnLevelAscii\fP (const char *LevelEnAscii)"
.br
.ti -1c
.RI "char * \fBReturnLevelInt\fP (int level)"
.br
.ti -1c
.RI "void \fBSetNamePgm\fP (char *nom)"
.br
.ti -1c
.RI "void \fBSetNameHost\fP (char *nom)"
.br
.ti -1c
.RI "void \fBSetNameFunction\fP (char *nom)"
.br
.ti -1c
.RI "void \fBSetComponentLogLevel\fP (log_components_t component, int level_to_set)"
.br
.ti -1c
.RI "int \fBReturnLevelDebug\fP ()"
.br
.ti -1c
.RI "void \fB_SetLevelDebug\fP (int level_to_set)"
.br
.ti -1c
.RI "void \fBSetLevelDebug\fP (int level_to_set)"
.br
.ti -1c
.RI "void \fBInitLogging\fP ()"
.br
.ti -1c
.RI "int \fBAddFamilyError\fP (int num_family, char *name_family, family_error_t *tab_err)"
.br
.ti -1c
.RI "char * \fBReturnNameFamilyError\fP (int num_family)"
.br
.ti -1c
.RI "int \fBMakeLogError\fP (char *buffer, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "int \fBlog_vsnprintf\fP (char *out, size_t taille, char *format, va_list arguments)"
.br
.ti -1c
.RI "int \fBlog_snprintf\fP (char *out, size_t n, char *format,...)"
.br
.ti -1c
.RI "int \fBlog_fprintf\fP (FILE *file, char *format,...)"
.br
.ti -1c
.RI "log_component_info \fB__attribute__\fP ((__unused__))"
.br
.ti -1c
.RI "int \fBDisplayLogComponentLevel\fP (log_components_t component, int level, char *format,...)"
.br
.ti -1c
.RI "int \fBDisplayErrorComponentLogLine\fP (log_components_t component, int num_family, int num_error, int status, int ma_ligne)"
.br
.ti -1c
.RI "void \fBSetDefaultLogging\fP (char *name)"
.br
.ti -1c
.RI "int \fBSetComponentLogFile\fP (log_components_t component, char *name)"
.br
.ti -1c
.RI "void \fBSetComponentLogBuffer\fP (log_components_t component, char *buffer)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBemergency\fP = '* log \fBemergency\fP *'"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define CHANGE_CTX_FAMILY   12"
.PP
Definition at line 679 of file log_functions.c.
.SS "#define CHANGE_ERR_FAMILY   11"
.PP
Definition at line 678 of file log_functions.c.
.SS "#define CHAR_TYPE   3"
.PP
Definition at line 659 of file log_functions.c.
.SS "#define CONTEXTE_LONG   4"
.PP
Definition at line 671 of file log_functions.c.
.SS "#define CONTEXTE_SHORT   3"
.PP
Definition at line 670 of file log_functions.c.
.SS "#define DOUBLE_TYPE   6"
.PP
Definition at line 662 of file log_functions.c.
.SS "#define ERRCTX_LONG   10"
.PP
Definition at line 677 of file log_functions.c.
.SS "#define ERRCTX_SHORT   9"
.PP
Definition at line 676 of file log_functions.c.
.SS "#define ERREUR_LONG   6"
.PP
Definition at line 673 of file log_functions.c.
.SS "#define ERREUR_SHORT   5"
.PP
Definition at line 672 of file log_functions.c.
.SS "#define ERRNO_LONG   14"
.PP
Definition at line 681 of file log_functions.c.
.SS "#define ERRNO_SHORT   13"
.PP
Definition at line 680 of file log_functions.c.
.SS "#define ERRNUM_LONG   8"
.PP
Definition at line 675 of file log_functions.c.
.SS "#define ERRNUM_SHORT   7"
.PP
Definition at line 674 of file log_functions.c.
.SS "#define EXTENDED_TYPE   8"
.PP
Definition at line 666 of file log_functions.c.
.SS "#define FLOAT_TYPE   5"
.PP
Definition at line 661 of file log_functions.c.
.SS "#define INT_TYPE   1"
.PP
Definition at line 657 of file log_functions.c.
.SS "#define Localtime_r   localtime_r"
.PP
Definition at line 127 of file log_functions.c.
.SS "#define LogChanges(format, args...)"\fBValue:\fP
.PP
.nf
do { \
    if (LogComponents[COMPONENT_LOG].comp_log_type != TESTLOG || \
        LogComponents[COMPONENT_LOG].comp_log_level == NIV_FULL_DEBUG) \
      DisplayLogComponentLevel(COMPONENT_LOG, NIV_NULL, 'LOG: ' format, ## args ); \
  } while (0)
.fi
.PP
Definition at line 88 of file log_functions.c.
.SS "#define LONG_LG   2"
.PP
Definition at line 685 of file log_functions.c.
.SS "#define LONG_LONG_LG   3"
.PP
Definition at line 686 of file log_functions.c.
.SS "#define LONG_TYPE   2"
.PP
Definition at line 658 of file log_functions.c.
.SS "#define MAX_NUM_FAMILY   50"
.PP
Definition at line 55 of file log_functions.c.
.SS "#define MAX_STR_LEN   1024"
.PP
Definition at line 54 of file log_functions.c.
.SS "#define MAX_STR_TOK   LOG_MAX_STRLEN"
.PP
Definition at line 688 of file log_functions.c.
.SS "#define NO_LONG   0"
.PP
Definition at line 683 of file log_functions.c.
.SS "#define NO_TYPE   0"
.PP
Definition at line 656 of file log_functions.c.
.SS "#define ONE_STEP   do { iterformat +=1 ; len += 1; } while(0)"
.PP
Definition at line 654 of file log_functions.c.
.SS "#define PATH_LEN   1024"
.PP
Definition at line 53 of file log_functions.c.
.SS "#define POINTEUR_TYPE   7"
.PP
Definition at line 663 of file log_functions.c.
.SS "#define SHORT_LG   1"
.PP
Definition at line 684 of file log_functions.c.
.SS "#define STATUS_LONG   2"
.PP
Definition at line 669 of file log_functions.c.
.SS "#define STATUS_SHORT   1"
.PP
Definition at line 668 of file log_functions.c.
.SS "#define STR_LEN_TXT   2048"
.PP
Definition at line 52 of file log_functions.c.
.SS "#define STRING_TYPE   4"
.PP
Definition at line 660 of file log_functions.c.
.SS "#define UNUSED_SLOT   -1"
.PP
Definition at line 56 of file log_functions.c.
.SS "#define VA_ARG_ERREUR_T   numero = va_arg( arguments, long ) ; label  = va_arg( arguments, char * ) ; msg    = va_arg( arguments, char *)"
.SH "Function Documentation"
.PP 
.SS "log_component_info __attribute__ ((__unused__))"
.PP
Definition at line 1308 of file log_functions.c.
.SS "void _SetLevelDebug (int level_to_set)"
.PP
Definition at line 319 of file log_functions.c.
.SS "int AddFamilyError (int num_family, char * name_family, family_error_t * tab_err)"
.PP
Definition at line 541 of file log_functions.c.
.SS "int DisplayErrorComponentLogLine (log_components_t component, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 1541 of file log_functions.c.
.SS "int DisplayLogComponentLevel (log_components_t component, int level, char * format,  ...)"
.PP
Definition at line 1507 of file log_functions.c.
.SS "void InitLogging ()"
.PP
Definition at line 357 of file log_functions.c.
.SS "int log_fprintf (FILE * file, char * format,  ...)"
.PP
Definition at line 1294 of file log_functions.c.
.SS "int log_snprintf (char * out, size_t n, char * format,  ...)"
.PP
Definition at line 1282 of file log_functions.c.
.SS "int log_vsnprintf (char * out, size_t taille, char * format, va_list arguments)"
.PP
Definition at line 690 of file log_functions.c.
.SS "int MakeLogError (char * buffer, int num_family, int num_error, int status, int ma_ligne)"
.PP
Definition at line 623 of file log_functions.c.
.SS "int ReturnLevelAscii (const char * LevelEnAscii)"
.PP
Definition at line 201 of file log_functions.c.
.SS "int ReturnLevelDebug ()\fC [inline]\fP"
.PP
Definition at line 314 of file log_functions.c.
.SS "char* ReturnLevelInt (int level)"
.PP
Definition at line 213 of file log_functions.c.
.SS "char* ReturnNameFamilyError (int num_family)"
.PP
Definition at line 569 of file log_functions.c.
.SS "void SetComponentLogBuffer (log_components_t component, char * buffer)"
.PP
Definition at line 1662 of file log_functions.c.
.SS "int SetComponentLogFile (log_components_t component, char * name)"
.PP
Definition at line 1616 of file log_functions.c.
.SS "void SetComponentLogLevel (log_components_t component, int level_to_set)"
.PP
Definition at line 290 of file log_functions.c.
.SS "void SetDefaultLogging (char * name)"
.PP
Definition at line 1601 of file log_functions.c.
.SS "void SetLevelDebug (int level_to_set)"
.PP
Definition at line 333 of file log_functions.c.
.SS "void SetNameFunction (char * nom)"
.PP
Definition at line 249 of file log_functions.c.
.SS "void SetNameHost (char * nom)"
.PP
Definition at line 239 of file log_functions.c.
.SS "void SetNamePgm (char * nom)"
.PP
Definition at line 228 of file log_functions.c.
.SH "Variable Documentation"
.PP 
.SS "const char* \fBemergency\fP = '* log \fBemergency\fP *'"
.PP
Definition at line 138 of file log_functions.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Log Library from the source code.
