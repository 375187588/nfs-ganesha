<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="group__Cache__inode__gc__internal" kind="group">
    <compoundname>Cache_inode_gc_internal</compoundname>
    <title>Cache Inode GC internal functions.</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_clean_entry</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_clean_entry</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_clean_entry: cleans a entry in the cache_inode.</para><para>cleans an entry in the cache_inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be cleaned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if ok, LRU_LIST_DO_NOT_SET_INVALID otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_gc.c" line="128" bodystart="127" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_invalidate_related_dirent</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_invalidate_related_dirent</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_invalidate_related_dirent: sets the related directory entries as invalid.</para><para>sets the related directory entries as invalid. /!\ the parent entry is supposed to be locked.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be managed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if ok, LRU_LIST_DO_NOT_SET_INVALID otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_gc.c" line="268" bodystart="267" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_suppress_file</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_suppress_file</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_suppress_file: suppress a file entry from the cache inode.</para><para>Suppress a file entry from the cache inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to be suppressed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if entry is successfully suppressed, LRU_LIST_DO_NOT_SET_INVALID otherwise</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_gc.c" line="353" bodystart="352" bodyend="381"/>
        <referencedby refid="group__Cache__inode__gc__internal_1ga4" compoundref="cache__inode__gc_8c" startline="490" endline="546">cache_inode_gc_function</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_suppress_directory</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_suppress_directory</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_suppress_directory: suppress a directory entry from the cache inode.</para><para>Suppress a file entry from the cache inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to be suppressed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if entry is successfully suppressed, 0 otherwise</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_gc.c" line="398" bodystart="397" bodyend="473"/>
        <references refid="cache__inode__remove_8c_1a0" compoundref="cache__inode__remove_8c" startline="46" endline="90">cache_inode_is_dir_empty</references>
        <referencedby refid="group__Cache__inode__gc__internal_1ga4" compoundref="cache__inode__gc_8c" startline="490" endline="546">cache_inode_gc_function</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_function</definition>
        <argsstring>(LRU_entry_t *plru_entry, void *addparam)</argsstring>
        <name>cache_inode_gc_function</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>plru_entry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_function: Tests is an entry in cache inode is to be set invalid (has expired).</para><para>Tests is an entry in cache inode is to be set invalid (has expired). If entry is invalidated, does the cleaning stuff on it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to test</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if entry must be set invalid, 0 if not.</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_gc.c" line="491" bodystart="490" bodyend="546"/>
        <references refid="group__Cache__inode__gc__internal_1ga3" compoundref="cache__inode__gc_8c" startline="397" endline="473">cache_inode_gc_suppress_directory</references>
        <references refid="group__Cache__inode__gc__internal_1ga2" compoundref="cache__inode__gc_8c" startline="352" endline="381">cache_inode_gc_suppress_file</references>
        <referencedby refid="group__Cache__inode__gc__interface_1ga2" compoundref="cache__inode__gc_8c" startline="603" endline="684">cache_inode_gc</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>These functions are used for Garbagge collector internal management. </para>    </detaileddescription>
  </compounddef>
</doxygen>
