<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="group__Cache__inode__gc__internal" kind="group">
    <compoundname>Cache_inode_gc_internal</compoundname>
    <title>Cache Inode GC internal functions.</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1gac455f809239ae644dd9abbe40660c0e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cache_inode_gc_clean_entry</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_clean_entry</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_clean_entry: cleans a entry in the cache_inode.</para><para>cleans an entry in the cache_inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be cleaned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if ok, LRU_LIST_DO_NOT_SET_INVALID otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" line="83" bodyfile="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" bodystart="81" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga2b5be1ddd7c9b28123d421b97f8b18cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cache_inode_gc_invalidate_related_dirent</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_invalidate_related_dirent</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_invalidate_related_dirent: sets the related directory entries as invalid.</para><para>sets the related directory entries as invalid. /!\ the parent entry is supposed to be locked.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be managed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if ok, LRU_LIST_DO_NOT_SET_INVALID otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" line="235" bodyfile="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" bodystart="233" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga135dcc8a575d9f808b57ae2a74e615b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_suppress_file</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_suppress_file</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_suppress_file: suppress a file entry from the cache inode.</para><para>Suppress a file entry from the cache inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to be suppressed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SET_INVALID if entry is successfully suppressed, LRU_LIST_DO_NOT_SET_INVALID otherwise</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><simplesectsep/><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" line="328" bodyfile="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" bodystart="326" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga24883ab5f9452a23cab665aabfc71873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_suppress_directory</definition>
        <argsstring>(cache_entry_t *pentry, cache_inode_param_gc_t *pgcparam)</argsstring>
        <name>cache_inode_gc_suppress_directory</name>
        <param>
          <type>cache_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>cache_inode_param_gc_t *</type>
          <declname>pgcparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_suppress_directory: suppress a directory entry from the cache inode.</para><para>Suppress a file entry from the cache inode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to be suppressed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if entry is successfully suppressed, 0 otherwise</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><simplesectsep/><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" line="371" bodyfile="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" bodystart="369" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="group__Cache__inode__gc__internal_1ga1a749f9170eb28914650d29382b6ed81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_gc_function</definition>
        <argsstring>(LRU_entry_t *plru_entry, void *addparam)</argsstring>
        <name>cache_inode_gc_function</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>plru_entry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_gc_function: Tests is an entry in cache inode is to be set invalid (has expired).</para><para>Tests is an entry in cache inode is to be set invalid (has expired). If entry is invalidated, does the cleaning stuff on it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to test</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if entry must be set invalid, 0 if not.</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><simplesectsep/><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" line="445" bodyfile="/export/GANESHA/src/Cache_inode/cache_inode_gc.c" bodystart="444" bodyend="511"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>These functions are used for Garbage collector internal management. </para>    </detaileddescription>
  </compounddef>
</doxygen>
