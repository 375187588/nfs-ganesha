<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="cache__inode__init_8c" kind="file">
    <compoundname>cache_inode_init.c</compoundname>
    <includes local="yes">LRU_List.h</includes>
    <includes local="yes">log_functions.h</includes>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="yes">fsal.h</includes>
    <includes local="yes">cache_inode.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/param.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">pthread.h</includes>
    <incdepgraph>
      <node id="94">
        <label>cache_inode_init.c</label>
        <link refid="cache_inode_init.c"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>LRU_List.h</label>
      </node>
      <node id="99">
        <label>fsal.h</label>
      </node>
      <node id="96">
        <label>log_functions.h</label>
      </node>
      <node id="106">
        <label>pthread.h</label>
      </node>
      <node id="103">
        <label>sys/types.h</label>
      </node>
      <node id="98">
        <label>HashTable.h</label>
      </node>
      <node id="102">
        <label>unistd.h</label>
      </node>
      <node id="104">
        <label>sys/param.h</label>
      </node>
      <node id="105">
        <label>time.h</label>
      </node>
      <node id="101">
        <label>stuff_alloc.h</label>
      </node>
      <node id="100">
        <label>cache_inode.h</label>
      </node>
      <node id="97">
        <label>HashData.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cache__inode__init_8c_1a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hash_table_t *</type>
        <definition>hash_table_t* cache_inode_init</definition>
        <argsstring>(cache_inode_parameter_t param, cache_inode_status_t *pstatus)</argsstring>
        <name>cache_inode_init</name>
        <param>
          <type>cache_inode_parameter_t</type>
          <declname>param</declname>
        </param>
        <param>
          <type>cache_inode_status_t *</type>
          <declname>pstatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_init: Init the ressource necessary for the cache inode management.</para><para>Init the ressource necessary for the cache inode management.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the parameter for this cache. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pstatus</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] pointer to buffer used to store the status for the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL if operation failed, other value is a pointer to the hash table used for the cache. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_init.c" line="118" bodystart="117" bodyend="131"/>
        <referencedby refid="test__cache__inode_8c_1a4" compoundref="test__cache__inode_8c" startline="135" endline="672">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cache__inode__init_8c_1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cache_inode_client_init</definition>
        <argsstring>(cache_inode_client_t *pclient, cache_inode_client_parameter_t param, int thread_index, void *pworker_data)</argsstring>
        <name>cache_inode_client_init</name>
        <param>
          <type>cache_inode_client_t *</type>
          <declname>pclient</declname>
        </param>
        <param>
          <type>cache_inode_client_parameter_t</type>
          <declname>param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thread_index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pworker_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_inode_client_init: Init the ressource necessary for the cache inode management on the client handside.</para><para>Init the ressource necessary for the cache inode management on the client handside.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pclient</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] the pointer to the client to be initiated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the parameter for this cache client. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thread_index</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] an integer related to the &apos;position&apos; of the thread, from 0 to Nb_Workers -1</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, 1 if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_init.c" line="151" bodystart="147" bodyend="272"/>
        <referencedby refid="test__cache__inode_8c_1a4" compoundref="test__cache__inode_8c" startline="135" endline="672">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Init the cache_inode. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para><simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
</para></simplesect>
<simplesect kind="date"><para><simplesect kind="rcs"><title>Date</title><para>2006/01/24 13:44:40 </para></simplesect>
</para></simplesect>
<simplesect kind="version"><para><simplesect kind="rcs"><title>Revision</title><para>1.21 </para></simplesect>
</para></simplesect>
<ref refid="cache__inode__init_8c" kindref="compound">cache_inode_init.c</ref> : Initialization routines for the cache_inode.</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Ce<sp/>logiciel<sp/>est<sp/>un<sp/>serveur<sp/>implementant<sp/>le<sp/>protocole<sp/>NFS.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Ce<sp/>logiciel<sp/>est<sp/>régi<sp/>par<sp/>la<sp/>licence<sp/>CeCILL<sp/>soumise<sp/>au<sp/>droit<sp/>français<sp/>et</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>respectant<sp/>les<sp/>principes<sp/>de<sp/>diffusion<sp/>des<sp/>logiciels<sp/>libres.<sp/>Vous<sp/>pouvez</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>utiliser,<sp/>modifier<sp/>et/ou<sp/>redistribuer<sp/>ce<sp/>programme<sp/>sous<sp/>les<sp/>conditions</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>de<sp/>la<sp/>licence<sp/>CeCILL<sp/>telle<sp/>que<sp/>diffusée<sp/>par<sp/>le<sp/>CEA,<sp/>le<sp/>CNRS<sp/>et<sp/>l&apos;INRIA</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>sur<sp/>le<sp/>site<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>En<sp/>contrepartie<sp/>de<sp/>l&apos;accessibilité<sp/>au<sp/>code<sp/>source<sp/>et<sp/>des<sp/>droits<sp/>de<sp/>copie,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>de<sp/>modification<sp/>et<sp/>de<sp/>redistribution<sp/>accordés<sp/>par<sp/>cette<sp/>licence,<sp/>il<sp/>n&apos;est</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>offert<sp/>aux<sp/>utilisateurs<sp/>qu&apos;une<sp/>garantie<sp/>limitée.<sp/><sp/>Pour<sp/>les<sp/>mêmes<sp/>raisons,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>seule<sp/>une<sp/>responsabilité<sp/>restreinte<sp/>pèse<sp/>sur<sp/>l&apos;auteur<sp/>du<sp/>programme,<sp/><sp/>le</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>titulaire<sp/>des<sp/>droits<sp/>patrimoniaux<sp/>et<sp/>les<sp/>concédants<sp/>successifs.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>A<sp/>cet<sp/>égard<sp/><sp/>l&apos;attention<sp/>de<sp/>l&apos;utilisateur<sp/>est<sp/>attirée<sp/>sur<sp/>les<sp/>risques</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>associés<sp/>au<sp/>chargement,<sp/><sp/>à<sp/>l&apos;utilisation,<sp/><sp/>à<sp/>la<sp/>modification<sp/>et/ou<sp/>au</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>développement<sp/>et<sp/>à<sp/>la<sp/>reproduction<sp/>du<sp/>logiciel<sp/>par<sp/>l&apos;utilisateur<sp/>étant</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>donné<sp/>sa<sp/>spécificité<sp/>de<sp/>logiciel<sp/>libre,<sp/>qui<sp/>peut<sp/>le<sp/>rendre<sp/>complexe<sp/>à</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>manipuler<sp/>et<sp/>qui<sp/>le<sp/>réserve<sp/>donc<sp/>à<sp/>des<sp/>développeurs<sp/>et<sp/>des<sp/>professionnels</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>avertis<sp/>possédant<sp/><sp/>des<sp/><sp/>connaissances<sp/><sp/>informatiques<sp/>approfondies.<sp/><sp/>Les</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>utilisateurs<sp/>sont<sp/>donc<sp/>invités<sp/>à<sp/>charger<sp/><sp/>et<sp/><sp/>tester<sp/><sp/>l&apos;adéquation<sp/><sp/>du</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>logiciel<sp/>à<sp/>leurs<sp/>besoins<sp/>dans<sp/>des<sp/>conditions<sp/>permettant<sp/>d&apos;assurer<sp/>la</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>sécurité<sp/>de<sp/>leurs<sp/>systèmes<sp/>et<sp/>ou<sp/>de<sp/>leurs<sp/>données<sp/>et,<sp/>plus<sp/>généralement,</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>à<sp/>l&apos;utiliser<sp/>et<sp/>l&apos;exploiter<sp/>dans<sp/>les<sp/>mêmes<sp/>conditions<sp/>de<sp/>sécurité.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Le<sp/>fait<sp/>que<sp/>vous<sp/>puissiez<sp/>accéder<sp/>à<sp/>cet<sp/>en-tête<sp/>signifie<sp/>que<sp/>vous<sp/>avez</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>pris<sp/>connaissance<sp/>de<sp/>la<sp/>licence<sp/>CeCILL,<sp/>et<sp/>que<sp/>vous<sp/>en<sp/>avez<sp/>accepté<sp/>les</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>termes.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>---------------------</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/>(2005)</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>Contributor:<sp/>Philippe<sp/>DENIEL<sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>a<sp/>server<sp/>that<sp/>implements<sp/>the<sp/>NFS<sp/>protocol.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/><sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>liability.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LRU_List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="cache__inode__init_8c_1a0" refkind="member"><highlight class="normal">hash_table_t<sp/>*<sp/><ref refid="cache__inode__init_8c_1a0" kindref="member">cache_inode_init</ref>(<sp/>cache_inode_parameter_t<sp/>param,<sp/>cache_inode_status_t<sp/>*pstatus<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>hash_table_t<sp/>*<sp/>ht<sp/>=<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>ht<sp/>=<sp/>HashTable_Init(<sp/>param.hparam<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ht<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*pstatus<sp/>=<sp/>CACHE_INODE_SUCCESS<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>*pstatus<sp/>=<sp/>CACHE_INODE_INVALID_ARGUMENT<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>DisplayLog(<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>write-through<sp/>metadata<sp/>cache&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ht<sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="cache__inode__init_8c_1a1" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cache__inode__init_8c_1a1" kindref="member">cache_inode_client_init</ref>(<sp/>cache_inode_client_t<sp/>*<sp/>pclient,<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_inode_client_parameter_t<sp/>param,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_index,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pworker_data<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>lru_status<sp/>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>pclient-&gt;log_outputs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.log_outputs<sp/>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>pclient-&gt;attrmask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.attrmask<sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>pclient-&gt;nb_prealloc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.nb_prealloc_entry<sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>pclient-&gt;nb_pre_dir_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.nb_pre_dir_data<sp/>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>pclient-&gt;nb_pre_parent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.nb_pre_parent<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>pclient-&gt;nb_pre_state_v4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.nb_pre_state_v4<sp/>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>pclient-&gt;grace_period_attr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.grace_period_attr<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>pclient-&gt;grace_period_link<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.grace_period_link<sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>pclient-&gt;grace_period_dirent<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.grace_period_dirent<sp/>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>pclient-&gt;use_test_access<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.use_test_access<sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>pclient-&gt;getattr_dir_invalidation<sp/>=<sp/>param.getattr_dir_invalidation<sp/>;<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>pclient-&gt;call_since_last_gc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>pclient-&gt;time_of_last_gc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>time(<sp/>NULL<sp/>)<sp/>+<sp/>thread_index<sp/>*<sp/>20<sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>thread<sp/>will<sp/>not<sp/>gc<sp/>at<sp/>the<sp/>same<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>pclient-&gt;pworker<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pworker_data<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>pclient-&gt;use_cache<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.use_cache<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>pclient-&gt;retention<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.retention<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>pclient-&gt;max_fd_per_thread<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>param.max_fd_per_thread<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;cache_entry_t&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BLOCK_PREALLOC</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>STUFF_PREALLOC(<sp/>pclient-&gt;pool_entry,<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclient-&gt;nb_prealloc,<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_entry_t,<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pclient-&gt;pool_entry<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>entry<sp/>pool&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;cache_inode_dir_data_t&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BLOCK_PREALLOC</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>STUFF_PREALLOC(<sp/>pclient-&gt;pool_dir_data,<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclient-&gt;nb_pre_dir_data,<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_inode_dir_data_t,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pclient-&gt;pool_dir_data<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>dir<sp/>data<sp/>pool&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;cache_inode_parent_entry_t&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BLOCK_PREALLOC</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>STUFF_PREALLOC(<sp/>pclient-&gt;pool_parent,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclient-&gt;nb_pre_parent,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_inode_parent_entry_t,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pclient-&gt;pool_parent<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>parent<sp/>link<sp/>pool&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;cache_inode_state_v4_t&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BLOCK_PREALLOC</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>STUFF_PREALLOC(<sp/>pclient-&gt;pool_state_v4,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclient-&gt;nb_pre_state_v4,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_inode_state_v4_t,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pclient-&gt;pool_state_v4<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>state<sp/>v4<sp/>pool&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;cache_inode_fsal_data_t:init&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BLOCK_PREALLOC</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>STUFF_PREALLOC(<sp/>pclient-&gt;pool_key,<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclient-&gt;nb_prealloc,<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_inode_fsal_data_t,<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>BuddySetDebugLabel(<sp/></highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pclient-&gt;pool_key<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>key<sp/>pool&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pclient-&gt;lru_gc<sp/>=<sp/>LRU_Init(<sp/>param.lru_param,<sp/>&amp;lru_status<sp/>)<sp/>)<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayLogJd(<sp/>pclient-&gt;log_outputs,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>can&apos;t<sp/>init<sp/>cache_inode<sp/>client<sp/>lru<sp/>gc&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/><sp/>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Everything<sp/>was<sp/>ok,<sp/>return<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_client_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/Cache_inode/cache_inode_init.c"/>
  </compounddef>
</doxygen>
