.TH "cache_inode_open_close.c" 3 "15 Sep 2010" "Version 0.1" "Cache inode layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cache_inode_open_close.c \- 
.PP
Removes an entry of any type.  

.SH SYNOPSIS
.br
.PP
\fC#include 'fsal.h'\fP
.br
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'log_macros.h'\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <strings.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_open\fP (cache_entry_t *pentry, cache_inode_client_t *pclient, fsal_openflags_t openflags, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_open_by_name\fP (cache_entry_t *pentry_dir, fsal_name_t *pname, cache_entry_t *pentry_file, cache_inode_client_t *pclient, fsal_openflags_t openflags, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_close\fP (cache_entry_t *pentry, cache_inode_client_t *pclient, cache_inode_status_t *pstatus)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Removes an entry of any type. 

vim:expandtab:shiftwidth=8:tabstop=8:
.PP
Copyright CEA/DAM/DIF (2008) contributeur : Philippe DENIEL philippe.deniel@cea.fr Thomas LEIBOVICI thomas.leibovici@cea.fr
.PP
This program is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
.PP
You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
.PP
---------------------------------------
.PP
\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2005/11/28 17:02:27 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.20 
.RE
.PP
\fBcache_inode_rdwr.c\fP : performs an IO on a REGULAR_FILE. 
.PP
Definition in file \fBcache_inode_open_close.c\fP.
.SH "Function Documentation"
.PP 
.SS "cache_inode_status_t cache_inode_close (cache_entry_t * pentry, cache_inode_client_t * pclient, cache_inode_status_t * pstatus)"cache_inode_close: closes the local fd in the FSAL.
.PP
Closes the local fd in the FSAL.
.PP
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry in file content layer whose content is to be accessed. 
.br
\fIpclient\fP [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_CONTENT_SUCCESS is successful . 
.RE
.PP

.PP
Definition at line 382 of file cache_inode_open_close.c.
.SS "cache_inode_status_t cache_inode_open (cache_entry_t * pentry, cache_inode_client_t * pclient, fsal_openflags_t openflags, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"cache_content_open: opens the local fd on the cache.
.PP
Opens the fd on the FSAL
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry in file content layer whose content is to be accessed. 
.br
\fIpclient\fP [IN] ressource allocated by the client for the nfs management. 
.br
\fIopenflags\fP [IN] flags to be used to open the file 
.br
\fIpcontent\fP [IN] FSAL operation context  [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_CONTENT_SUCCESS is successful . 
.RE
.PP

.PP
Definition at line 78 of file cache_inode_open_close.c.
.SS "cache_inode_status_t cache_inode_open_by_name (cache_entry_t * pentry_dir, fsal_name_t * pname, cache_entry_t * pentry_file, cache_inode_client_t * pclient, fsal_openflags_t openflags, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"cache_content_open: opens the local fd on the cache.
.PP
Opens the fd on the FSAL
.PP
\fBParameters:\fP
.RS 4
\fIpentry_dir\fP [IN] parent entry for the file 
.br
\fIpname\fP [IN] name of the file to be opened in the parent directory 
.br
\fIpentry_file\fP [IN] file entry to be opened 
.br
\fIpclient\fP [IN] ressource allocated by the client for the nfs management. 
.br
\fIopenflags\fP [IN] flags to be used to open the file 
.br
\fIpcontent\fP [IN] FSAL operation context  [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_CONTENT_SUCCESS is successful . 
.RE
.PP

.PP
Definition at line 188 of file cache_inode_open_close.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Cache inode layer from the source code.
