.TH "cache_inode_lookup.c" 3 "31 Mar 2009" "Version 0.1" "Cache inode layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cache_inode_lookup.c \- Perform lookup through the cache.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pthread.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "cache_entry_t * \fBcache_inode_lookup_sw\fP (cache_entry_t *pentry_parent, fsal_name_t *pname, fsal_attrib_list_t *pattr, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus, int use_mutex)"
.br
.ti -1c
.RI "cache_entry_t * \fBcache_inode_lookup_no_mutex\fP (cache_entry_t *pentry_parent, fsal_name_t *pname, fsal_attrib_list_t *pattr, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.ti -1c
.RI "cache_entry_t * \fBcache_inode_lookup\fP (cache_entry_t *pentry_parent, fsal_name_t *pname, fsal_attrib_list_t *pattr, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Perform lookup through the cache. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2005/11/28 17:02:26 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.33 
.RE
.PP
\fBcache_inode_lookup.c\fP : Perform lookup through the cache. 
.PP
Definition in file \fBcache_inode_lookup.c\fP.
.SH "Function Documentation"
.PP 
.SS "cache_entry_t* cache_inode_lookup (cache_entry_t * pentry_parent, fsal_name_t * pname, fsal_attrib_list_t * pattr, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"
.PP
cache_inode_lookup: looks up for a name in a directory indicated by a cached entry.
.PP
Looks up for a name in a directory indicated by a cached entry. The directory should have been cached before.
.PP
\fBParameters:\fP
.RS 4
\fIpentry_parent\fP [IN] entry for the parent directory to be managed. 
.br
\fIname\fP [IN] name of the entry that we are looking for in the cache. 
.br
\fIpattr\fP [OUT] attributes for the entry that we have found. 
.br
\fIht\fP [IN] hash table used for the cache, unused in this call. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL credentials 
.br
\fIpstatus\fP [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.RE
.PP

.PP
Definition at line 493 of file cache_inode_lookup.c.
.SS "cache_entry_t* cache_inode_lookup_no_mutex (cache_entry_t * pentry_parent, fsal_name_t * pname, fsal_attrib_list_t * pattr, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"
.PP
cache_inode_lookup_no_mutex: looks up for a name in a directory indicated by a cached entry (no mutex management).
.PP
Looks up for a name in a directory indicated by a cached entry. The directory should have been cached before. This function has no mutex management and suppose that is it properly done in the clling function
.PP
\fBParameters:\fP
.RS 4
\fIpentry_parent\fP [IN] entry for the parent directory to be managed. 
.br
\fIname\fP [IN] name of the entry that we are looking for in the cache. 
.br
\fIpattr\fP [OUT] attributes for the entry that we have found. 
.br
\fIht\fP [IN] hash table used for the cache, unused in this call. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL credentials 
.br
\fIpstatus\fP [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.RE
.PP

.PP
Definition at line 456 of file cache_inode_lookup.c.
.SS "cache_entry_t* cache_inode_lookup_sw (cache_entry_t * pentry_parent, fsal_name_t * pname, fsal_attrib_list_t * pattr, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus, int use_mutex)"
.PP
cache_inode_lookup_sw: looks up for a name in a directory indicated by a cached entry.
.PP
Looks up for a name in a directory indicated by a cached entry. The directory should have been cached before.
.PP
\fBParameters:\fP
.RS 4
\fIpentry_parent\fP [IN] entry for the parent directory to be managed. 
.br
\fIname\fP [IN] name of the entry that we are looking for in the cache. 
.br
\fIpattr\fP [OUT] attributes for the entry that we have found. 
.br
\fIht\fP [IN] hash table used for the cache, unused in this call. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL credentials 
.br
\fIpstatus\fP [OUT] returned status. 
.br
\fIuse_mutex\fP [IN] if TRUE, mutex management is done, not if equal to FALSE.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.RE
.PP

.PP
Definition at line 128 of file cache_inode_lookup.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Cache inode layer from the source code.
