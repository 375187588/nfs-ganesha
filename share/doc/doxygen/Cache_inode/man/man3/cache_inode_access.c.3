.TH "cache_inode_access.c" 3 "15 Sep 2010" "Version 0.1" "Cache inode layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cache_inode_access.c \- 
.PP
Check for object accessibility.  

.SH SYNOPSIS
.br
.PP
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'log_macros.h'\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pthread.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_access_sw\fP (cache_entry_t *pentry, fsal_accessflags_t access_type, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus, int use_mutex)"
.br
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_access_no_mutex\fP (cache_entry_t *pentry, fsal_accessflags_t access_type, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.ti -1c
.RI "cache_inode_status_t \fBcache_inode_access\fP (cache_entry_t *pentry, fsal_accessflags_t access_type, hash_table_t *ht, cache_inode_client_t *pclient, fsal_op_context_t *pcontext, cache_inode_status_t *pstatus)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Check for object accessibility. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2005/11/28 17:02:26 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.19 
.RE
.PP
\fBcache_inode_access.c\fP : Check for object accessibility. 
.PP
Definition in file \fBcache_inode_access.c\fP.
.SH "Function Documentation"
.PP 
.SS "cache_inode_status_t cache_inode_access (cache_entry_t * pentry, fsal_accessflags_t access_type, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"cache_inode_access: checks for an entry accessibility.
.PP
Checks for an entry accessibility.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry pointer for the fs object to be checked. 
.br
\fIaccess_type\fP [IN] flags used to describe the kind of access to be checked. 
.br
\fIht\fP [INOUT] hash table used for the cache. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL credentials 
.br
\fIpstatus\fP [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.RE
.PP

.PP
Definition at line 246 of file cache_inode_access.c.
.SS "cache_inode_status_t cache_inode_access_no_mutex (cache_entry_t * pentry, fsal_accessflags_t access_type, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus)"cache_inode_access_no_mutex: checks for an entry accessibility. No mutex management
.PP
Checks for an entry accessibility.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry pointer for the fs object to be checked. 
.br
\fIaccess_type\fP [IN] flags used to describe the kind of access to be checked. 
.br
\fIht\fP [INOUT] hash table used for the cache. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL credentials 
.br
\fIpstatus\fP [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.RE
.PP

.PP
Definition at line 217 of file cache_inode_access.c.
.SS "cache_inode_status_t cache_inode_access_sw (cache_entry_t * pentry, fsal_accessflags_t access_type, hash_table_t * ht, cache_inode_client_t * pclient, fsal_op_context_t * pcontext, cache_inode_status_t * pstatus, int use_mutex)"cache_inode_access: checks for an entry accessibility.
.PP
Checks for an entry accessibility.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry pointer for the fs object to be checked. 
.br
\fIaccess_type\fP [IN] flags used to describe the kind of access to be checked. 
.br
\fIht\fP [INOUT] hash table used for the cache. 
.br
\fIpclient\fP [INOUT] ressource allocated by the client for the nfs management. 
.br
\fIpcontext\fP [IN] FSAL context 
.br
\fIpstatus\fP [OUT] returned status. 
.br
\fIuse_mutex\fP [IN] a flag to tell if mutex are to be used or not.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_INODE_SUCCESS if operation is a success 
.br
 
.PP
CACHE_INODE_LRU_ERROR if allocation error occured when validating the entry 
.br
 
.PP
any other values show an unauthorized access. 
.RE
.PP

.PP
Definition at line 78 of file cache_inode_access.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Cache inode layer from the source code.
