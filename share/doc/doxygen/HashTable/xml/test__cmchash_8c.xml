<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="test__cmchash_8c" kind="file">
    <compoundname>test_cmchash.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">BuddyMalloc.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="yes">MesureTemps.h</includes>
    <includes local="yes">log_macros.h</includes>
    <incdepgraph>
      <node id="18">
        <label>log_macros.h</label>
      </node>
      <node id="10">
        <label>test_cmchash.c</label>
        <link refid="test_cmchash.c"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>BuddyMalloc.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="16">
        <label>HashTable.h</label>
      </node>
      <node id="17">
        <label>MesureTemps.h</label>
      </node>
      <node id="13">
        <label>strings.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__cmchash_8c_1a03d9dd35a7b43ebc597de16d46a0e845" prot="public" static="no">
        <name>MAXTEST</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="88" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1a428c97a2aa1643805f8b16275c702607" prot="public" static="no">
        <name>MAXDESTROY</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="89" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1a7d82597c4bd22fe023995390a5a90f95" prot="public" static="no">
        <name>MAXGET</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="90" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1a86ddf7c36b9a7e599bb04786c61b0370" prot="public" static="no">
        <name>NB_PREALLOC</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="91" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1ac4add2a227a10511e0128d63952030e8" prot="public" static="no">
        <name>PRIME</name>
        <initializer>109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="92" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1ab2da1e226a5beeff3269ec19b1f2b0b9" prot="public" static="no">
        <name>CRITERE</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="93" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__cmchash_8c_1ad449333f1ec8fe49765893cc1980d94d" prot="public" static="no">
        <name>CRITERE_2</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="94" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__cmchash_8c_1af183d0c5e0c482d0f02845db8a2f785c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compare_string_buffer</definition>
        <argsstring>(hash_buffer_t *buff1, hash_buffer_t *buff2)</argsstring>
        <name>compare_string_buffer</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff1</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="97" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="96" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="test__cmchash_8c_1ad9a0e7d500dc83e14095e7c90c40c5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_buff</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_buff</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="112" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableInternalFunctions_1gaf42a323dd4a2c336ce843bddf643be43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long simple_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>simple_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>simple_hash_func: A template hash function, which considers the hash key as a polynom</para><para>A template hash function, which considers the hash key as a polynom. we are supposed to managed string written with ht-&gt;alphabet_length different characters We turn the string into a binary by computing str[0]+str[1]*ht-&gt;alphabet_length+str[2]*ht-&gt;alphabet_length**2 + ... ... + str[N]*ht-&gt;alphabet_length**N Then we keep the modulo by index_size. This size has to be a prime integer for performance reason The polynome is computed with the Horner&apos;s method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>the parameter structure that was used to define the hashtable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffclef</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to compute the hash value on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash value</para></simplesect>
<simplesect kind="see"><para><ref refid="group__HashTableInternalFunctions_1gaee806584243af84ca21ae138d816a7e7" kindref="member">double_hash_func</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="116" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="224" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableInternalFunctions_1gaee806584243af84ca21ae138d816a7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long double_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>double_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>double_hash_func: This function is used for double hashing, based on another hash function.</para><para>This functions uses the hash function contained in hparam to compute a first hash value, then use it to compute a second value like this: h = ( firsthash + ( 8 - ( firsthash % 8 ) ) ) % hparam.index_size This operation just changes the last 3 bits, but it can be demonstrated that this produced a more efficient and better balanced hash function (See &apos;Algorithm in C&apos;, Robert Sedjewick for more detail on this).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>the parameter structure that was used to define the hashtable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffclef</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to compute the hash value on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash value</para></simplesect>
<simplesect kind="see"><para><ref refid="group__HashTableInternalFunctions_1gaee806584243af84ca21ae138d816a7e7" kindref="member">double_hash_func</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="117" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="261" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableInternalFunctions_1ga1aca4ae1fbd881eb69310b3a18375321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long rbt_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>rbt_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rbt_hash_func: Another hash junction, but to be used for the red-black trees managed internally.</para><para>This library uses red-black trees to store data. RB trees use key data too. The hash function has to be different than the one used for find the RB Tree, if not all the entry in the tree will have the same hash value which will lead to a very unbalanced tree</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>the parameter structure that was used to define the hashtable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffclef</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to compute the hash value on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="118" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="291" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="test__cmchash_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/test_cmchash.c" line="121" bodyfile="/export/GANESHA/src/HashTable/test_cmchash.c" bodystart="120" bodyend="434"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Source<sp/>du<sp/>test<sp/>de<sp/>la<sp/>lib<sp/>de<sp/>gestion<sp/>des<sp/>tables<sp/>de<sp/>hachage</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>$Header:<sp/>/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/HashTable/test_cmchash.c,v<sp/>1.22<sp/>2006/01/20<sp/>07:39:22<sp/>leibovic<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>test_cmchash.c,v<sp/>$</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.22<sp/><sp/>2006/01/20<sp/>07:39:22<sp/><sp/>leibovic</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Back<sp/>to<sp/>the<sp/>previous<sp/>version.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.20<sp/><sp/>2005/11/29<sp/>13:38:15<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>bottlenecked<sp/>ip_stats</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.18<sp/><sp/>2005/10/05<sp/>14:03:28<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>DEBUG<sp/>ifdef<sp/>are<sp/>now<sp/>much<sp/>cleaner</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.17<sp/><sp/>2005/05/10<sp/>11:43:57<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Datacache<sp/>and<sp/>metadatacache<sp/>are<sp/>noewqw<sp/>bounded</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.16<sp/><sp/>2005/04/28<sp/>14:04:17<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Modified<sp/>HashTabel_Del<sp/>prototype</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.15<sp/><sp/>2005/03/02<sp/>10:57:00<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Corrected<sp/>a<sp/>bug<sp/>in<sp/>pdata<sp/>management</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.14<sp/><sp/>2004/12/08<sp/>15:47:17<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Inclusion<sp/>of<sp/>systenm<sp/>headers<sp/>has<sp/>been<sp/>reviewed</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.13<sp/><sp/>2004/09/20<sp/>15:36:01<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Quelques<sp/>mods<sp/>mineures<sp/>au<sp/>niveau<sp/>des<sp/>#define</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.12<sp/><sp/>2004/08/25<sp/>06:28:15<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Remise<sp/>a<sp/>plat<sp/>du<sp/>test</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.11<sp/><sp/>2004/08/24<sp/>10:41:15<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Avant<sp/>re-ecriture<sp/>d&apos;un<sp/>autre<sp/>test.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.10<sp/><sp/>2004/08/23<sp/>09:14:35<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Ajout<sp/>de<sp/>tests<sp/>de<sp/>non-regression<sp/>(pour<sp/>le<sp/>delete)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.9<sp/><sp/>2004/08/20<sp/>08:55:13<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Rajout<sp/>du<sp/>support<sp/>des<sp/>statistique</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Doxygenisation<sp/>des<sp/>sources</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.8<sp/><sp/>2004/08/19<sp/>09:44:07<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Ajout<sp/>d&apos;autres<sp/>tests<sp/>dans<sp/>test_cmchash<sp/>et<sp/>maketest.conf</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.7<sp/><sp/>2004/08/19<sp/>09:20:39<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Ajout<sp/>du<sp/>header<sp/>CVS<sp/>dans<sp/>test_cnmhash.c</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BuddyMalloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MesureTemps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="test__cmchash_8c_1a03d9dd35a7b43ebc597de16d46a0e845" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXTEST<sp/>10000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Plus<sp/>grand<sp/>que<sp/>MAXDESTROY<sp/>!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="test__cmchash_8c_1a428c97a2aa1643805f8b16275c702607" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXDESTROY<sp/>50</highlight></codeline>
<codeline lineno="90" refid="test__cmchash_8c_1a7d82597c4bd22fe023995390a5a90f95" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAXGET<sp/>30</highlight></codeline>
<codeline lineno="91" refid="test__cmchash_8c_1a86ddf7c36b9a7e599bb04786c61b0370" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NB_PREALLOC<sp/>10000</highlight></codeline>
<codeline lineno="92" refid="test__cmchash_8c_1ac4add2a227a10511e0128d63952030e8" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PRIME<sp/>109</highlight></codeline>
<codeline lineno="93" refid="test__cmchash_8c_1ab2da1e226a5beeff3269ec19b1f2b0b9" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CRITERE<sp/>12</highlight></codeline>
<codeline lineno="94" refid="test__cmchash_8c_1ad449333f1ec8fe49765893cc1980d94d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CRITERE_2<sp/>14</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="test__cmchash_8c_1af183d0c5e0c482d0f02845db8a2f785c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__cmchash_8c_1af183d0c5e0c482d0f02845db8a2f785c" kindref="member">compare_string_buffer</ref>(hash_buffer_t<sp/>*<sp/>buff1,<sp/>hash_buffer_t<sp/>*<sp/>buff2)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>if<sp/>one<sp/>of<sp/>teh<sp/>entries<sp/>are<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buff1-&gt;pdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buff2-&gt;pdata<sp/>==<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buff2-&gt;pdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>member<sp/>is<sp/>the<sp/>greater<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(buff1-&gt;pdata,<sp/>buff2-&gt;pdata);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>line<sp/>should<sp/>never<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="test__cmchash_8c_1ad9a0e7d500dc83e14095e7c90c40c5b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__cmchash_8c_1ad9a0e7d500dc83e14095e7c90c40c5b9" kindref="member">display_buff</ref>(hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(str,<sp/>HASHTABLE_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pbuff-&gt;pdata);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__HashTableInternalFunctions_1gaf42a323dd4a2c336ce843bddf643be43" kindref="member">simple_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__HashTableInternalFunctions_1gaee806584243af84ca21ae138d816a7e7" kindref="member">double_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__HashTableInternalFunctions_1ga1aca4ae1fbd881eb69310b3a18375321" kindref="member">rbt_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="test__cmchash_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__cmchash_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>SetDefaultLogging(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>SetNamePgm(</highlight><highlight class="stringliteral">&quot;test_cmchash&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>hash_table_t<sp/>*ht<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>hash_parameter_t<sp/>hparam;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffval;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffval2;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>hash_stat_t<sp/>statistiques;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Temps<sp/>debut,<sp/>fin;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmpstr[10];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmpstr2[10];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmpstr3[10];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>strtab[<ref refid="test__cmchash_8c_1a03d9dd35a7b43ebc597de16d46a0e845" kindref="member">MAXTEST</ref>][10];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>critere_recherche<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>random_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>hparam.index_size<sp/>=<sp/><ref refid="test__cmchash_8c_1ac4add2a227a10511e0128d63952030e8" kindref="member">PRIME</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>hparam.alphabet_length<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>hparam.nb_node_prealloc<sp/>=<sp/><ref refid="test__cmchash_8c_1a86ddf7c36b9a7e599bb04786c61b0370" kindref="member">NB_PREALLOC</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>hparam.hash_func_key<sp/>=<sp/><ref refid="group__HashTableInternalFunctions_1gaf42a323dd4a2c336ce843bddf643be43" kindref="member">simple_hash_func</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>hparam.hash_func_rbt<sp/>=<sp/><ref refid="group__HashTableInternalFunctions_1ga1aca4ae1fbd881eb69310b3a18375321" kindref="member">rbt_hash_func</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>hparam.compare_key<sp/>=<sp/><ref refid="test__cmchash_8c_1af183d0c5e0c482d0f02845db8a2f785c" kindref="member">compare_string_buffer</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>hparam.key_to_str<sp/>=<sp/><ref refid="test__cmchash_8c_1ad9a0e7d500dc83e14095e7c90c40c5b9" kindref="member">display_buff</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>hparam.val_to_str<sp/>=<sp/><ref refid="test__cmchash_8c_1ad9a0e7d500dc83e14095e7c90c40c5b9" kindref="member">display_buff</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>BuddyInit(NULL);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>de<sp/>la<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ht<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref>(hparam))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>Bad<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Created<sp/>the<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__cmchash_8c_1a03d9dd35a7b43ebc597de16d46a0e845" kindref="member">MAXTEST</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(strtab[i],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(strtab[i]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.pdata<sp/>=<sp/>strtab[i];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffval.len<sp/>=<sp/>strlen(strtab[i]);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffval.pdata<sp/>=<sp/>strtab[i];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>HashTable_Set(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_HASHTABLE,</highlight><highlight class="stringliteral">&quot;Added<sp/>%s<sp/>,<sp/>%d<sp/>,<sp/>return<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>strtab[i],<sp/>i,<sp/>rc);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>insert<sp/>%d<sp/>entries:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>MAXTEST,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_HASHTABLE,<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="group__HashTableExportedFunctions_1gaf5add10f55a1624787f981099d005806" kindref="member">HashTable_Log</ref>(COMPONENT_HASHTABLE,ht);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Premier<sp/>test<sp/>simple:<sp/>verif<sp/>de<sp/>la<sp/>coherence<sp/>des<sp/>valeurs<sp/>lues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>critere_recherche<sp/>=<sp/><ref refid="test__cmchash_8c_1ab2da1e226a5beeff3269ec19b1f2b0b9" kindref="member">CRITERE</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref>(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Recovery<sp/>of<sp/>%d<sp/>th<sp/>key<sp/>-&gt;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche,<sp/>rc);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>recover<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>The<sp/>key<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref>(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Recovery<sp/>of<sp/>%d<sp/>th<sp/>key<sp/>(test<sp/>2)<sp/>-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>critere_recherche,<sp/>rc);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>recover<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>The<sp/>key<sp/>is<sp/>not<sp/>found<sp/>(test<sp/>2)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;----&gt;<sp/>retrieved<sp/>value<sp/>=<sp/>len<sp/>%d<sp/>;<sp/>val<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffval.len,<sp/>buffval.pdata);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>atoi(buffval.pdata);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val<sp/>!=<sp/>critere_recherche)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>the<sp/>reading<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Now,<sp/>I<sp/>try<sp/>to<sp/>retrieve<sp/>%d<sp/>entries<sp/>(taken<sp/>at<sp/>random,<sp/>almost)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__cmchash_8c_1a7d82597c4bd22fe023995390a5a90f95" kindref="member">MAXGET</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__cmchash_8c_1a7d82597c4bd22fe023995390a5a90f95" kindref="member">MAXGET</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>random_val<sp/>=<sp/>random()<sp/>%<sp/>MAXTEST;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>random_val);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey2.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey2.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref>(ht,<sp/>&amp;buffkey2,<sp/>&amp;buffval2);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_HASHTABLE,</highlight><highlight class="stringliteral">&quot;\tPlaying<sp/>key<sp/>=<sp/>%s<sp/><sp/>--&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffkey2.pdata,<sp/>buffval2.pdata);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>%d<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>rc);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>the<sp/>reading<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>read<sp/>%d<sp/>elements<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>MAXGET,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref>(ht,<sp/>&amp;buffkey,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>the<sp/>key<sp/>%d<sp/>--&gt;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche,<sp/>rc);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>delete<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref>(ht,<sp/>&amp;buffkey,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>the<sp/>key<sp/>%d<sp/>(2nd<sp/>try)<sp/>--&gt;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche,<sp/>rc);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_ERROR_NO_SUCH_KEY)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>delete<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>critere_recherche);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref>(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>LogTest</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Recovery<sp/>of<sp/>the<sp/>%d<sp/>key<sp/>(erased)<sp/>(must<sp/>return<sp/>HASH_ERROR_NO_SUCH_KEY)<sp/>=<sp/>%d<sp/>--&gt;<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>critere_recherche,<sp/>HASHTABLE_ERROR_NO_SUCH_KEY,<sp/>rc);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_ERROR_NO_SUCH_KEY)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>the<sp/>reading<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>LogTest</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Destruction<sp/>of<sp/>%d<sp/>items,<sp/>taken<sp/>at<sp/>random<sp/>(well<sp/>if<sp/>you<sp/>want<sp/>...<sp/>I<sp/>use<sp/>srandom)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__cmchash_8c_1a428c97a2aa1643805f8b16275c702607" kindref="member">MAXDESTROY</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>srandom(getpid());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>random_val<sp/>=<sp/>random()<sp/>%<sp/>MAXTEST;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__cmchash_8c_1a428c97a2aa1643805f8b16275c702607" kindref="member">MAXDESTROY</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>used<sp/>to<sp/>be<sp/>that<sp/>the<sp/>random<sp/>values<sp/>were<sp/>chosen<sp/>with</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>repeated<sp/>calls<sp/>to<sp/>random(),<sp/>but<sp/>if<sp/>the<sp/>same<sp/>key<sp/>comes<sp/>up<sp/>twice,</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>causes<sp/>a<sp/>fail.<sp/><sp/>This<sp/>way<sp/>we<sp/>start<sp/>with<sp/>a<sp/>random<sp/>value<sp/>and</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>linearly<sp/>delete<sp/>from<sp/>it</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>random_val<sp/>=<sp/>(random_val<sp/>+<sp/>1)<sp/>%<sp/>MAXTEST;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>random_val);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;\t<sp/>Delete<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>random_val);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref>(ht,<sp/>&amp;buffkey,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>delete<sp/>%d<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>rc);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>delete<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>delete<sp/>%d<sp/>elements<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>MAXDESTROY,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Now,<sp/>I<sp/>try<sp/>to<sp/>retrieve<sp/>%d<sp/>entries<sp/>(if<sp/>necessary<sp/>destroyed)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAXGET);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;debut,<sp/>NULL);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAXGET;<sp/>i++)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>random_val<sp/>=<sp/>random()<sp/>%<sp/>MAXTEST;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>random_val);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref>(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>MesureTemps(&amp;fin,<sp/>&amp;debut);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Tie<sp/>to<sp/>read<sp/>%d<sp/>elements<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>MAXGET,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertiTempsChaine(fin,<sp/>NULL));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Writing<sp/>a<sp/>duplicate<sp/>key<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>sprintf(tmpstr,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="test__cmchash_8c_1ad449333f1ec8fe49765893cc1980d94d" kindref="member">CRITERE_2</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>strlen(tmpstr);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>tmpstr;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/><ref refid="group__HashTableExportedFunctions_1ga9fd137ceaac7ec4918a51b59d5e73031" kindref="member">HashTable_Test_And_Set</ref>(ht,<sp/>&amp;buffkey,<sp/>&amp;buffval,<sp/>HASHTABLE_SET_HOW_SET_NO_OVERWRITE);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;The<sp/>value<sp/>should<sp/>be<sp/>HASHTABLE_ERROR_KEY_ALREADY_EXISTS<sp/><sp/>=<sp/>%d<sp/>--&gt;<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HASHTABLE_ERROR_KEY_ALREADY_EXISTS,<sp/>rc);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_ERROR_KEY_ALREADY_EXISTS)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>duplicate<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="group__HashTableExportedFunctions_1gaf5add10f55a1624787f981099d005806" kindref="member">HashTable_Log</ref>(COMPONENT_HASHTABLE,ht);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_HASHTABLE,</highlight><highlight class="stringliteral">&quot;-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Displaying<sp/>table<sp/>statistics<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="group__HashTableExportedFunctions_1ga8cc973332d8c4a92258793acc228e084" kindref="member">HashTable_GetStats</ref>(ht,<sp/>&amp;statistiques);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;<sp/>Number<sp/>of<sp/>entries<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>statistiques.dynamic.nb_entries);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Successful<sp/>operations<sp/><sp/>:<sp/>Set<sp/>=<sp/>%d,<sp/><sp/>Get<sp/>=<sp/>%d,<sp/><sp/>Del<sp/>=<sp/>%d,<sp/><sp/>Test<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.ok.nb_set,<sp/>statistiques.dynamic.ok.nb_get,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.ok.nb_del,<sp/>statistiques.dynamic.ok.nb_test);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Failed<sp/>operations<sp/>:<sp/>Set<sp/>=<sp/>%d,<sp/><sp/>Get<sp/>=<sp/>%d,<sp/><sp/>Del<sp/>=<sp/>%d,<sp/><sp/>Test<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.err.nb_set,<sp/>statistiques.dynamic.err.nb_get,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.err.nb_del,<sp/>statistiques.dynamic.err.nb_test);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Operations<sp/>&apos;NotFound&apos;:<sp/>Set<sp/>=<sp/>%d,<sp/><sp/>Get<sp/>=<sp/>%d,<sp/><sp/>Del<sp/>=<sp/>%d,<sp/><sp/>Test<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.notfound.nb_set,<sp/>statistiques.dynamic.notfound.nb_get,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.dynamic.notfound.nb_del,<sp/>statistiques.dynamic.notfound.nb_test);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>LogTest</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Calculated<sp/>statistics:<sp/>min_rbt_node<sp/>=<sp/>%d,<sp/><sp/>max_rbt_node<sp/>=<sp/>%d,<sp/><sp/>average_rbt_node<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.computed.min_rbt_num_node,<sp/>statistiques.computed.max_rbt_num_node,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiques.computed.average_rbt_num_node);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>sur<sp/>la<sp/>pertinence<sp/>des<sp/>valeurs<sp/>de<sp/>statistiques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statistiques.dynamic.ok.nb_set<sp/>!=<sp/>MAXTEST)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>Incorrect<sp/>statistics:<sp/>ok.nb_set<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statistiques.dynamic.ok.nb_get<sp/>+<sp/>statistiques.dynamic.notfound.nb_get<sp/>!=</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>MAXGET<sp/>+<sp/>3)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>Incorrect<sp/>statistics:<sp/>*.nb_get<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statistiques.dynamic.ok.nb_del<sp/>!=<sp/>MAXDESTROY<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>statistiques.dynamic.notfound.nb_del<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>ECHOUE<sp/>:<sp/>statistiques<sp/>incorrectes:<sp/>*.nb_del<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statistiques.dynamic.err.nb_test<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>ECHOUE<sp/>:<sp/>statistiques<sp/>incorrectes:<sp/>err.nb_test<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tous<sp/>les<sp/>tests<sp/>sont<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>BuddyDumpMem(stdout);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;\n-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>succeeded:<sp/>all<sp/>tests<sp/>pass<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/HashTable/test_cmchash.c"/>
  </compounddef>
</doxygen>
