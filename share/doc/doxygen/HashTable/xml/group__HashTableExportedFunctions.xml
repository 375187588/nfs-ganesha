<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="group__HashTableExportedFunctions" kind="group">
    <compoundname>HashTableExportedFunctions</compoundname>
    <title>HashTableExportedFunctions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hash_table_t *</type>
        <definition>hash_table_t* HashTable_Init</definition>
        <argsstring>(hash_parameter_t hparam)</argsstring>
        <name>HashTable_Init</name>
        <param>
          <type>hash_parameter_t</type>
          <declname>hparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Init: Init the Hash Table.</para><para>Init the Hash Table .</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure of type hash_parameter_t which contains the values used to init the hash table.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL if init failed, the pointeur to the hashtable otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para><simplesectsep/><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="456" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="455" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1ga9fd137ceaac7ec4918a51b59d5e73031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HashTable_Test_And_Set</definition>
        <argsstring>(hash_table_t *ht, hash_buffer_t *buffkey, hash_buffer_t *buffval, hashtable_set_how_t how)</argsstring>
        <name>HashTable_Test_And_Set</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffkey</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffval</declname>
        </param>
        <param>
          <type>hashtable_set_how_t</type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Test_And_Set: set a pair (key,value) into the Hash Table.</para><para>Set a (key,val) couple in the hashtable .</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffkey</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointeur to an object of type hash_buffer_t which describe the key location in memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffval</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointeur to an object of type hash_buffer_t which describe the value location in memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>how</parametername>
</parameternamelist>
<parameterdescription>
<para>a switch to tell if the entry is to be tested or overwritten or not</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HASHTABLE_SUCCESS if successfull<linebreak/>
. </para><simplesectsep/><para>HASHTABLE_INSERT_MALLOC_ERROR if an error occured during the insertion process.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="568" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="566" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HashTable_Get</definition>
        <argsstring>(hash_table_t *ht, hash_buffer_t *buffkey, hash_buffer_t *buffval)</argsstring>
        <name>HashTable_Get</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffkey</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Get: Try to retrieve the value associated with a key.</para><para>Try to retrieve the value associated with a key. The structure buffval will point to the object found if successfull.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffkey</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointeur to an object of type hash_buffer_t which describe the key location in memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffval</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointeur to an object of type hash_buffer_t which describe the value location in memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HASHTABLE_SUCCESS if successfull<linebreak/>
. </para><simplesectsep/><para>HASHTABLE_ERROR_NO_SUCH_KEY is the key was not found.</para></simplesect>
<simplesect kind="see"><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" kindref="member">HashTable_Del</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="703" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="702" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1gadda0535c9f1748795d9eeb2514f5458c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HashTable_Del</definition>
        <argsstring>(hash_table_t *ht, hash_buffer_t *buffkey, hash_buffer_t *p_usedbuffkey, hash_buffer_t *p_usedbuffdata)</argsstring>
        <name>HashTable_Del</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffkey</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>p_usedbuffkey</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>p_usedbuffdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Del: Remove a (key,val) couple from the hashtable.</para><para>Remove a (key,val) couple from the hashtable. The parameter buffkey contains the key which describes the object to be removed from the hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffkey</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointeur to an object of type hash_buffer_t which describe the key location in memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pusedbuffkeydata</parametername>
</parameternamelist>
<parameterdescription>
<para>the key data buffer that was associated with this entry. Not considered if equal to NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HASHTABLE_SUCCESS if successfull<linebreak/>
. </para><simplesectsep/><para>HASHTABLE_ERROR_NO_SUCH_KEY is the key was not found.</para></simplesect>
<simplesect kind="see"><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="766" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="764" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1ga8cc973332d8c4a92258793acc228e084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HashTable_GetStats</definition>
        <argsstring>(hash_table_t *ht, hash_stat_t *hstat)</argsstring>
        <name>HashTable_GetStats</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <param>
          <type>hash_stat_t *</type>
          <declname>hstat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_GetStats: Computes statistiques on the hashtable</para><para>Print information about the hashtable (mostly for debugging purpose).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hstat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the result</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none (returns void).</para></simplesect>
<simplesect kind="see"><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="842" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="841" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1ga882a11e8509b2fb9de233145f923d516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int HashTable_GetSize</definition>
        <argsstring>(hash_table_t *ht)</argsstring>
        <name>HashTable_GetSize</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_GetSize: Gets the number of entries in the hashtable.</para><para>Gets the number of entries in the hashtable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of found entries</para></simplesect>
<simplesect kind="see"><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="920" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="919" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1gaf5add10f55a1624787f981099d005806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HashTable_Log</definition>
        <argsstring>(log_components_t component, hash_table_t *ht)</argsstring>
        <name>HashTable_Log</name>
        <param>
          <type>log_components_t</type>
          <declname>component</declname>
        </param>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Print: Print information about the hashtable (mostly for debugging purpose).</para><para>Print information about the hashtable (mostly for debugging purpose).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>component</parametername>
</parameternamelist>
<parameterdescription>
<para>the component debugging config to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none (returns void).</para></simplesect>
<simplesect kind="see"><para>HashTable_Set </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gab4e795677661542fc1a84e0ffd9ec41d" kindref="member">HashTable_Init</ref> </para><simplesectsep/><para><ref refid="group__HashTableExportedFunctions_1gae002d8403bd95e1ae432333bb16ae509" kindref="member">HashTable_Get</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="949" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="948" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTableExportedFunctions_1ga8403154cc1223657b499272deef394ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HashTable_Print</definition>
        <argsstring>(hash_table_t *ht)</argsstring>
        <name>HashTable_Print</name>
        <param>
          <type>hash_table_t *</type>
          <declname>ht</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Print: Print information about the hashtable (mostly for debugging purpose).</para><para>Print information about the hashtable (mostly for debugging purpose).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ht</parametername>
</parameternamelist>
<parameterdescription>
<para>the hashtable to be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none (returns void). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/HashTable/HashTable.c" line="1007" bodyfile="/export/GANESHA/src/HashTable/HashTable.c" bodystart="1006" bodyend="1009"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
