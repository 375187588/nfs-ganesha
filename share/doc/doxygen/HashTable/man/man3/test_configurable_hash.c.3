.TH "test_configurable_hash.c" 3 "15 Sep 2010" "Version 0.1" "Hash Table Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test_configurable_hash.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <strings.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include 'MesureTemps.h'\fP
.br
\fC#include 'log_macros.h'\fP
.br
\fC#include 'BuddyMalloc.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBLENBUF\fP   256"
.br
.ti -1c
.RI "#define \fBSTRSIZE\fP   10"
.br
.ti -1c
.RI "#define \fBMAXTEST\fP   10000"
.br
.ti -1c
.RI "#define \fBMAXDESTROY\fP   5"
.br
.ti -1c
.RI "#define \fBMAXGET\fP   3"
.br
.ti -1c
.RI "#define \fBNB_PREALLOC\fP   10000"
.br
.ti -1c
.RI "#define \fBPRIME\fP   3"
.br
.ti -1c
.RI "#define \fBCRITERE\fP   12"
.br
.ti -1c
.RI "#define \fBCRITERE_2\fP   14"
.br
.ti -1c
.RI "#define \fBMem_Alloc\fP(a)   BuddyMalloc( a )"
.br
.ti -1c
.RI "#define \fBMem_Free\fP(a)   BuddyFree( a )"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcompare_string_buffer\fP (hash_buffer_t *buff1, hash_buffer_t *buff2)"
.br
.ti -1c
.RI "int \fBdisplay_buff\fP (hash_buffer_t *pbuff, char *str)"
.br
.ti -1c
.RI "unsigned long \fBsimple_hash_func\fP (hash_parameter_t *p_hparam, hash_buffer_t *buffclef)"
.br
.ti -1c
.RI "unsigned long \fBdouble_hash_func\fP (hash_parameter_t *p_hparam, hash_buffer_t *buffclef)"
.br
.ti -1c
.RI "unsigned long \fBrbt_hash_func\fP (hash_parameter_t *p_hparam, hash_buffer_t *buffclef)"
.br
.ti -1c
.RI "int \fBdo_get\fP (hash_table_t *ht, int key, int *pval)"
.br
.ti -1c
.RI "int \fBdo_set\fP (hash_table_t *ht, int key, int val)"
.br
.ti -1c
.RI "int \fBdo_new\fP (hash_table_t *ht, int key, int val)"
.br
.ti -1c
.RI "int \fBdo_del\fP (hash_table_t *ht, int key)"
.br
.ti -1c
.RI "int \fBdo_test\fP (hash_table_t *ht, int key)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define CRITERE   12"
.PP
Definition at line 93 of file test_configurable_hash.c.
.SS "#define CRITERE_2   14"
.PP
Definition at line 94 of file test_configurable_hash.c.
.SS "#define LENBUF   256"
.PP
Definition at line 86 of file test_configurable_hash.c.
.SS "#define MAXDESTROY   5"
.PP
Definition at line 89 of file test_configurable_hash.c.
.SS "#define MAXGET   3"
.PP
Definition at line 90 of file test_configurable_hash.c.
.SS "#define MAXTEST   10000"
.PP
Definition at line 88 of file test_configurable_hash.c.
.SS "#define Mem_Alloc(a)   BuddyMalloc( a )"
.PP
Definition at line 102 of file test_configurable_hash.c.
.SS "#define Mem_Free(a)   BuddyFree( a )"
.PP
Definition at line 103 of file test_configurable_hash.c.
.SS "#define NB_PREALLOC   10000"
.PP
Definition at line 91 of file test_configurable_hash.c.
.SS "#define PRIME   3"
.PP
Definition at line 92 of file test_configurable_hash.c.
.SS "#define STRSIZE   10"
.PP
Definition at line 87 of file test_configurable_hash.c.
.SH "Function Documentation"
.PP 
.SS "int compare_string_buffer (hash_buffer_t * buff1, hash_buffer_t * buff2)"
.PP
Definition at line 106 of file test_configurable_hash.c.
.SS "int display_buff (hash_buffer_t * pbuff, char * str)"
.PP
Definition at line 121 of file test_configurable_hash.c.
.SS "int do_del (hash_table_t * ht, int key)"
.PP
Definition at line 192 of file test_configurable_hash.c.
.SS "int do_get (hash_table_t * ht, int key, int * pval)"
.PP
Definition at line 130 of file test_configurable_hash.c.
.SS "int do_new (hash_table_t * ht, int key, int val)"
.PP
Definition at line 172 of file test_configurable_hash.c.
.SS "int do_set (hash_table_t * ht, int key, int val)"
.PP
Definition at line 149 of file test_configurable_hash.c.
.SS "int do_test (hash_table_t * ht, int key)"
.PP
Definition at line 205 of file test_configurable_hash.c.
.SS "int main (int argc, char * argv[])"
.PP
Definition at line 219 of file test_configurable_hash.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Hash Table Library from the source code.
