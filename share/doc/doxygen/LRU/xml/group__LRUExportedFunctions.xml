<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="group__LRUExportedFunctions" kind="group">
    <compoundname>LRUExportedFunctions</compoundname>
    <title>LRUExportedFunctions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__LRUExportedFunctions_1ga5c11aa9a651e67795871ff66d540c86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LRU_list_t *</type>
        <definition>LRU_list_t* LRU_Init</definition>
        <argsstring>(LRU_parameter_t lru_param, LRU_status_t *pstatus)</argsstring>
        <name>LRU_Init</name>
        <param>
          <type>LRU_parameter_t</type>
          <declname>lru_param</declname>
        </param>
        <param>
          <type>LRU_status_t *</type>
          <declname>pstatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_Init: Init the LRU list.</para><para>Init the Hash Table .</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lru_param</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure of type lru_parameter_t which contains the values used to init the LRU. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pstatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an integer to contain the status for the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL if init failed, the pointeur to the hashtable otherwise.</para></simplesect>
<simplesect kind="see"><para>PreAllocEntry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="127" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="126" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LRU_invalidate</definition>
        <argsstring>(LRU_list_t *plru, LRU_entry_t *pentry)</argsstring>
        <name>LRU_invalidate</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_invalidate: Tag an entry as invalid.</para><para>Tag an entry as invalid, this kind of entry will be put off the LRU (and sent back to the pool) when a garbagge collection will be performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the list to be managed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the entry to be tagged.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SUCCESS if successfull, other values show an error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" kindref="member">LRU_gc_invalid</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="182" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="181" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1gac3cdaf55a44b7b59956d18e4f842e313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LRU_entry_t *</type>
        <definition>LRU_entry_t* LRU_new_entry</definition>
        <argsstring>(LRU_list_t *plru, LRU_status_t *pstatus)</argsstring>
        <name>LRU_new_entry</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>LRU_status_t *</type>
          <declname>pstatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_new_entry : acquire a new entry from the pool.</para><para>acquire a new entry from the pool. If pool is empty, a new chunck is added to complete the operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the list to be managed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pstatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an integer to contain the status for the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL if init failed, the pointeur to the hashtable otherwise.</para></simplesect>
<simplesect kind="see"><para>PreAllocEntry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="206" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="205" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LRU_gc_invalid</definition>
        <argsstring>(LRU_list_t *plru, void *cleanparam)</argsstring>
        <name>LRU_gc_invalid</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cleanparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_gc_invalid : garbagge collection for invalid entries.</para><para>Read the whole LRU list and put the invalid entries back to the pool.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the list to be managed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer to contain the status for the operation.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" kindref="member">LRU_invalidate</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="263" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="262" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1ga7dd2fad27347334adf7270b46fdd2d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LRU_invalidate_by_function</definition>
        <argsstring>(LRU_list_t *plru, int(*testfunc)(LRU_entry_t *, void *addparam), void *addparam)</argsstring>
        <name>LRU_invalidate_by_function</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>int(*)(LRU_entry_t *, void *addparam)</type>
          <declname>testfunc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_invalidate_by_function: Browse the lru to test if entries should ne invalidated.</para><para>Browse the lru to test if entries should ne invalidated. This function is used for garbagge collection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] LRU list to be managed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>testfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] function used to identify an entry to be tagged invalid. This function returns TRUE if entry will be tagged invalid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] parameter for the input function.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SUCCESS if ok, other values shows an error</para></simplesect>
<simplesect kind="see"><para><ref refid="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" kindref="member">LRU_invalidate</ref> </para><simplesectsep/><para><ref refid="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" kindref="member">LRU_gc_invalid</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="338" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="335" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1gaafa384e13ee10b82ae4700b40141a332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LRU_apply_function</definition>
        <argsstring>(LRU_list_t *plru, int(*myfunc)(LRU_entry_t *, void *addparam), void *addparam)</argsstring>
        <name>LRU_apply_function</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>int(*)(LRU_entry_t *, void *addparam)</type>
          <declname>myfunc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRU_apply_function: apply the same function to every LRU entry, but do not change their states.</para><para>apply the same function to every LRU entry, but do not change their states.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] LRU list to be managed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>myfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] function used to be runned on every entry. If this function return FALSE, the loop stops. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] parameter for the input function.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRU_LIST_SUCCESS if ok, other values shows an error</para></simplesect>
<simplesect kind="see"><para><ref refid="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" kindref="member">LRU_invalidate</ref> </para><simplesectsep/><para><ref refid="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" kindref="member">LRU_gc_invalid</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="394" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="392" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="group__LRUExportedFunctions_1gaab0cf057112f447b98e47151ff834220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LRU_Print</definition>
        <argsstring>(LRU_list_t *plru)</argsstring>
        <name>LRU_Print</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HashTable_Log: Print information about the LRU (mostly for debugging purpose).</para><para>Print information about the LRU (mostly for debugging purpose).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plru</parametername>
</parameternamelist>
<parameterdescription>
<para>the LRU to be used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none (returns void). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/LRU_List.c" line="440" bodyfile="/export/GANESHA/src/LRU/LRU_List.c" bodystart="439" bodyend="450"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
