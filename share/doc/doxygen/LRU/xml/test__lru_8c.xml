<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="test__lru_8c" kind="file">
    <compoundname>test_lru.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">BuddyMalloc.h</includes>
    <includes local="yes">LRU_List.h</includes>
    <includes local="yes">log_macros.h</includes>
    <incdepgraph>
      <node id="22">
        <label>LRU_List.h</label>
      </node>
      <node id="23">
        <label>log_macros.h</label>
      </node>
      <node id="18">
        <label>stdlib.h</label>
      </node>
      <node id="21">
        <label>BuddyMalloc.h</label>
      </node>
      <node id="20">
        <label>string.h</label>
      </node>
      <node id="19">
        <label>strings.h</label>
      </node>
      <node id="16">
        <label>test_lru.c</label>
        <link refid="test_lru.c"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" prot="public" static="no">
        <name>PREALLOC</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="67" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" prot="public" static="no">
        <name>MAXTEST</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="68" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__lru_8c_1a32947fb41aad50de0587ec096a0daebc" prot="public" static="no">
        <name>KEPT_ENTRY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="69" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int print_entry</definition>
        <argsstring>(LRU_data_t data, char *str)</argsstring>
        <name>print_entry</name>
        <param>
          <type>LRU_data_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="72" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int clean_entry</definition>
        <argsstring>(LRU_entry_t *pentry, void *addparam)</argsstring>
        <name>clean_entry</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="77" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_lru.c" line="82" bodyfile="/export/GANESHA/src/LRU/test_lru.c" bodystart="81" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Test<sp/>for<sp/>the<sp/>LRU<sp/>List<sp/>layer</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>$Header:<sp/>/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/LRU/test_lru.c,v<sp/>1.9<sp/>2005/11/28<sp/>17:02:39<sp/>deniel<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.8<sp/><sp/>2005/10/05<sp/>14:03:29<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>DEBUG<sp/>ifdef<sp/>are<sp/>now<sp/>much<sp/>cleaner</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.7<sp/><sp/>2005/05/10<sp/>11:44:02<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Datacache<sp/>and<sp/>metadatacache<sp/>are<sp/>noewqw<sp/>bounded</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.6<sp/><sp/>2004/12/08<sp/>15:47:18<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Inclusion<sp/>of<sp/>systenm<sp/>headers<sp/>has<sp/>been<sp/>reviewed</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.5<sp/><sp/>2004/10/19<sp/>08:41:09<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Lots<sp/>of<sp/>memory<sp/>leaks<sp/>fixed</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.4<sp/><sp/>2004/10/18<sp/>08:42:43<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Modifying<sp/>prototypes<sp/>for<sp/>LRU_new_entry</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2004/09/21<sp/>12:21:05<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Differentiation<sp/>des<sp/>differents<sp/>tests<sp/>configurables</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Premiere<sp/>version<sp/>clean</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2004/09/20<sp/>15:36:18<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Premiere<sp/>implementation,<sp/>sans<sp/>prealloc</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2004/09/01<sp/>14:52:24<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Population<sp/>de<sp/>la<sp/>branche<sp/>LRU</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BuddyMalloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LRU_List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="test__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PREALLOC<sp/>10000</highlight></codeline>
<codeline lineno="68" refid="test__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAXTEST<sp/>10</highlight></codeline>
<codeline lineno="69" refid="test__lru_8c_1a32947fb41aad50de0587ec096a0daebc" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>KEPT_ENTRY<sp/>5</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" kindref="member">print_entry</ref>(LRU_data_t<sp/>data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(str,<sp/>LRU_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data.pdata);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print_entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" kindref="member">clean_entry</ref>(LRU_entry_t<sp/>*<sp/>pentry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addparam)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cleanentry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="test__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__configurable__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>SetDefaultLogging(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>SetNamePgm(</highlight><highlight class="stringliteral">&quot;test_lru&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>LRU_list_t<sp/>*plru;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>LRU_parameter_t<sp/>param;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*entry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*kept_entry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>strtab[<ref refid="test__configurable__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" kindref="member">MAXTEST</ref>][10];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>param.nb_entry_prealloc<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" kindref="member">PREALLOC</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>param.entry_to_str<sp/>=<sp/><ref refid="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" kindref="member">print_entry</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>param.clean_entry<sp/>=<sp/><ref refid="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" kindref="member">clean_entry</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>BuddyInit(NULL);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((plru<sp/>=<sp/><ref refid="group__LRUExportedFunctions_1ga5c11aa9a651e67795871ff66d540c86e" kindref="member">LRU_Init</ref>(param,<sp/>&amp;status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>Bad<sp/>Init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__configurable__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" kindref="member">MAXTEST</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Added<sp/>entry<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(strtab[i],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((entry<sp/>=<sp/><ref refid="group__LRUExportedFunctions_1gac3cdaf55a44b7b59956d18e4f842e313" kindref="member">LRU_new_entry</ref>(plru,<sp/>&amp;status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>bad<sp/>entry<sp/>add,<sp/>status<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;buffdata.pdata<sp/>=<sp/>strtab[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;buffdata.len<sp/>=<sp/>strlen(strtab[i]);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/><ref refid="test__lru_8c_1a32947fb41aad50de0587ec096a0daebc" kindref="member">KEPT_ENTRY</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kept_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>printing<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="group__LRUExportedFunctions_1gaab0cf057112f447b98e47151ff834220" kindref="member">LRU_Print</ref>(plru);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" kindref="member">LRU_invalidate</ref>(plru,<sp/>kept_entry);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_LRU))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__LRUExportedFunctions_1gaab0cf057112f447b98e47151ff834220" kindref="member">LRU_Print</ref>(plru);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" kindref="member">LRU_gc_invalid</ref>(plru,<sp/>NULL)<sp/>!=<sp/>LRU_LIST_SUCCESS)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>FAILED:<sp/>bad<sp/>gc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="group__LRUExportedFunctions_1gaab0cf057112f447b98e47151ff834220" kindref="member">LRU_Print</ref>(plru);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tous<sp/>les<sp/>tests<sp/>sont<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;\n-----------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>succeeded:<sp/>all<sp/>tests<sp/>pass<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/LRU/test_lru.c"/>
  </compounddef>
</doxygen>
