<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="test__configurable__lru_8c" kind="file">
    <compoundname>test_configurable_lru.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">BuddyMalloc.h</includes>
    <includes local="yes">LRU_List.h</includes>
    <includes local="yes">log_macros.h</includes>
    <incdepgraph>
      <node id="13">
        <label>LRU_List.h</label>
      </node>
      <node id="14">
        <label>log_macros.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>BuddyMalloc.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>test_configurable_lru.c</label>
        <link refid="test_configurable_lru.c"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>strings.h</label>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__configurable__lru_8c_1a799f2d62ff1a8069195e037a3b7905ae" prot="public" static="no">
        <name>LENBUF</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="63" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__configurable__lru_8c_1a29e632a035b9d4c4b6225bb936eb8097" prot="public" static="no">
        <name>STRSIZE</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="64" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__configurable__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" prot="public" static="no">
        <name>PREALLOC</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="65" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__configurable__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" prot="public" static="no">
        <name>MAXTEST</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="66" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__configurable__lru_8c_1a4708db27e214130ba35e65dd4b740156" prot="public" static="no" mutable="no">
        <type>LRU_entry_t *</type>
        <definition>LRU_entry_t* tabentry[MAXTEST]</definition>
        <argsstring>[MAXTEST]</argsstring>
        <name>tabentry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="68" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__configurable__lru_8c_1aefa91446a9cda79ca3dd355daaed5831" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int print_entry</definition>
        <argsstring>(LRU_data_t data, char *str)</argsstring>
        <name>print_entry</name>
        <param>
          <type>LRU_data_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="71" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="test__configurable__lru_8c_1af9fa3e88f3504d5db0c8e5c39de427a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int clean_entry</definition>
        <argsstring>(LRU_entry_t *pentry, void *addparam)</argsstring>
        <name>clean_entry</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="77" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__configurable__lru_8c_1a8e17dac3023565c5bd97b43488ab7f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_invalidate</definition>
        <argsstring>(LRU_list_t *plru, int key)</argsstring>
        <name>do_invalidate</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="82" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="test__configurable__lru_8c_1a95d0189529916fad0da728ba589c3b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_new</definition>
        <argsstring>(LRU_list_t *plru, int key)</argsstring>
        <name>do_new</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="91" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="90" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="test__configurable__lru_8c_1a69fb1ec85a72456d2eaa23d63156d54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_gc</definition>
        <argsstring>(LRU_list_t *plru)</argsstring>
        <name>do_gc</name>
        <param>
          <type>LRU_list_t *</type>
          <declname>plru</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="117" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="test__configurable__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/LRU/test_configurable_lru.c" line="122" bodyfile="/export/GANESHA/src/LRU/test_configurable_lru.c" bodystart="121" bodyend="262"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Configurable<sp/>test<sp/>for<sp/>the<sp/>LRU<sp/>List<sp/>layer</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>$Header:<sp/>/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/LRU/test_configurable_lru.c,v<sp/>1.7<sp/>2005/11/28<sp/>17:02:39<sp/>deniel<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.6<sp/><sp/>2005/05/10<sp/>11:44:02<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Datacache<sp/>and<sp/>metadatacache<sp/>are<sp/>noewqw<sp/>bounded</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.5<sp/><sp/>2004/12/08<sp/>14:49:44<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Lack<sp/>of<sp/>includes<sp/>in<sp/>test_configurable_hash.c<sp/>and<sp/><sp/>test_configurable_lru.c</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.4<sp/><sp/>2004/10/19<sp/>08:41:09<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Lots<sp/>of<sp/>memory<sp/>leaks<sp/>fixed</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2004/10/18<sp/>08:42:43<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Modifying<sp/>prototypes<sp/>for<sp/>LRU_new_entry</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2004/09/23<sp/>14:34:48<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Mise<sp/>en<sp/>place<sp/>du<sp/>test<sp/>configurable</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2004/09/21<sp/>13:18:40<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>test_configurable.c<sp/>renomme<sp/>en<sp/>test_configurable_lru.c</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2004/09/01<sp/>14:52:24<sp/><sp/>deniel</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Population<sp/>de<sp/>la<sp/>branche<sp/>LRU</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BuddyMalloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LRU_List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="test__configurable__lru_8c_1a799f2d62ff1a8069195e037a3b7905ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LENBUF<sp/>256</highlight></codeline>
<codeline lineno="64" refid="test__configurable__lru_8c_1a29e632a035b9d4c4b6225bb936eb8097" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STRSIZE<sp/>10</highlight></codeline>
<codeline lineno="65" refid="test__configurable__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PREALLOC<sp/>1000000</highlight></codeline>
<codeline lineno="66" refid="test__configurable__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAXTEST<sp/>1000000</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="test__configurable__lru_8c_1a4708db27e214130ba35e65dd4b740156" refkind="member"><highlight class="normal">LRU_entry_t<sp/>*<ref refid="test__configurable__lru_8c_1a4708db27e214130ba35e65dd4b740156" kindref="member">tabentry</ref>[<ref refid="test__configurable__lru_8c_1a03d9dd35a7b43ebc597de16d46a0e845" kindref="member">MAXTEST</ref>];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" kindref="member">print_entry</ref>(LRU_data_t<sp/>data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(str,<sp/>LRU_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;%s,<sp/>len=%llu&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data.pdata,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)data.len);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print_entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" kindref="member">clean_entry</ref>(LRU_entry_t<sp/>*<sp/>pentry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addparam)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cleanentry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="test__configurable__lru_8c_1a8e17dac3023565c5bd97b43488ab7f3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__configurable__lru_8c_1a8e17dac3023565c5bd97b43488ab7f3d" kindref="member">do_invalidate</ref>(LRU_list_t<sp/>*<sp/>plru,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*pentry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>pentry<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a4708db27e214130ba35e65dd4b740156" kindref="member">tabentry</ref>[key];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__LRUExportedFunctions_1ga1ae86980b1af3955da609b1be7e2a059" kindref="member">LRU_invalidate</ref>(plru,<sp/>pentry);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="test__configurable__lru_8c_1a95d0189529916fad0da728ba589c3b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__configurable__lru_8c_1a95d0189529916fad0da728ba589c3b4c" kindref="member">do_new</ref>(LRU_list_t<sp/>*<sp/>plru,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpkey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*pentry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>status;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tmpkey<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(<ref refid="test__configurable__lru_8c_1a29e632a035b9d4c4b6225bb936eb8097" kindref="member">STRSIZE</ref>))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>sprintf(tmpkey,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pentry<sp/>=<sp/><ref refid="group__LRUExportedFunctions_1gac3cdaf55a44b7b59956d18e4f842e313" kindref="member">LRU_new_entry</ref>(plru,<sp/>&amp;status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(tmpkey);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>pentry-&gt;buffdata.len<sp/>=<sp/>strlen(tmpkey);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>pentry-&gt;buffdata.pdata<sp/>=<sp/>tmpkey;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="test__configurable__lru_8c_1a4708db27e214130ba35e65dd4b740156" kindref="member">tabentry</ref>[key]<sp/>=<sp/>pentry;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="test__configurable__lru_8c_1a69fb1ec85a72456d2eaa23d63156d54d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__configurable__lru_8c_1a69fb1ec85a72456d2eaa23d63156d54d" kindref="member">do_gc</ref>(LRU_list_t<sp/>*<sp/>plru)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__LRUExportedFunctions_1gaeaff4bce3efdf4087b96ba83912388bd" kindref="member">LRU_gc_invalid</ref>(plru,<sp/>NULL);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="test__configurable__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__configurable__lru_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>SetDefaultLogging(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>SetNamePgm(</highlight><highlight class="stringliteral">&quot;test_configurable_lru&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="test__configurable__lru_8c_1a799f2d62ff1a8069195e037a3b7905ae" kindref="member">LENBUF</ref>];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hrc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected_rc;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>LRU_list_t<sp/>*plru;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>LRU_parameter_t<sp/>param;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>param.nb_entry_prealloc<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a9dadacd5ee41d21ea8974d66757983dd" kindref="member">PREALLOC</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>param.entry_to_str<sp/>=<sp/><ref refid="test__lru_8c_1aea38d63e4172f007b92d4bfeebb6b6d2" kindref="member">print_entry</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>param.clean_entry<sp/>=<sp/><ref refid="test__lru_8c_1aed3b7c3b1bdb635f3c7d88e630279b79" kindref="member">clean_entry</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>BuddyInit(NULL);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((plru<sp/>=<sp/><ref refid="group__LRUExportedFunctions_1ga5c11aa9a651e67795871ff66d540c86e" kindref="member">LRU_Init</ref>(param,<sp/>&amp;status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>ECHOUE<sp/>:<sp/>Mauvaise<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>*<sp/>La<sp/>syntaxe<sp/>d&apos;un<sp/>test<sp/>est<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&apos;i<sp/>key<sp/>rc&apos;<sp/>:<sp/>invalide<sp/>l&apos;entree<sp/>avec<sp/>la<sp/>clef<sp/>key</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&apos;n<sp/>key<sp/>rc&apos;<sp/>:<sp/>cree<sp/>une<sp/>nouvelle<sp/>entree<sp/>avec<sp/>la<sp/>clef<sp/>key</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&apos;g<sp/>key<sp/>rc&apos;<sp/>:<sp/>passage<sp/>du<sp/>garbage<sp/>collector<sp/>(key<sp/>ne<sp/>sert<sp/>a<sp/>rien)</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&apos;p<sp/>key<sp/>rc&apos;<sp/>:<sp/>imprime<sp/>le<sp/>LRU<sp/>(key<sp/>et<sp/>rc<sp/>ne<sp/>servent<sp/>a<sp/>rien).</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Une<sp/>ligne<sp/>qui<sp/>debute<sp/>par<sp/>&apos;#&apos;<sp/>est<sp/>un<sp/>commentaire</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Une<sp/>ligne<sp/>qui<sp/>debute<sp/>par<sp/>un<sp/>espace<sp/>ou<sp/>un<sp/>tab<sp/>est<sp/>une<sp/>ligne<sp/>vide<sp/>[meme<sp/>si<sp/>il<sp/>y<sp/>a<sp/>des<sp/>trucs<sp/>derriere..<sp/>:-(<sp/>]</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Une<sp/>ligne<sp/>vide<sp/>(juste<sp/>un<sp/>CR)<sp/>est<sp/>une<sp/>ligne<sp/>vide<sp/>(cette<sp/>citation<sp/>a<sp/>recu<sp/>le<sp/>Premier<sp/>Prix<sp/>lors<sp/>du<sp/>Festival<sp/>International<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/>de<sp/>la<sp/>Tautologie<sp/>de<sp/>Langue<sp/>Francaise<sp/>(FITLF),<sp/>a<sp/>Poully<sp/>le<sp/>Marais,<sp/>en<sp/>Aout<sp/>2004)</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;============<sp/>Debut<sp/>de<sp/>l&apos;interactif<sp/>=================&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ok)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Code<sp/>interactif,<sp/>pompe<sp/>sur<sp/>le<sp/>test<sp/>rbt<sp/>de<sp/>Jacques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((p<sp/>=<sp/>fgets(buf,<sp/><ref refid="test__configurable__lru_8c_1a799f2d62ff1a8069195e037a3b7905ae" kindref="member">LENBUF</ref>,<sp/>stdin))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;fin<sp/>des<sp/>commandes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((p<sp/>=<sp/>strchr(buf,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>sscanf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%c<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;c,<sp/>&amp;key,<sp/>&amp;expected_rc);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>indique<sp/>un<sp/>commentaire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>rc<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>d&apos;une<sp/>ligne<sp/>vide<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>de<sp/>syntaxe<sp/>:<sp/>mettre<sp/>un<sp/>diese<sp/>au<sp/>debut<sp/>d&apos;un<sp/>commentaire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>de<sp/>syntaxe<sp/>:<sp/>sscanf<sp/>retourne<sp/>%d<sp/>au<sp/>lieu<sp/>de<sp/>3&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;---&gt;<sp/>%c<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>c,<sp/>key,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>overwrite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;invalidate<sp/><sp/>%d<sp/><sp/>--&gt;<sp/>%d<sp/>?&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hrc<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a8e17dac3023565c5bd97b43488ab7f3d" kindref="member">do_invalidate</ref>(plru,<sp/>key);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hrc<sp/>!=<sp/>expected_rc)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>ERREUR:<sp/>invalidate<sp/><sp/>%d<sp/>:<sp/>%d<sp/>!=<sp/>%d<sp/>(expected)&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>hrc,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_rc);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>OK<sp/>invalidate<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;new<sp/>%d<sp/>--&gt;<sp/>%d<sp/>?&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hrc<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a95d0189529916fad0da728ba589c3b4c" kindref="member">do_new</ref>(plru,<sp/>key);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hrc<sp/>!=<sp/>expected_rc)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>ERREUR:<sp/>new<sp/>%d<sp/>:<sp/>%d<sp/>!=<sp/>%d<sp/>(expected)&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>hrc,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>OK<sp/>new<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>no<sp/>overwrite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;gc<sp/><sp/>%d<sp/>--&gt;<sp/>%d<sp/>?&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hrc<sp/>=<sp/><ref refid="test__configurable__lru_8c_1a69fb1ec85a72456d2eaa23d63156d54d" kindref="member">do_gc</ref>(plru);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hrc<sp/>!=<sp/>expected_rc)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>ERREUR:<sp/>gc<sp/>%d:<sp/>%d<sp/>!=<sp/>%d<sp/>(expected)&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>hrc,<sp/>expected_rc);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>OK<sp/>new<sp/><sp/>%d&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LRUExportedFunctions_1gaab0cf057112f447b98e47151ff834220" kindref="member">LRU_Print</ref>(plru);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>syntaxe<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;ordre<sp/>&apos;%c&apos;<sp/>non-reconnu&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdin);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;====================================================&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>LogTest(</highlight><highlight class="stringliteral">&quot;Test<sp/>reussi<sp/>:<sp/>tous<sp/>les<sp/>tests<sp/>sont<sp/>passes<sp/>avec<sp/>succes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/LRU/test_configurable_lru.c"/>
  </compounddef>
</doxygen>
