.TH "LRU_List.c" 3 "9 Apr 2008" "Version 0.1" "LRu List Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LRU_List.c \- Management of the thread safe LRU lists. 
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib.h>\fP
.br
\fC#include 'BuddyMalloc.h'\fP
.br
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "LRU_list_t * \fBLRU_Init\fP (LRU_parameter_t lru_param, LRU_status_t *pstatus)"
.br
.ti -1c
.RI "int \fBLRU_invalidate\fP (LRU_list_t *plru, LRU_entry_t *pentry)"
.br
.ti -1c
.RI "LRU_entry_t * \fBLRU_new_entry\fP (LRU_list_t *plru, LRU_status_t *pstatus)"
.br
.ti -1c
.RI "int \fBLRU_gc_invalid\fP (LRU_list_t *plru, void *cleanparam)"
.br
.ti -1c
.RI "int \fBLRU_invalidate_by_function\fP (LRU_list_t *plru, int(*testfunc)(LRU_entry_t *, void *addparam), void *addparam)"
.br
.ti -1c
.RI "int \fBLRU_apply_function\fP (LRU_list_t *plru, int(*myfunc)(LRU_entry_t *, void *addparam), void *addparam)"
.br
.ti -1c
.RI "void \fBLRU_Print\fP (LRU_list_t *plru)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Management of the thread safe LRU lists. 

\fBAuthor:\fP
.RS 4
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
.RE
.PP
\fBDate:\fP
.RS 4
\fBDate\fP.RS 4
2006/01/31 09:51:13 
.RE
.PP
.RE
.PP
\fBVersion:\fP
.RS 4
\fBRevision\fP.RS 4
1.20 
.RE
.PP
.RE
.PP
\fBLRU_List.c\fP :Management of the thread safe LRU lists.
.PP
\fBHeader\fP.RS 4
/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/LRU/LRU_List.c,v 1.20 2006/01/31 09:51:13 deniel Exp 
.RE
.PP
.PP
\fBLog\fP.RS 4
\fBLRU_List.c\fP,v 
.RE
.PP
Revision 1.20 2006/01/31 09:51:13 deniel Fixed LRU prev bug
.PP
Revision 1.19 2006/01/24 08:57:34 leibovic Fixing LRU allocation bug.
.PP
Revision 1.18 2005/11/28 17:02:39 deniel Added CeCILL headers
.PP
Revision 1.17 2005/11/10 07:53:24 deniel Corrected some memory leaks
.PP
Revision 1.16 2005/08/12 07:11:14 deniel Corrected cache_inode_readdir semantics
.PP
Revision 1.15 2005/07/28 08:25:10 deniel Adding different ifdef statemement for additional debugging
.PP
Revision 1.14 2005/05/11 15:30:43 deniel Added paramter extended options to LRU for invalid entries gc
.PP
Revision 1.13 2005/05/10 11:44:02 deniel Datacache and metadatacache are noewqw bounded
.PP
Revision 1.12 2005/02/18 09:35:51 deniel Garbagge collection is ok for file (directory gc is not yet implemented)
.PP
Revision 1.11 2004/11/23 16:45:00 deniel Plenty of bugs corrected
.PP
Revision 1.10 2004/11/22 07:49:30 deniel Adding LRU_invalidate_by_function
.PP
Revision 1.9 2004/10/19 08:41:08 deniel Lots of memory leaks fixed
.PP
Revision 1.8 2004/10/18 08:42:43 deniel Modifying prototypes for LRU_new_entry
.PP
Revision 1.7 2004/10/13 13:01:37 deniel Now using the stuff allocator
.PP
Revision 1.6 2004/10/04 12:51:49 deniel Bad prototypes changed
.PP
Revision 1.5 2004/09/23 08:19:25 deniel Doxygenisation des sources
.PP
Revision 1.4 2004/09/22 08:33:43 deniel Utilisation de preallocation dans LRU
.PP
Revision 1.3 2004/09/21 12:21:04 deniel Differentiation des differents tests configurables Premiere version clean
.PP
Revision 1.2 2004/09/20 15:36:18 deniel Premiere implementation, sans prealloc
.PP
Definition in file \fBLRU_List.c\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for LRu List Library from the source code.
