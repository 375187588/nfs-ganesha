.TH "idmapper.c" 3 "31 Mar 2009" "Version 0.1" "Id Mapper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
idmapper.c \- Id mapping functions.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/svc.h>\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'nfs_tools.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <strings.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <pwd.h>\fP
.br
\fC#include <grp.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBuid2name\fP (char *name, uid_t uid)"
.br
.ti -1c
.RI "int \fBname2uid\fP (char *name, uid_t *puid)"
.br
.ti -1c
.RI "int \fBgid2name\fP (char *name, gid_t gid)"
.br
.ti -1c
.RI "int \fBname2gid\fP (char *name, gid_t *pgid)"
.br
.ti -1c
.RI "int \fBuid2str\fP (uid_t uid, char *str)"
.br
.ti -1c
.RI "int \fBgid2str\fP (gid_t gid, char *str)"
.br
.ti -1c
.RI "int \fBuid2utf8\fP (uid_t uid, utf8string *utf8str)"
.br
.ti -1c
.RI "int \fBgid2utf8\fP (gid_t gid, utf8string *utf8str)"
.br
.ti -1c
.RI "int \fButf82uid\fP (utf8string *utf8str, uid_t *Uid)"
.br
.ti -1c
.RI "int \fButf82gid\fP (utf8string *utf8str, gid_t *Gid)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Id mapping functions. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/01/24 11:43:05 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.2 
.RE
.PP
\fBidmapper.c\fP : Id mapping functions. 
.PP
Definition in file \fBidmapper.c\fP.
.SH "Function Documentation"
.PP 
.SS "int gid2name (char * name, gid_t gid)"
.PP
gid2name: convert a gid to a name.
.PP
convert a uid to a name.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP [OUT] the name of the user 
.br
\fIgid\fP [IN] the input gid
.RE
.PP
return 1 if successful, 0 otherwise 
.PP
Definition at line 213 of file idmapper.c.
.SS "int gid2str (gid_t gid, char * str)"
.PP
gid2ustr: convert a gid to a string.
.PP
Convert a gidonvert a gid to a string. to a string.
.PP
\fBParameters:\fP
.RS 4
\fIgid\fP [IN] the input gid 
.br
\fIstr\fP [OUT] computed string
.RE
.PP
\fBReturns:\fP
.RS 4
the length of the utf8 buffer if succesfull, -1 if failed 
.RE
.PP

.PP
Definition at line 312 of file idmapper.c.
.SS "int gid2utf8 (gid_t gid, utf8string * utf8str)"
.PP
gid2utf8: converts a gid to a utf8 string descriptor.
.PP
Converts a gid to a utf8 string descriptor.
.PP
\fBParameters:\fP
.RS 4
\fIgid\fP [IN] the input gid 
.br
\fIutf8str\fP [OUT] computed UTF8 string descriptor
.RE
.PP
\fBReturns:\fP
.RS 4
the length of the utf8 buffer if succesfull, -1 if failed 
.RE
.PP

.PP
Definition at line 379 of file idmapper.c.
.SS "int name2gid (char * name, gid_t * pgid)"
.PP
name2gid: convert a name to a gid
.PP
convert a name to a gid
.PP
\fBParameters:\fP
.RS 4
\fIname\fP [IN] the name of the user 
.br
\fIpgid\fP [OUT] the resulting gid
.RE
.PP
return 1 if successful, 0 otherwise 
.PP
Definition at line 243 of file idmapper.c.
.SS "int name2uid (char * name, uid_t * puid)"
.PP
name2uid: convert a name to a uid
.PP
convert a name to a uid
.PP
\fBParameters:\fP
.RS 4
\fIname\fP [IN] the name of the user 
.br
\fIpuid\fP [OUT] the resulting uid
.RE
.PP
return 1 if successful, 0 otherwise 
.PP
Definition at line 153 of file idmapper.c.
.SS "int uid2name (char * name, uid_t uid)"
.PP
uid2name: convert a uid to a name.
.PP
convert a uid to a name.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP [OUT] the name of the user 
.br
\fIuid\fP [IN] the input uid
.RE
.PP
return 1 if successful, 0 otherwise 
.PP
Definition at line 124 of file idmapper.c.
.SS "int uid2str (uid_t uid, char * str)"
.PP
uid2ustr: convert a uid to a string.
.PP
Convert a gidonvert a uid to a string. to a string.
.PP
\fBParameters:\fP
.RS 4
\fIuid\fP [IN] the input gid 
.br
\fIstr\fP [OUT] computed string
.RE
.PP
\fBReturns:\fP
.RS 4
the length of the utf8 buffer if succesfull, -1 if failed 
.RE
.PP

.PP
Definition at line 290 of file idmapper.c.
.SS "int uid2utf8 (uid_t uid, utf8string * utf8str)"
.PP
uid2utf8: converts a uid to a utf8 string descriptor.
.PP
Converts a uid to a utf8 string descriptor.
.PP
\fBParameters:\fP
.RS 4
\fIuid\fP [IN] the input uid 
.br
\fIutf8str\fP [OUT] computed UTF8 string descriptor
.RE
.PP
\fBReturns:\fP
.RS 4
the length of the utf8 buffer if succesfull, -1 if failed 
.RE
.PP

.PP
Definition at line 336 of file idmapper.c.
.SS "int utf82gid (utf8string * utf8str, gid_t * Gid)"
.PP
utf82gid: converts a utf8 string descriptorto a gid .
.PP
Converts a utf8 string descriptor to a gid .
.PP
\fBParameters:\fP
.RS 4
\fIutf8str\fP [IN] group's name as UTF8 string. 
.br
\fIGid\fP [OUT] pointer to the computed gid.
.RE
.PP
\fBReturns:\fP
.RS 4
0 in all cases 
.RE
.PP

.PP
Definition at line 455 of file idmapper.c.
.SS "int utf82uid (utf8string * utf8str, uid_t * Uid)"
.PP
utf82gid: converts a utf8 string descriptor to a uid .
.PP
Converts a utf8 string descriptor to a uid.
.PP
\fBParameters:\fP
.RS 4
\fIutf8str\fP [IN] group's name as UTF8 string. 
.br
\fIUid\fP [OUT] pointer to the computed uid.
.RE
.PP
\fBReturns:\fP
.RS 4
0 if successful, 0 otherwise. 
.RE
.PP

.PP
Definition at line 421 of file idmapper.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Id Mapper from the source code.
