<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="cache__inode__fsal__glue_8c" kind="file">
    <compoundname>cache_inode_fsal_glue.c</compoundname>
    <includes local="yes">log_functions.h</includes>
    <includes local="yes">err_fsal.h</includes>
    <includes local="yes">err_cache_inode.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">sys/types.h</includes>
    <incdepgraph>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>log_functions.h</label>
      </node>
      <node id="3">
        <label>err_cache_inode.h</label>
      </node>
      <node id="8">
        <label>sys/types.h</label>
      </node>
      <node id="5">
        <label>unistd.h</label>
      </node>
      <node id="0">
        <label>cache_inode_fsal_glue.c</label>
        <link refid="cache_inode_fsal_glue.c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>strings.h</label>
      </node>
      <node id="4">
        <label>stuff_alloc.h</label>
      </node>
      <node id="2">
        <label>err_fsal.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cache__inode__fsal__glue_8c_1a0" prot="public" static="no">
        <name>HPSS_SSM</name>
        <initializer>&quot;hpss_ssm&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c" line="120" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cache__inode__fsal__glue_8c_1a1" prot="public" static="no">
        <name>HPSS_KEYTAB</name>
        <initializer>&quot;/krb5/hpssserver.keytab&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c" line="121" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cache__inode__fsal__glue_8c_1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_key</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_key</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c" line="304" bodystart="303" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="cache__inode__fsal__glue_8c_1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_not_implemented</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_not_implemented</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c" line="316" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="cache__inode__fsal__glue_8c_1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_value</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_value</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c" line="322" bodystart="321" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Glue functions between the FSAL and the Cache inode layers. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para><simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
</para></simplesect>
<simplesect kind="date"><para><simplesect kind="rcs"><title>Date</title><para>2006/01/20 07:39:23 </para></simplesect>
</para></simplesect>
<simplesect kind="version"><para><simplesect kind="rcs"><title>Revision</title><para>1.9 </para></simplesect>
</para></simplesect>
<ref refid="cache__inode__fsal__glue_8c" kindref="compound">cache_inode_fsal_glue.c</ref> : Glue functions between the FSAL and the Cache inode layers.</para><para><simplesect kind="rcs"><title>Header</title><para>/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/glue/cache_inode_fsal_glue.c,v 1.9 2006/01/20 07:39:23 leibovic Exp </para></simplesect>
</para><para><simplesect kind="rcs"><title>Log</title><para><ref refid="cache__inode__fsal__glue_8c" kindref="compound">cache_inode_fsal_glue.c</ref>,v </para></simplesect>
Revision 1.9 2006/01/20 07:39:23 leibovic Back to the previous version.</para><para>Revision 1.7 2006/01/17 14:52:59 leibovic changin _USE_HPSS to _USE_HPSS_51 and _USE_HPSS_62</para><para>Revision 1.6 2005/11/28 17:02:58 deniel Added CeCILL headers</para><para>Revision 1.5 2005/10/05 14:03:31 deniel DEBUG ifdef are now much cleaner</para><para>Revision 1.4 2005/07/28 12:26:58 deniel NFSv3 PROTOCOL Ok</para><para>Revision 1.3 2005/04/15 12:25:15 deniel Added doxygen comments for code readability.</para><para>Revision 1.1 2005/04/15 07:56:14 deniel Populating the repository with glue layer</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2005)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Ce<sp/>logiciel<sp/>est<sp/>un<sp/>programme<sp/>informatique<sp/>servant<sp/>à<sp/>surveiller<sp/>des</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>journaux<sp/>et<sp/>des<sp/>tests<sp/>de<sp/>non-régression<sp/>pour<sp/>y<sp/>détecter<sp/>des<sp/>situations</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>problématiques<sp/>et<sp/>des<sp/>dysfonctionements.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Ce<sp/>logiciel<sp/>est<sp/>régi<sp/>par<sp/>la<sp/>licence<sp/>CeCILL<sp/>soumise<sp/>au<sp/>droit<sp/>français<sp/>et</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>respectant<sp/>les<sp/>principes<sp/>de<sp/>diffusion<sp/>des<sp/>logiciels<sp/>libres.<sp/>Vous<sp/>pouvez</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>utiliser,<sp/>modifier<sp/>et/ou<sp/>redistribuer<sp/>ce<sp/>programme<sp/>sous<sp/>les<sp/>conditions</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>de<sp/>la<sp/>licence<sp/>CeCILL<sp/>telle<sp/>que<sp/>diffusée<sp/>par<sp/>le<sp/>CEA,<sp/>le<sp/>CNRS<sp/>et<sp/>l&apos;INRIA</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>sur<sp/>le<sp/>site<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>En<sp/>contrepartie<sp/>de<sp/>l&apos;accessibilité<sp/>au<sp/>code<sp/>source<sp/>et<sp/>des<sp/>droits<sp/>de<sp/>copie,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>de<sp/>modification<sp/>et<sp/>de<sp/>redistribution<sp/>accordés<sp/>par<sp/>cette<sp/>licence,<sp/>il<sp/>n&apos;est</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>offert<sp/>aux<sp/>utilisateurs<sp/>qu&apos;une<sp/>garantie<sp/>limitée.<sp/><sp/>Pour<sp/>les<sp/>mêmes<sp/>raisons,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>seule<sp/>une<sp/>responsabilité<sp/>restreinte<sp/>pèse<sp/>sur<sp/>l&apos;auteur<sp/>du<sp/>programme,<sp/><sp/>le</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>titulaire<sp/>des<sp/>droits<sp/>patrimoniaux<sp/>et<sp/>les<sp/>concédants<sp/>successifs.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>A<sp/>cet<sp/>égard<sp/><sp/>l&apos;attention<sp/>de<sp/>l&apos;utilisateur<sp/>est<sp/>attirée<sp/>sur<sp/>les<sp/>risques</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>associés<sp/>au<sp/>chargement,<sp/><sp/>à<sp/>l&apos;utilisation,<sp/><sp/>à<sp/>la<sp/>modification<sp/>et/ou<sp/>au</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>développement<sp/>et<sp/>à<sp/>la<sp/>reproduction<sp/>du<sp/>logiciel<sp/>par<sp/>l&apos;utilisateur<sp/>étant</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>donné<sp/>sa<sp/>spécificité<sp/>de<sp/>logiciel<sp/>libre,<sp/>qui<sp/>peut<sp/>le<sp/>rendre<sp/>complexe<sp/>à</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>manipuler<sp/>et<sp/>qui<sp/>le<sp/>réserve<sp/>donc<sp/>à<sp/>des<sp/>développeurs<sp/>et<sp/>des<sp/>professionnels</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>avertis<sp/>possédant<sp/><sp/>des<sp/><sp/>connaissances<sp/><sp/>informatiques<sp/>approfondies.<sp/><sp/>Les</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>utilisateurs<sp/>sont<sp/>donc<sp/>invités<sp/>à<sp/>charger<sp/><sp/>et<sp/><sp/>tester<sp/><sp/>l&apos;adéquation<sp/><sp/>du</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>logiciel<sp/>à<sp/>leurs<sp/>besoins<sp/>dans<sp/>des<sp/>conditions<sp/>permettant<sp/>d&apos;assurer<sp/>la</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>sécurité<sp/>de<sp/>leurs<sp/>systèmes<sp/>et<sp/>ou<sp/>de<sp/>leurs<sp/>données<sp/>et,<sp/>plus<sp/>généralement,</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>à<sp/>l&apos;utiliser<sp/>et<sp/>l&apos;exploiter<sp/>dans<sp/>les<sp/>mêmes<sp/>conditions<sp/>de<sp/>sécurité.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Le<sp/>fait<sp/>que<sp/>vous<sp/>puissiez<sp/>accéder<sp/>à<sp/>cet<sp/>en-tête<sp/>signifie<sp/>que<sp/>vous<sp/>avez</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>pris<sp/>connaissance<sp/>de<sp/>la<sp/>licence<sp/>CeCILL,<sp/>et<sp/>que<sp/>vous<sp/>en<sp/>avez<sp/>accepté<sp/>les</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>termes.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>---------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/>(2005)</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>Contributor:<sp/>Philippe<sp/>DENIEL<sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>a<sp/>computer<sp/>program<sp/>whose<sp/>purpose<sp/>is<sp/>to<sp/>manage<sp/>logs<sp/>and</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>non-regression<sp/>tests<sp/>in<sp/>order<sp/>to<sp/>detect<sp/>problems<sp/>and<sp/>system<sp/>failures.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/><sp/>license<sp/>under<sp/>French<sp/>law<sp/>and</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution<sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by<sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>liability.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying<sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved<sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling<sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that<sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor">#include<sp/>&quot;log_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;err_fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;err_cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>using<sp/>gethostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>using<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="cache__inode__fsal__glue_8c_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPSS_SSM<sp/>&quot;hpss_ssm&quot;</highlight></codeline>
<codeline lineno="121" refid="cache__inode__fsal__glue_8c_1a1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HPSS_KEYTAB<sp/>&quot;/krb5/hpssserver.keytab&quot;</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_USE_GHOSTFS<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_hash_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>(<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;cookie<sp/>*<sp/>p_hparam-&gt;alphabet_length<sp/><sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle<sp/>)<sp/>%<sp/>p_hparam-&gt;index_size;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_HASHTABLE</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>key:<sp/>buff<sp/>=(Handle=%p,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>pfsdata-&gt;handle,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_rbt_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>polynomial<sp/>function<sp/>too,<sp/>but<sp/>reversed,<sp/>to<sp/>avoid<sp/>producing<sp/>same<sp/>value<sp/>as<sp/>decimal_simple_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;cookie<sp/><sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle<sp/><sp/>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_HASHTABLE</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>rbt:<sp/>buff<sp/>=(Handle=%p,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>pfsdata-&gt;handle,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_rbt_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>_USE_POSIX</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="187"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_hash_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>(<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;cookie<sp/>*<sp/>p_hparam-&gt;alphabet_length<sp/><sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle.id<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle.ts<sp/>)<sp/>%<sp/>p_hparam-&gt;index_size;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_HASHTABLE</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>key:<sp/>buff<sp/>=(Handle=%p,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>pfsdata-&gt;handle,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_rbt_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>polynomial<sp/>function<sp/>too,<sp/>but<sp/>reversed,<sp/>to<sp/>avoid<sp/>producing<sp/>same<sp/>value<sp/>as<sp/>decimal_simple_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;cookie<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle.id<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)pfsdata-&gt;handle.ts<sp/>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_HASHTABLE</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>rbt:<sp/>buff<sp/>=(Handle=%p,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>pfsdata-&gt;handle,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_rbt_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>_USE_HPSS_51<sp/>)<sp/>||<sp/>defined(<sp/>_USE_HPSS_62<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="238"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_hash_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[128];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>h<sp/><sp/>=<sp/>pfsdata-&gt;handle.ns_handle.Generation<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>pfsdata-&gt;handle.ns_handle.Type<sp/>*<sp/>16<sp/>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>pfsdata-&gt;handle.ns_handle.Flags<sp/>*<sp/>24<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>low32m(<sp/>pfsdata-&gt;handle.ns_handle.ObjId<sp/>)<sp/>*<sp/>32<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.ObjId<sp/>)<sp/>*<sp/>64<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.FileId<sp/>)<sp/>*<sp/>96<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.FileId<sp/>)<sp/>*<sp/>128<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>h<sp/>%=<sp/>p_hparam-&gt;index_size<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_CACHE_INODE</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>snprintmem(<sp/>buffer,<sp/>128,<sp/>(caddr_t)&amp;(pfsdata-&gt;handle),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>fsal_handle_t<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>key:<sp/>buff<sp/>=(Handle=%s,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h<sp/>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_inode_fsal_rbt_func(<sp/>hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef<sp/>)<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[128]<sp/>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)(buffclef-&gt;pdata)<sp/>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>h<sp/><sp/>=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.FileId<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.FileId<sp/>)<sp/>*<sp/>32<sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>low32m(<sp/>pfsdata-&gt;handle.ns_handle.ObjId<sp/>)<sp/>*<sp/>64<sp/>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>high32m(<sp/>pfsdata-&gt;handle.ns_handle.ObjId<sp/>)<sp/>*<sp/>96<sp/>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>pfsdata-&gt;handle.ns_handle.Flags<sp/>*<sp/>112<sp/>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>h<sp/>+=<sp/>pfsdata-&gt;handle.ns_handle.Type<sp/>*128<sp/>+<sp/>pfsdata-&gt;handle.ns_handle.Generation<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>h<sp/>%=<sp/>1000<sp/>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_CACHE_INODE</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>snprintmem(<sp/>buffer,<sp/>128,<sp/>(caddr_t)&amp;(pfsdata-&gt;handle),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>fsal_handle_t<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;hash_func<sp/>rbtval:<sp/>buff<sp/>=(Handle=%s,<sp/>Cookie=%d),<sp/>value=%d\n&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>pfsdata-&gt;cookie,<sp/>h<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cache_inode_fsal_rbt_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="cache__inode__fsal__glue_8c_1a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cache__inode__fsal__glue_8c_1a2" kindref="member">display_key</ref>(<sp/>hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str<sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>cache_inode_fsal_data_t<sp/>*<sp/>pfsdata<sp/>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[128];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>pfsdata<sp/>=<sp/>(cache_inode_fsal_data_t<sp/>*)pbuff-&gt;pdata<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>snprintmem(<sp/>buffer,<sp/>128,<sp/>(caddr_t)&amp;(pfsdata-&gt;handle),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>fsal_handle_t<sp/>));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(<sp/>str,<sp/>HASHTABLE_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;(Handle=%s,<sp/>Cookie=%d)&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>pfsdata-&gt;cookie<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="cache__inode__fsal__glue_8c_1a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cache__inode__fsal__glue_8c_1a3" kindref="member">display_not_implemented</ref>(<sp/>hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(<sp/>str,<sp/>HASHTABLE_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>Not<sp/>Implemented&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="cache__inode__fsal__glue_8c_1a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cache__inode__fsal__glue_8c_1a4" kindref="member">display_value</ref>(<sp/>hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str<sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>cache_entry_t<sp/>*<sp/>pentry<sp/>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>pentry<sp/>=<sp/>(cache_entry_t<sp/>*)pbuff-&gt;pdata<sp/>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(<sp/>str,<sp/>HASHTABLE_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;(Type=%d,<sp/>Address=%p)&quot;</highlight><highlight class="normal">,<sp/>pentry-&gt;internal_md.type,<sp/>pentry<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/glue/cache_inode_fsal_glue.c"/>
  </compounddef>
</doxygen>
