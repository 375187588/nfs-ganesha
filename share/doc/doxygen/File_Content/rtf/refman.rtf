{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\comment Begining font list}
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\comment begin colors}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\comment Beginning style list}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment File Content layer {\comment startProjectNumber }
 {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.1 \par
}{\comment endProjectNumber }
}File Content layer}
{\comment Generated byDoxgyen. }
{\creatim \yr2009\mo3\dy31\hr14\min37\sec35}
}{\comment end of infoblock}
\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
{\comment begin title page}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page{\comment End title page}
{\comment Table of contents}
\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
{\comment Beginning Body of RTF Document}
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Todo List{\tc \v Todo List}\par \pard\plain 
{\comment writeAnchor (todo)}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par \pard\plain 
{\comment begin include todo.rtf}
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\b cache_content_refresh}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: gestion de coherence de date a mettre en place \par}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
 {\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Member {\b cache_content_read_conf_client_parameter}  \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: to be removed \par}
}{\comment endTextBlock}
}
{\comment endFile}
{\comment end include todo.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
{\comment begin include files.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List{\comment endTitleHead}
\par \pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:{\comment endTextBlock}
}
{\comment (startIndexList)}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\comment (startIndexKey)}
{\b {\b cache_content_add_entry.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: adding a new entry }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_crash_recover.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_emergency_flush.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emergency flush for forcing flush of data cached files to FSAL }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_flush.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_gc.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_init.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_misc.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: miscellaneous functions }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_rdwr.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: read/write operations }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_read_conf.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: configuration file parsing }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_release_entry.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: release an entry }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b cache_content_truncate.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: truncate operation }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b test_threshold.c}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (endIndexList)}
\par}{\comment endFile}
{\comment end include files.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
{\comment begin include cache__content__add__entry_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_add_entry.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_add_entry.c}
{\xe \v cache_content_add_entry.c}
{\comment writeAnchor (cache__content__add__entry_8c)}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: adding a new entry. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <fcntl.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_entry_t * {\b cache_content_new_entry} (cache_entry_t *pentry_inode, cache_content_spec_data_t *pspecdata, cache_content_client_t *pclient, cache_content_add_behaviour_t how, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: adding a new entry. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:32 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.12 \par
}{\b cache_content_add_entry.c} : Management of the file content cache: adding a new entry. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_add_entry.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_new_entry\:cache_content_add_entry.c}
{\xe \v cache_content_add_entry.c\:cache_content_new_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_entry_t* cache_content_new_entry ({\comment (startParameterList)}
cache_entry_t * {\i pentry_inode}, {\comment (startParameterList)}
  cache_content_spec_data_t * {\i pspecdata}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_add_behaviour_t {\i how}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_new_entry: adds an entry to the file content cache.\par
Adds an entry to the file content cache. This routine should be called only from the cache_inode layer.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry_inode} [IN] entry in cache_inode layer for this file. \par
{\i pspecdata} [IN] pointer to the entry's specific data \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful . \par
}}{\comment startParagraph}
{
Definition at line 131 of file cache_content_add_entry.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__add__entry_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__crash__recover_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_crash_recover.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_crash_recover.c}
{\xe \v cache_content_crash_recover.c}
{\comment writeAnchor (cache__content__crash__recover_8c)}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <dirent.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_crash_recover} (unsigned short exportid, unsigned int index, unsigned int mod, cache_content_client_t *pclient_data, cache_inode_client_t *pclient_inode, hash_table_t *ht, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_crash_recover\:cache_content_crash_recover.c}
{\xe \v cache_content_crash_recover.c\:cache_content_crash_recover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_crash_recover ({\comment (startParameterList)}
unsigned short {\i exportid}, {\comment (startParameterList)}
  unsigned int {\i index}, {\comment (startParameterList)}
  unsigned int {\i mod}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient_data}, {\comment (startParameterList)}
  cache_inode_client_t * {\i pclient_inode}, {\comment (startParameterList)}
  hash_table_t * {\i ht}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_crash_recover: recovers the data cache and the associated inode after a crash.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful. \par
}}{\comment startParagraph}
{
Definition at line 122 of file cache_content_crash_recover.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__crash__recover_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__emergency__flush_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_emergency_flush.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_emergency_flush.c}
{\xe \v cache_content_emergency_flush.c}
{\comment writeAnchor (cache__content__emergency__flush_8c)}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emergency flush for forcing flush of data cached files to FSAL. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "nfs_core.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <dirent.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/stat.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_emergency_flush} (char *cachedir, cache_content_flush_behaviour_t flushhow, unsigned int lw_mark_trigger_flag, time_t grace_period, unsigned int index, unsigned int mod, unsigned int *p_nb_flushed, unsigned int *p_nb_too_young, unsigned int *p_nb_errors, unsigned int *p_nb_orphans, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cache_content_dir_errno}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nfs_parameter_t {\b nfs_param}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Emergency flush for forcing flush of data cached files to FSAL. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid $Author$ \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid $Date$ \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid $Revision$ {\b cache_content_emergency_flush.c} : Emergency flush for forcing flush of data cached files to FSAL. \par
}}{\comment startParagraph}
{
Definition in file {\b cache_content_emergency_flush.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_emergency_flush\:cache_content_emergency_flush.c}
{\xe \v cache_content_emergency_flush.c\:cache_content_emergency_flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_emergency_flush ({\comment (startParameterList)}
char * {\i cachedir}, {\comment (startParameterList)}
  cache_content_flush_behaviour_t {\i flushhow}, {\comment (startParameterList)}
  unsigned int {\i lw_mark_trigger_flag}, {\comment (startParameterList)}
  time_t {\i grace_period}, {\comment (startParameterList)}
  unsigned int {\i index}, {\comment (startParameterList)}
  unsigned int {\i mod}, {\comment (startParameterList)}
  unsigned int * {\i p_nb_flushed}, {\comment (startParameterList)}
  unsigned int * {\i p_nb_too_young}, {\comment (startParameterList)}
  unsigned int * {\i p_nb_errors}, {\comment (startParameterList)}
  unsigned int * {\i p_nb_orphans}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_emergency_flush: Flushes the content of a file in the local cache to the FSAL data.\par
Flushes the content of a file in the local cache to the FSAL data. This routine should be called only from the cache_inode layer.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cachedir} [IN] cachedir the filesystem where the cache resides \par
{\i flushhow} [IN] should we delete local files or not ? \par
{\i lw_mark_trig} [IN] shpuld we purge until low water mark is reached ? \par
{\i grace_period} [IN] grace_period The grace period for a file before being considered for deletion \par
{\i p_nb_flushed} [INOUT] current flushed count \par
{\i p_nb_errors} [INOUT] current flush errors \par
{\i p_nb_orphans} [INOUT] current orphan files detected \par
{\i pcontext} [INOUT] pcontext the FSAL context for this operation \par
{\i pstatys} [OUT] the status of the operation.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS if successful, an error otherwise. \par
}}{\comment startParagraph}
{
Definition at line 156 of file cache_content_emergency_flush.c.{\comment endParagraph}
}\par
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_dir_errno\:cache_content_emergency_flush.c}
{\xe \v cache_content_emergency_flush.c\:cache_content_dir_errno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int {\b cache_content_dir_errno}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 126 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v nfs_param\:cache_content_emergency_flush.c}
{\xe \v cache_content_emergency_flush.c\:nfs_param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nfs_parameter_t {\b nfs_param}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\comment endFile}
{\comment end include cache__content__emergency__flush_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__flush_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_flush.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_flush.c}
{\xe \v cache_content_flush.c}
{\comment writeAnchor (cache__content__flush_8c)}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_flush} (cache_content_entry_t *pentry, cache_content_flush_behaviour_t flushhow, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_refresh} (cache_content_entry_t *pentry, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_refresh_how_t how, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_sync_all} (cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_flush\:cache_content_flush.c}
{\xe \v cache_content_flush.c\:cache_content_flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_flush ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_flush_behaviour_t {\i flushhow}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_flush: Flushes the content of a file in the local cache to the FSAL data.\par
Flushes the content of a file in the local cache to the FSAL data. This routine should be called only from the cache_inode layer.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer whose content is to be flushed. \par
{\i flushhow} [IN] should we delete the cached entry in local or not ? \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful . \par
}}{\comment startParagraph}
{
Definition at line 128 of file cache_content_flush.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_refresh\:cache_content_flush.c}
{\xe \v cache_content_flush.c\:cache_content_refresh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_refresh ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_refresh_how_t {\i how}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_refresh: Refreshes the whole content of a file in the local cache to the FSAL data.\par
Refreshes the whole content of a file in the local cache to the FSAL data. This routine should be called only from the cache_inode layer.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer whose content is to be flushed. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful .\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: gestion de coherence de date a mettre en place \par
}
}{\comment startParagraph}
{
Definition at line 275 of file cache_content_flush.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_sync_all\:cache_content_flush.c}
{\xe \v cache_content_flush.c\:cache_content_sync_all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_sync_all ({\comment (startParameterList)}
cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 405 of file cache_content_flush.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__flush_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__gc_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_gc.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_gc.c}
{\xe \v cache_content_gc.c}
{\comment writeAnchor (cache__content__gc_8c)}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cache_content_set_gc_policy} (cache_content_gc_policy_t policy){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_gc_policy_t {\b cache_content_get_gc_policy} (void){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_gc_policy_t {\b cache_content_gc_policy}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.8 \par
}cache_content.c : Management of the file content cache: initialisation. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_gc.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_get_gc_policy\:cache_content_gc.c}
{\xe \v cache_content_gc.c\:cache_content_get_gc_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_gc_policy_t cache_content_get_gc_policy ({\comment (startParameterList)}
void){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_get_gc_policy: Set the cache_content garbagge collecting policy.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the current policy. \par
}}{\comment startParagraph}
{
Definition at line 145 of file cache_content_gc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_set_gc_policy\:cache_content_gc.c}
{\xe \v cache_content_gc.c\:cache_content_set_gc_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cache_content_set_gc_policy ({\comment (startParameterList)}
cache_content_gc_policy_t {\i policy}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_set_gc_policy: Set the cache_content garbagge collecting policy.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i policy} [IN] policy to be set.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid nothing (void function) \par
}}{\comment startParagraph}
{
Definition at line 132 of file cache_content_gc.c.{\comment endParagraph}
}\par
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_gc_policy\:cache_content_gc.c}
{\xe \v cache_content_gc.c\:cache_content_gc_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_gc_policy_t {\b cache_content_gc_policy}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 120 of file cache_content_gc.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__gc_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__init_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_init.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_init.c}
{\xe \v cache_content_init.c}
{\comment writeAnchor (cache__content__init_8c)}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_init} (cache_content_client_parameter_t param, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_init_dir} (cache_content_client_parameter_t param, unsigned short export_id){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_client_init} (cache_content_client_t *pclient, cache_content_client_parameter_t param){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: initialisation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.8 \par
}cache_content.c : Management of the file content cache: initialisation.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid leibovic \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2006/01/24 13:46:35 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.8 \par
}cache_content.c : Management of the file content cache: initialisation. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_init.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_client_init\:cache_content_init.c}
{\xe \v cache_content_init.c\:cache_content_client_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_client_init ({\comment (startParameterList)}
cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_client_parameter_t {\i param}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_client_init: Init the ressource necessary for the cache content client.\par
Init the ressource necessary for the cache content client.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i param} [IN] the parameter for this client \par
{\i pstatus} [OUT] pointer to buffer used to store the status for the operation.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 if operation failed, -1 if failed. \par
}}{\comment startParagraph}
{
Definition at line 178 of file cache_content_init.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_init\:cache_content_init.c}
{\xe \v cache_content_init.c\:cache_content_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_init ({\comment (startParameterList)}
cache_content_client_parameter_t {\i param}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_inode_init: Init the ressource necessary for the cache inode management.\par
Init the ressource necessary for the cache inode management.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i param} [IN] the parameter for this cache. \par
{\i pstatus} [OUT] pointer to buffer used to store the status for the operation.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 if operation failed, -1 if failed. \par
}}{\comment startParagraph}
{
Definition at line 124 of file cache_content_init.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_init_dir\:cache_content_init.c}
{\xe \v cache_content_init.c\:cache_content_init_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_init_dir ({\comment (startParameterList)}
cache_content_client_parameter_t {\i param}, {\comment (startParameterList)}
  unsigned short {\i export_id}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_init_dir: Init the directory for caching entries from a given export id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i param} [IN] the parameter for this cache. \par
{\i export_id} [IN] export id for the entries to be cached.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 if ok, -1 otherwise. Errno will be set with the error's value. \par
}}{\comment startParagraph}
{
Definition at line 152 of file cache_content_init.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__init_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__misc_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_misc.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_misc.c}
{\xe \v cache_content_misc.c}
{\comment writeAnchor (cache__content__misc_8c)}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: miscellaneous functions. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include "nfs_exports.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\f2 #include <libgen.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defines{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALPHABET_LEN}\~ 16{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRIME_16BITS}\~ 65521{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b HashFileID4} (u_int64_t fileid4){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_create_name} (char *path, cache_content_nametype_t type, fsal_op_context_t *pcontext, cache_entry_t *pentry_inode, cache_content_client_t *pclient){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_get_export_id} (char *dirname){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
u_int64_t {\b cache_content_get_inum} (char *filename){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_get_datapath} (char *basepath, u_int64_t inum, char *datapath){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
off_t {\b cache_content_recover_size} (char *basepath, u_int64_t inum){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
off_t {\b cache_content_get_cached_size} (cache_content_entry_t *pentry){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_inode_status_t {\b cache_content_error_convert} (cache_content_status_t status){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
off_t {\b cache_content_fsal_seek_convert} (fsal_seek_t seek, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b cache_content_fsal_size_convert} (fsal_size_t size, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_prepare_directories} (exportlist_t *pexportlist, char *cache_dir, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_valid} (cache_content_entry_t *pentry, cache_inode_op_t op, cache_content_client_t *pclient){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_check_threshold} (char *datacache_path, unsigned int threshold_min, unsigned int threshold_max, int *p_bool_overflow, unsigned long *p_blocks_to_lwm){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_local_cache_opendir} (char *cache_dir, cache_content_dirinfo_t *pdirectory){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_test_cached} (cache_entry_t *pentry_inode, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cache_content_local_cache_dir_iter} (cache_content_dirinfo_t *directory, struct dirent *pdir_entry, unsigned int index, unsigned int mod){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cache_content_local_cache_closedir} (cache_content_dirinfo_t *directory){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cache_content_dir_errno}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: miscellaneous functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid leibovic \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2006/01/18 07:29:11 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.14 \par
}{\b cache_content_misc.c} : Management of the file content cache, miscellaneous functions. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_misc.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Define Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ALPHABET_LEN\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:ALPHABET_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALPHABET_LEN\~ 16{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v PRIME_16BITS\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:PRIME_16BITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRIME_16BITS\~ 65521{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_check_threshold\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_check_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_check_threshold ({\comment (startParameterList)}
char * {\i datacache_path}, {\comment (startParameterList)}
  unsigned int {\i threshold_min}, {\comment (startParameterList)}
  unsigned int {\i threshold_max}, {\comment (startParameterList)}
  int * {\i p_bool_overflow}, {\comment (startParameterList)}
  unsigned long * {\i p_blocks_to_lwm}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_check_threshold: check datacache filesystem's threshold.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i datacache_path} [IN] the datacache filesystem's path. \par
{\i threshold_min} [IN] the low watermark for the filesystem (in percent). \par
{\i threshold_max} [IN] the high watermark for the filesystem (in percent). \par
{\i p_bool_overflow} [OUT] boolean that indicates whether the FS overcomes the high watermark. \par
{\i p_blocks_to_lwm} [OUT] if bool_overflow is set to true, this indicates the number of blocks to be purged in order to reach the low watermark.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS if successful \par \par
CACHE_CONTENT_INVALID_ARGUMENT if some argument has an unexpected value\par \par
CACHE_CONTENT_LOCAL_CACHE_ERROR if an error occured while getting informations from datacache filesystem. \par
}}{\comment startParagraph}
{
Definition at line 633 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_create_name\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_create_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_create_name ({\comment (startParameterList)}
char * {\i path}, {\comment (startParameterList)}
  cache_content_nametype_t {\i type}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_entry_t * {\i pentry_inode}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_create_name: Creates a name in the local fs for a cached entry.\par
Creates a name in the local fs for a cached entry and creates the directories that whil contain this file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i path} [OUT] buffer to be used for storing the name. \par
{\i type} [IN] type of pathname to be created. \par
{\i pentry_inode} [OUT] Entry in Cache inode layer related to the file content entry. \par
{\i pclient} [IN] resources allocated for the file content client.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS if operation is a success, other values show an error. \par
}}{\comment startParagraph}
{
Definition at line 165 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_error_convert\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_error_convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_inode_status_t cache_content_error_convert ({\comment (startParameterList)}
cache_content_status_t {\i status}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_error_convert: Converts a cache_content_status to a cache_inode_status.\par
Converts a cache_content_status to a cache_inode_status.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i status} [IN] File content status to be converted.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a cache_inode_status_t resulting from the conversion. \par
}}{\comment startParagraph}
{
Definition at line 414 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_fsal_seek_convert\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_fsal_seek_convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
off_t cache_content_fsal_seek_convert ({\comment (startParameterList)}
fsal_seek_t {\i seek}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_fsal_seek_convert: converts a fsal_seek_t to unix offet.\par
Converts a fsal_seek_t to unix offet. Non absolulte fsal_seek_t will produce an error.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i seek} [IN] FSAL Seek descriptor. \par
{\i pstatus} [OUT] pointer to the status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the converted value. \par
}}{\comment startParagraph}
{
Definition at line 473 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_fsal_size_convert\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_fsal_size_convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t cache_content_fsal_size_convert ({\comment (startParameterList)}
fsal_size_t {\i size}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_fsal_size_convert: converts a fsal_size_t to unix size.\par
Converts a fsal_seek_t to unix size.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i seek} [IN] FSAL Seek descriptor. \par
{\i pstatus} [OUT] pointer to the status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the converted value. \par
}}{\comment startParagraph}
{
Definition at line 500 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_get_cached_size\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_get_cached_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
off_t cache_content_get_cached_size ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_get_cached_size: recovers the size of a data cached file.\par
Recovers the size of a data cached file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] related pentry\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the recovered size (as a off_t) or -1 is failed. \par
}}{\comment startParagraph}
{
Definition at line 386 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_get_datapath\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_get_datapath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_get_datapath ({\comment (startParameterList)}
char * {\i basepath}, {\comment (startParameterList)}
  u_int64_t {\i inum}, {\comment (startParameterList)}
  char * {\i datapath}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_get_datapath : recovers the path for a file of a specified inum.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i basepath} [IN] path to the root of the directory in the cache for the related export entry \par
{\i inum} [IN] inode number for the file whose size is to be recovered. \par
{\i path} [OUT] the absolute path of the file (must be at least a MAXPATHLEN length string).\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 if OK, or -1 is failed. \par
}}{\comment startParagraph}
{
Definition at line 319 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_get_export_id\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_get_export_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_get_export_id ({\comment (startParameterList)}
char * {\i dirname}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_get_export_id: gets an export id from an export dirname.\par
Gets an export id from an export dirname.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i dirname} [IN] The dirname for the export_id dirname.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid -1 if failed, the export_id if successfull. \par
}}{\comment startParagraph}
{
Definition at line 257 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_get_inum\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_get_inum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
u_int64_t cache_content_get_inum ({\comment (startParameterList)}
char * {\i filename}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_get_inum: gets an inode number fronm a cache filename.\par
Gets an inode number fronm a cache filename.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i filename} [IN] The filename to be parsed.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 if failed, the inum if successfull. \par
}}{\comment startParagraph}
{
Definition at line 282 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_local_cache_closedir\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_local_cache_closedir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cache_content_local_cache_closedir ({\comment (startParameterList)}
cache_content_dirinfo_t * {\i directory}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_local_cache_closedir: Close a local cache directory associated to an export entry.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i directory[IN]} the handle to the directory to be closed\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid nothing (void function) \par
}}{\comment startParagraph}
{
Definition at line 1020 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_local_cache_dir_iter\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_local_cache_dir_iter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_local_cache_dir_iter ({\comment (startParameterList)}
cache_content_dirinfo_t * {\i directory}, {\comment (startParameterList)}
  struct dirent * {\i pdir_entry}, {\comment (startParameterList)}
  unsigned int {\i index}, {\comment (startParameterList)}
  unsigned int {\i mod}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_local_cache_dir_iter: iterate on a local cache directory to get the entry one by one\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i directory} [IN] the directory to be read \par
{\i index} [IN] thread index for multithreaded flushes (first has index 0) \par
{\i mod} [IN] modulus for multithreaded flushes (number of threads) \par
{\i pdir_entry} [OUT] found dir_entry\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if OK, FALSE if NOK. \par
}}{\comment startParagraph}
{
Definition at line 813 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_local_cache_opendir\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_local_cache_opendir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cache_content_local_cache_opendir ({\comment (startParameterList)}
char * {\i cache_dir}, {\comment (startParameterList)}
  cache_content_dirinfo_t * {\i pdirectory}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_local_cache_opendir: Open a local cache directory associated to an export entry.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cache_dir} [IN] the path to the directory associated with the export entry \par
{\i pdirectory} [OUT] pointer to trhe openend directory\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the handle to the directory or NULL is failed \par
}}{\comment startParagraph}
{
Definition at line 716 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_prepare_directories\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_prepare_directories}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_prepare_directories ({\comment (startParameterList)}
exportlist_t * {\i pexportlist}, {\comment (startParameterList)}
  char * {\i cache_dir}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_prepare_directories: do the mkdir to set the data cache directories\par
do the mkdir to set the data cache directories.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pexportlist} [IN] export list \par
{\i pstatus} [OUT] pointer to the status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the status for the operation \par
}}{\comment startParagraph}
{
Definition at line 522 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_recover_size\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_recover_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
off_t cache_content_recover_size ({\comment (startParameterList)}
char * {\i basepath}, {\comment (startParameterList)}
  u_int64_t {\i inum}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_recover_size: recovers the size of a data cached file.\par
Recovers the size of a data cached file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i basepath} [IN] path to the root of the directory in the cache for the related export entry \par
{\i inum} [IN] inode number for the file whose size is to be recovered.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the recovered size (as a off_t) or -1 is failed. \par
}}{\comment startParagraph}
{
Definition at line 352 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_test_cached\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_test_cached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_test_cached ({\comment (startParameterList)}
cache_entry_t * {\i pentry_inode}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_test_cached: Tests if a given pentry_inode has already an associated data cache\par
Tests if a given pentry_inode has already an associated data cache. This is useful to recover data from a data cache built by a former server instance.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry_inode} [IN] entry in cache_inode layer for this file. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management. \par
{\i pcontext} [IN] the related FSAL Context  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS if entry is found, CACHE_CONTENT_NOT_FOUND if not found \par
}}{\comment startParagraph}
{
Definition at line 760 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_valid\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_valid ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_inode_op_t {\i op}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_valid: validates an entry to update its garbagge status.\par
Validates an error to update its garbagge status. Entry is supposed to be locked when this function is called !!\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [INOUT] entry to be validated. \par
{\i op} [IN] can be set to CACHE_INODE_OP_GET or CACHE_INODE_OP_SET to show the type of operation done. \par
{\i pclient} [INOUT] ressource allocated by the client for the nfs management.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_INODE_SUCCESS if successful \par \par
CACHE_INODE_LRU_ERROR if an errorr occured in LRU management. \par
}}{\comment startParagraph}
{
Definition at line 574 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v HashFileID4\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:HashFileID4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short HashFileID4 ({\comment (startParameterList)}
u_int64_t {\i fileid4}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 133 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_dir_errno\:cache_content_misc.c}
{\xe \v cache_content_misc.c\:cache_content_dir_errno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int {\b cache_content_dir_errno}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 126 of file cache_content_misc.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__misc_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__rdwr_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_rdwr.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_rdwr.c}
{\xe \v cache_content_rdwr.c}
{\comment writeAnchor (cache__content__rdwr_8c)}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: read/write operations. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/stat.h>}{\comment (lineBreak)}
\par
{\f2 #include <fcntl.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_open} (cache_content_entry_t *pentry, cache_content_client_t *pclient, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_close} (cache_content_entry_t *pentry, cache_content_client_t *pclient, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_rdwr} (cache_content_entry_t *pentry, cache_content_io_direction_t read_or_write, fsal_seek_t *seek_descriptor, fsal_size_t *pio_size_in, fsal_size_t *pio_size_out, caddr_t buffer, fsal_boolean_t *p_fsal_eof, struct stat *pbuffstat, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: read/write operations. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.12 \par
}cache_content_rdwr.c.c : Management of the file content cache, read and write operations. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_rdwr.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_close\:cache_content_rdwr.c}
{\xe \v cache_content_rdwr.c\:cache_content_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_close ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_close: closes the local fd on the cache.\par
Closes the local fd on the cache.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer whose content is to be accessed. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful . \par
}}{\comment startParagraph}
{
Definition at line 203 of file cache_content_rdwr.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_open\:cache_content_rdwr.c}
{\xe \v cache_content_rdwr.c\:cache_content_open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_open ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_open: opens the local fd on the cache.\par
Opens the local fd on the cache.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer whose content is to be accessed. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful . \par
}}{\comment startParagraph}
{
Definition at line 132 of file cache_content_rdwr.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_rdwr\:cache_content_rdwr.c}
{\xe \v cache_content_rdwr.c\:cache_content_rdwr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_rdwr ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_io_direction_t {\i read_or_write}, {\comment (startParameterList)}
  fsal_seek_t * {\i seek_descriptor}, {\comment (startParameterList)}
  fsal_size_t * {\i pio_size_in}, {\comment (startParameterList)}
  fsal_size_t * {\i pio_size_out}, {\comment (startParameterList)}
  caddr_t {\i buffer}, {\comment (startParameterList)}
  fsal_boolean_t * {\i p_fsal_eof}, {\comment (startParameterList)}
  struct stat * {\i pbuffstat}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  fsal_op_context_t * {\i pcontext}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_rdwr: Reads/Writes through the cache layer.\par
Reads/Writes through the cache layer. This routine should be called only from the cache_inode layer.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer whose content is to be accessed. \par
{\i read_or_write} [IN] a flag of type cache_content_io_direction_t to tell if a read or write is to be done. \par
{\i seek_descriptor} [IN] absolute position (in the FSAL file) where the IO will be done. \par
{\i pio_size_in} [IN] requested io size \par
{\i pio_size_out} [OUT] the size of the io that was successfully made. \par
{\i pbuffstat} [OUT] the 'stat' of entry in the data cache after the operation \par
{\i buffer} write:[IN] read:[OUT] the buffer for the data. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management. \par
{\i pcontext} [IN] fsal credentials for the operation.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful . \par
}}{\comment startParagraph}
{
Definition at line 256 of file cache_content_rdwr.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__rdwr_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__read__conf_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_read_conf.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c}
{\comment writeAnchor (cache__content__read__conf_8c)}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: configuration file parsing. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include "config_parsing.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_read_conf_client_parameter} (config_file_t in_config, cache_content_client_parameter_t *pparam){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cache_content_print_conf_client_parameter} (FILE *output, cache_content_client_parameter_t param){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_read_conf_gc_policy} (config_file_t in_config, cache_content_gc_policy_t *ppolicy){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cache_content_print_conf_gc_policy} (FILE *output, cache_content_gc_policy_t gcpolicy){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b fcc_log_path} [MAXPATHLEN]{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fcc_debug_level}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: configuration file parsing. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.10 \par
}{\b cache_content_read_conf.c} : Management of the file content cache: configuration file parsing. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_read_conf.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_print_conf_client_parameter\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:cache_content_print_conf_client_parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cache_content_print_conf_client_parameter ({\comment (startParameterList)}
FILE * {\i output}, {\comment (startParameterList)}
  cache_content_client_parameter_t {\i param}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_print_conf_client_parameter: prints the client parameter.\par
Prints the client parameters.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i output} [IN] a descriptor to the IO for printing the data. \par
{\i param} [IN] structure to be printed.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid nothing (void function). \par
}}{\comment startParagraph}
{
Definition at line 274 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_print_conf_gc_policy\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:cache_content_print_conf_gc_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cache_content_print_conf_gc_policy ({\comment (startParameterList)}
FILE * {\i output}, {\comment (startParameterList)}
  cache_content_gc_policy_t {\i gcpolicy}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_print_gc_pol: prints the garbagge collection policy.\par
Prints the garbagge collection policy.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i output} [IN] a descriptor to the IO for printing the data. \par
{\i param} [IN] structure to be printed.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid nothing (void function). \par
}}{\comment startParagraph}
{
Definition at line 394 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_read_conf_client_parameter\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:cache_content_read_conf_client_parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_read_conf_client_parameter ({\comment (startParameterList)}
config_file_t {\i in_config}, {\comment (startParameterList)}
  cache_content_client_parameter_t * {\i pparam}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: to be removed \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: to be removed \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Todo:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : BUGAZOMEU: to be removed \par
}
}{\comment startParagraph}
{
Definition at line 128 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_read_conf_gc_policy\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:cache_content_read_conf_gc_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_read_conf_gc_policy ({\comment (startParameterList)}
config_file_t {\i in_config}, {\comment (startParameterList)}
  cache_content_gc_policy_t * {\i ppolicy}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_read_conf_gc_policy: read the garbagge collection policy in configuration file.\par
Reads the garbagge collection policy in configuration file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i in_config} [IN] configuration file handle \par
{\i pparam} [OUT] read parameters\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS if ok, CACHE_CONTENT_NOT_FOUND is stanza is not there, CACHE_CONTENT_INVALID_ARGUMENT otherwise. \par
}}{\comment startParagraph}
{
Definition at line 296 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v fcc_debug_level\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:fcc_debug_level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b fcc_debug_level}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 114 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v fcc_log_path\:cache_content_read_conf.c}
{\xe \v cache_content_read_conf.c\:fcc_log_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char {\b fcc_log_path}[MAXPATHLEN]{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 113 of file cache_content_read_conf.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__read__conf_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__release__entry_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_release_entry.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_release_entry.c}
{\xe \v cache_content_release_entry.c}
{\comment writeAnchor (cache__content__release__entry_8c)}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: release an entry. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <errno.h>}{\comment (lineBreak)}
\par
{\f2 #include <fcntl.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_release_entry} (cache_content_entry_t *pentry, cache_content_client_t *pclient, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: release an entry. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.7 \par
}{\b cache_content_release_entry.c} : Management of the file content cache: release an entry. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_release_entry.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_release_entry\:cache_content_release_entry.c}
{\xe \v cache_content_release_entry.c\:cache_content_release_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_release_entry ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cache_content_release_entry: removes an entry from the cache and free the associated resources.\par
Removes an entry from the cache and free the associated resources.\par
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i pentry} [IN] entry in file content layer for this file. \par
{\i pclient} [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid CACHE_CONTENT_SUCCESS is successful, other values show an error. \par
}}{\comment startParagraph}
{
Definition at line 131 of file cache_content_release_entry.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__release__entry_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include cache__content__truncate_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cache_content_truncate.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v cache_content_truncate.c}
{\xe \v cache_content_truncate.c}
{\comment writeAnchor (cache__content__truncate_8c)}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: truncate operation. \par
}{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
cache_content_status_t {\b cache_content_truncate} (cache_content_entry_t *pentry, fsal_size_t length, cache_content_client_t *pclient, cache_content_status_t *pstatus){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Management of the file content cache: truncate operation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid deniel \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2005/11/28 17:02:33 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Revision\par
}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.5 \par
}{\b cache_content_truncate.c} : Management of the file content cache, truncate operation. \par
}{\comment startParagraph}
{
Definition in file {\b cache_content_truncate.c}.{\comment endParagraph}
}\par
{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cache_content_truncate\:cache_content_truncate.c}
{\xe \v cache_content_truncate.c\:cache_content_truncate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cache_content_status_t cache_content_truncate ({\comment (startParameterList)}
cache_content_entry_t * {\i pentry}, {\comment (startParameterList)}
  fsal_size_t {\i length}, {\comment (startParameterList)}
  cache_content_client_t * {\i pclient}, {\comment (startParameterList)}
  cache_content_status_t * {\i pstatus}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 111 of file cache_content_truncate.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include cache__content__truncate_8c.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include test__threshold_8c.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_threshold.c File Reference{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v test_threshold.c}
{\xe \v test_threshold.c}
{\comment writeAnchor (test__threshold_8c)}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "nfs_exports.h"}{\comment (lineBreak)}
\par
{\f2 #include "fsal.h"}{\comment (lineBreak)}
\par
{\f2 #include "LRU_List.h"}{\comment (lineBreak)}
\par
{\f2 #include "log_functions.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashData.h"}{\comment (lineBreak)}
\par
{\f2 #include "HashTable.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_inode.h"}{\comment (lineBreak)}
\par
{\f2 #include "cache_content.h"}{\comment (lineBreak)}
\par
{\f2 #include "stuff_alloc.h"}{\comment (lineBreak)}
\par
{\f2 #include <unistd.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/types.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/param.h>}{\comment (lineBreak)}
\par
{\f2 #include <time.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\f2 #include <string.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/vfs.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v main\:test_threshold.c}
{\xe \v test_threshold.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ({\comment (startParameterList)}
int {\i argc}, {\comment (startParameterList)}
  char ** {\i argv}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\comment startParagraph}
{\comment (newParagraph)}
\par
{
Definition at line 23 of file test_threshold.c.{\comment endParagraph}
}\par
}
{\comment endFile}
{\comment end include test__threshold_8c.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
{\comment endFile}
}