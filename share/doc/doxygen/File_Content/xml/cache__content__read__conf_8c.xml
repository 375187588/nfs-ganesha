<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="cache__content__read__conf_8c" kind="file">
    <compoundname>cache_content_read_conf.c</compoundname>
    <includes local="yes">LRU_List.h</includes>
    <includes local="yes">log_macros.h</includes>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="yes">fsal.h</includes>
    <includes local="yes">cache_inode.h</includes>
    <includes local="yes">cache_content.h</includes>
    <includes local="yes">config_parsing.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/param.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="145">
        <label>config_parsing.h</label>
      </node>
      <node id="138">
        <label>LRU_List.h</label>
      </node>
      <node id="139">
        <label>log_macros.h</label>
      </node>
      <node id="142">
        <label>fsal.h</label>
      </node>
      <node id="144">
        <label>cache_content.h</label>
      </node>
      <node id="150">
        <label>pthread.h</label>
      </node>
      <node id="147">
        <label>sys/types.h</label>
      </node>
      <node id="151">
        <label>string.h</label>
      </node>
      <node id="141">
        <label>HashTable.h</label>
      </node>
      <node id="146">
        <label>unistd.h</label>
      </node>
      <node id="148">
        <label>sys/param.h</label>
      </node>
      <node id="149">
        <label>time.h</label>
      </node>
      <node id="143">
        <label>cache_inode.h</label>
      </node>
      <node id="140">
        <label>HashData.h</label>
      </node>
      <node id="137">
        <label>cache_content_read_conf.c</label>
        <link refid="cache_content_read_conf.c"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cache__content__read__conf_8c_1a5c4b46b82bcf816e7f50d3b86602f222" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char fcc_log_path[MAXPATHLEN]</definition>
        <argsstring>[MAXPATHLEN]</argsstring>
        <name>fcc_log_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="62" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cache__content__read__conf_8c_1a281c1090c0bcbf36e7d4ff973a93917f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcc_debug_level</definition>
        <argsstring></argsstring>
        <name>fcc_debug_level</name>
        <initializer> -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="63" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cache__content__read__conf_8c_1a2226bd53ea30e06090eb9234c601dd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cache_content_status_t</type>
        <definition>cache_content_status_t cache_content_read_conf_client_parameter</definition>
        <argsstring>(config_file_t in_config, cache_content_client_parameter_t *pparam)</argsstring>
        <name>cache_content_read_conf_client_parameter</name>
        <param>
          <type>config_file_t</type>
          <declname>in_config</declname>
        </param>
        <param>
          <type>cache_content_client_parameter_t *</type>
          <declname>pparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>: BUGAZOMEU: to be removed </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>: BUGAZOMEU: to be removed </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>: BUGAZOMEU: to be removed </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="80" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="77" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="cache__content__read__conf_8c_1a9d664eea69ecaf3ec750d43b259d15d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cache_content_print_conf_client_parameter</definition>
        <argsstring>(FILE *output, cache_content_client_parameter_t param)</argsstring>
        <name>cache_content_print_conf_client_parameter</name>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>cache_content_client_parameter_t</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_content_print_conf_client_parameter: prints the client parameter.</para><para>Prints the client parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] a descriptor to the IO for printing the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] structure to be printed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="217" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="215" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="cache__content__read__conf_8c_1a122112b7772de90e950b3588350531b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cache_content_status_t</type>
        <definition>cache_content_status_t cache_content_read_conf_gc_policy</definition>
        <argsstring>(config_file_t in_config, cache_content_gc_policy_t *ppolicy)</argsstring>
        <name>cache_content_read_conf_gc_policy</name>
        <param>
          <type>config_file_t</type>
          <declname>in_config</declname>
        </param>
        <param>
          <type>cache_content_gc_policy_t *</type>
          <declname>ppolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_content_read_conf_gc_policy: read the garbage collection policy in configuration file.</para><para>Reads the garbage collection policy in configuration file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_config</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] configuration file handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] read parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CACHE_CONTENT_SUCCESS if ok, CACHE_CONTENT_NOT_FOUND is stanza is not there, CACHE_CONTENT_INVALID_ARGUMENT otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="241" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="238" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="cache__content__read__conf_8c_1ac94ba9e3701d3c25a616fd39278006e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cache_content_print_conf_gc_policy</definition>
        <argsstring>(FILE *output, cache_content_gc_policy_t gcpolicy)</argsstring>
        <name>cache_content_print_conf_gc_policy</name>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>cache_content_gc_policy_t</type>
          <declname>gcpolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache_content_print_gc_pol: prints the garbage collection policy.</para><para>Prints the garbage collection policy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] a descriptor to the IO for printing the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] structure to be printed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c" line="335" bodyfile="/export/GANESHA/src/File_Content/cache_content_read_conf.c" bodystart="334" bodyend="345"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Management of the file content cache: configuration file parsing. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>deniel </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2005/11/28 17:02:33 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.10 </para></simplesect>
<ref refid="cache__content__read__conf_8c" kindref="compound">cache_content_read_conf.c</ref> : Management of the file content cache: configuration file parsing. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_SOLARIS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LRU_List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_content.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_parsing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="cache__content__read__conf_8c_1a5c4b46b82bcf816e7f50d3b86602f222" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="cache__content__read__conf_8c_1a5c4b46b82bcf816e7f50d3b86602f222" kindref="member">fcc_log_path</ref>[MAXPATHLEN];</highlight></codeline>
<codeline lineno="63" refid="cache__content__read__conf_8c_1a281c1090c0bcbf36e7d4ff973a93917f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cache__content__read__conf_8c_1a281c1090c0bcbf36e7d4ff973a93917f" kindref="member">fcc_debug_level</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>cache_content_read_conf_client_parameter:<sp/>read<sp/>the<sp/>configuration<sp/>for<sp/>a<sp/>client<sp/>to<sp/>File<sp/>Content<sp/>layer.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Reads<sp/>the<sp/>configuration<sp/>for<sp/>a<sp/>client<sp/>to<sp/>File<sp/>Content<sp/>layer<sp/>(typically<sp/>a<sp/>worker<sp/>thread).</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>@param<sp/>in_config<sp/>[IN]<sp/>configuration<sp/>file<sp/>handle</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@param<sp/>pparam<sp/>[OUT]<sp/>read<sp/>parameters</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@return<sp/>CACHE_CONTENT_SUCCESS<sp/>if<sp/>ok,<sp/>CACHE_CONTENT_INVALID_ARGUMENT<sp/>otherwise.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="cache__content__read__conf_8c_1a2226bd53ea30e06090eb9234c601dd7c" refkind="member"><highlight class="normal">cache_content_status_t<sp/><ref refid="cache__content__read__conf_8c_1a2226bd53ea30e06090eb9234c601dd7c" kindref="member">cache_content_read_conf_client_parameter</ref>(config_file_t<sp/>in_config,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_content_client_parameter_t</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pparam)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_max;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_index;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_name;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_value;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>config_item_t<sp/>block;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DebugLevel<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*LogFile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>config<sp/>tree<sp/>initialized<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in_config<sp/>==<sp/>NULL<sp/>||<sp/>pparam<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>config<sp/>BLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((block<sp/>=<sp/>config_FindItemByName(in_config,<sp/>CONF_LABEL_CACHE_CONTENT_CLIENT))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fprintf(stderr,<sp/>&quot;Cannot<sp/>read<sp/>item<sp/>\&quot;%s\&quot;<sp/>from<sp/>configuration<sp/>file\n&quot;,<sp/>CONF_LABEL_CACHE_CONTENT_CLIENT<sp/>)<sp/>;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_NOT_FOUND;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(config_ItemType(block)<sp/>!=<sp/>CONFIG_ITEM_BLOCK)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>to<sp/>be<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>var_max<sp/>=<sp/>config_GetNbItems(block);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var_index<sp/>=<sp/>0;<sp/>var_index<sp/>&lt;<sp/>var_max;<sp/>var_index++)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_item_t<sp/>item;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>config_GetItemByIndex(block,<sp/>var_index);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>key&apos;s<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((err<sp/>=<sp/>config_GetKeyValue(item,<sp/>&amp;key_name,<sp/>&amp;key_value))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>key[%d]<sp/>from<sp/>section<sp/>\&quot;%s\&quot;<sp/>of<sp/>configuration<sp/>file.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_index,<sp/>CONF_LABEL_CACHE_CONTENT_CLIENT);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;LRU_Prealloc_PoolSize&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pparam-&gt;lru_param.nb_entry_prealloc<sp/>=<sp/>atoi(<sp/>key_value<sp/>)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;LRU_Nb_Call_Gc_invalid&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pparam-&gt;lru_param.nb_call_gc_invalid<sp/>=<sp/>atoi(<sp/>key_value<sp/>)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Entry_Prealloc_PoolSize&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pparam-&gt;nb_prealloc_entry<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Cache_Directory&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pparam-&gt;cache_dir,<sp/>key_value);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Refresh_FSAL_Force&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pparam-&gt;flush_force_fsal<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;DebugLevel&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugLevel<sp/>=<sp/>ReturnLevelAscii(key_value);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DebugLevel<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_CACHE_CONTENT,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cache_content_read_conf:<sp/>ERROR:<sp/>Invalid<sp/>debug<sp/>level<sp/>name:<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_value);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;LogFile&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFile<sp/>=<sp/>key_value;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Max_Fd&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pparam-&gt;max_fd_per_thread<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;OpenFile_Retention&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pparam-&gt;retention<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Use_OpenClose_cache&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pparam-&gt;use_cache<sp/>=<sp/>StrToBoolean(key_value);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>or<sp/>unsettable<sp/>key:<sp/>%s<sp/>(item<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_name,<sp/>CONF_LABEL_CACHE_CONTENT_CLIENT);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="cache__content__read__conf_8c_1a281c1090c0bcbf36e7d4ff973a93917f" kindref="member">fcc_debug_level</ref><sp/>=<sp/>DebugLevel;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LogFile)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>LogEvent(COMPONENT_INIT,<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>log<sp/>file<sp/>of<sp/>emergency<sp/>cache<sp/>flush<sp/>thread<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFile);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="cache__content__read__conf_8c_1a5c4b46b82bcf816e7f50d3b86602f222" kindref="member">fcc_log_path</ref>,<sp/>LogFile,<sp/>MAXPATHLEN);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>LogDebug(COMPONENT_INIT,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>log<sp/>file<sp/>set<sp/>for<sp/>emergency<sp/>cache<sp/>flush<sp/>thread<sp/>in<sp/>configuration.<sp/>Setting<sp/>to<sp/>default.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFile);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="cache__content__read__conf_8c_1a5c4b46b82bcf816e7f50d3b86602f222" kindref="member">fcc_log_path</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/dev/null&quot;</highlight><highlight class="normal">,<sp/>MAXPATHLEN);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>logging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LogFile)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>SetComponentLogFile(COMPONENT_CACHE_CONTENT,<sp/>LogFile);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DebugLevel<sp/>&gt;<sp/>-1)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>SetComponentLogLevel(COMPONENT_CACHE_CONTENT,<sp/>DebugLevel);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_SUCCESS;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache_content_read_conf_client_parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="cache__content__read__conf_8c_1a9d664eea69ecaf3ec750d43b259d15d4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cache__content__read__conf_8c_1a9d664eea69ecaf3ec750d43b259d15d4" kindref="member">cache_content_print_conf_client_parameter</ref>(FILE<sp/>*<sp/>output,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_content_client_parameter_t<sp/>param)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>@todo<sp/>BUGAZOMEU<sp/>virer<sp/>ces<sp/>deux<sp/>lignes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fprintf(<sp/>output,<sp/>&quot;FileContent<sp/>Client:<sp/>LRU_Prealloc_PoolSize<sp/><sp/><sp/>=<sp/>%d\n&quot;,<sp/>param.lru_param.nb_entry_prealloc<sp/>)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fprintf(<sp/>output,<sp/>&quot;FileContent<sp/>Client:<sp/>LRU_Nb_Call_Gc_invalid<sp/><sp/>=<sp/>%d\n&quot;,<sp/>param.lru_param.nb_call_gc_invalid<sp/>)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;FileContent<sp/>Client:<sp/>Entry_Prealloc_PoolSize<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.nb_prealloc_entry);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;FileContent<sp/>Client:<sp/>Cache<sp/>Directory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>param.cache_dir);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache_content_print_conf_client_parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="cache__content__read__conf_8c_1a122112b7772de90e950b3588350531b2" refkind="member"><highlight class="normal">cache_content_status_t<sp/><ref refid="cache__content__read__conf_8c_1a122112b7772de90e950b3588350531b2" kindref="member">cache_content_read_conf_gc_policy</ref>(config_file_t<sp/>in_config,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_content_gc_policy_t<sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_max;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_index;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_name;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_value;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>config_item_t<sp/>block;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>config<sp/>tree<sp/>initialized<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in_config<sp/>==<sp/>NULL<sp/>||<sp/>ppolicy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>config<sp/>BLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((block<sp/>=<sp/>config_FindItemByName(in_config,<sp/>CONF_LABEL_CACHE_CONTENT_GCPOL))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fprintf(stderr,<sp/>&quot;Cannot<sp/>read<sp/>item<sp/>\&quot;%s\&quot;<sp/>from<sp/>configuration<sp/>file\n&quot;,<sp/>CONF_LABEL_CACHE_CONTENT_GCPOL<sp/>)<sp/>;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_NOT_FOUND;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(config_ItemType(block)<sp/>!=<sp/>CONFIG_ITEM_BLOCK)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>to<sp/>be<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>var_max<sp/>=<sp/>config_GetNbItems(block);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var_index<sp/>=<sp/>0;<sp/>var_index<sp/>&lt;<sp/>var_max;<sp/>var_index++)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_item_t<sp/>item;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>config_GetItemByIndex(block,<sp/>var_index);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>key&apos;s<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((err<sp/>=<sp/>config_GetKeyValue(item,<sp/>&amp;key_name,<sp/>&amp;key_value))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>key[%d]<sp/>from<sp/>section<sp/>\&quot;%s\&quot;<sp/>of<sp/>configuration<sp/>file.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_index,<sp/>CONF_LABEL_CACHE_CONTENT_GCPOL);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Lifetime&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;lifetime<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Inactivity_Before_Flush&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;inactivity_before_flush<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Runtime_Interval&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;run_interval<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Nb_Call_Before_GC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;nb_call_before_gc<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Df_HighWater&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;hwmark_df<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Df_LowWater&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;lwmark_df<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcasecmp(key_name,<sp/></highlight><highlight class="stringliteral">&quot;Emergency_Grace_Delay&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppolicy-&gt;emergency_grace_delay<sp/>=<sp/>atoi(key_value);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>or<sp/>unsettable<sp/>key:<sp/>%s<sp/>(item<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_name,<sp/>CONF_LABEL_CACHE_CONTENT_GCPOL);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CACHE_CONTENT_SUCCESS;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache_content_read_conf_gc_policy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="cache__content__read__conf_8c_1ac94ba9e3701d3c25a616fd39278006e0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cache__content__read__conf_8c_1ac94ba9e3701d3c25a616fd39278006e0" kindref="member">cache_content_print_conf_gc_policy</ref>(FILE<sp/>*<sp/>output,<sp/>cache_content_gc_policy_t<sp/>gcpolicy)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Lifetime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)gcpolicy.lifetime);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Df_HighWater<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%u%%\n&quot;</highlight><highlight class="normal">,<sp/>gcpolicy.hwmark_df);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Df_LowWater<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%u%%\n&quot;</highlight><highlight class="normal">,<sp/>gcpolicy.lwmark_df);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Emergency<sp/>Grace<sp/>Delay<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)gcpolicy.emergency_grace_delay);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Nb_Call_Before_GC<sp/><sp/><sp/><sp/><sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gcpolicy.nb_call_before_gc);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>fprintf(output,<sp/></highlight><highlight class="stringliteral">&quot;Garbage<sp/>Policy:<sp/>Runtime_Interval<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>gcpolicy.run_interval);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache_content_print_gc_pol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/File_Content/cache_content_read_conf.c"/>
  </compounddef>
</doxygen>
