.TH "cache_content_flush.c" 3 "31 Mar 2009" "Version 0.1" "File Content layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cache_content_flush.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/param.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <string.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "cache_content_status_t \fBcache_content_flush\fP (cache_content_entry_t *pentry, cache_content_flush_behaviour_t flushhow, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus)"
.br
.ti -1c
.RI "cache_content_status_t \fBcache_content_refresh\fP (cache_content_entry_t *pentry, cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_refresh_how_t how, cache_content_status_t *pstatus)"
.br
.ti -1c
.RI "cache_content_status_t \fBcache_content_sync_all\fP (cache_content_client_t *pclient, fsal_op_context_t *pcontext, cache_content_status_t *pstatus)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "cache_content_status_t cache_content_flush (cache_content_entry_t * pentry, cache_content_flush_behaviour_t flushhow, cache_content_client_t * pclient, fsal_op_context_t * pcontext, cache_content_status_t * pstatus)"
.PP
cache_content_flush: Flushes the content of a file in the local cache to the FSAL data.
.PP
Flushes the content of a file in the local cache to the FSAL data. This routine should be called only from the cache_inode layer.
.PP
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry in file content layer whose content is to be flushed. 
.br
\fIflushhow\fP [IN] should we delete the cached entry in local or not ? 
.br
\fIpclient\fP [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_CONTENT_SUCCESS is successful . 
.RE
.PP

.PP
Definition at line 128 of file cache_content_flush.c.
.SS "cache_content_status_t cache_content_refresh (cache_content_entry_t * pentry, cache_content_client_t * pclient, fsal_op_context_t * pcontext, cache_content_refresh_how_t how, cache_content_status_t * pstatus)"
.PP
cache_content_refresh: Refreshes the whole content of a file in the local cache to the FSAL data.
.PP
Refreshes the whole content of a file in the local cache to the FSAL data. This routine should be called only from the cache_inode layer.
.PP
No lock management is done in this layer: the related pentry in the cache inode layer is locked and will prevent from concurent accesses.
.PP
\fBParameters:\fP
.RS 4
\fIpentry\fP [IN] entry in file content layer whose content is to be flushed. 
.br
\fIpclient\fP [IN] ressource allocated by the client for the nfs management.  [OUT] returned status.
.RE
.PP
\fBReturns:\fP
.RS 4
CACHE_CONTENT_SUCCESS is successful .
.RE
.PP
\fBTodo\fP
.RS 4
: BUGAZOMEU: gestion de coherence de date a mettre en place 
.RE
.PP

.PP
Definition at line 275 of file cache_content_flush.c.
.SS "cache_content_status_t cache_content_sync_all (cache_content_client_t * pclient, fsal_op_context_t * pcontext, cache_content_status_t * pstatus)"
.PP
Definition at line 405 of file cache_content_flush.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for File Content layer from the source code.
