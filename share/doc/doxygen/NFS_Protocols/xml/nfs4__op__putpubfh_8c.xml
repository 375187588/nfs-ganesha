<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs4__op__putpubfh_8c" kind="file">
    <compoundname>nfs4_op_putpubfh.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="no">rpc/types.h</includes>
    <includes local="no">rpc/rpc.h</includes>
    <includes local="no">rpc/auth.h</includes>
    <includes local="no">rpc/pmap_clnt.h</includes>
    <includes local="yes">log_macros.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">nfs23.h</includes>
    <includes local="yes">nfs4.h</includes>
    <includes local="yes">mount.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">cache_inode.h</includes>
    <includes local="yes">cache_content.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">nfs_creds.h</includes>
    <includes local="yes">nfs_proto_functions.h</includes>
    <includes local="yes">nfs_tools.h</includes>
    <includes local="yes">nfs_proto_tools.h</includes>
    <incdepgraph>
      <node id="1538">
        <label>rpc/pmap_clnt.h</label>
      </node>
      <node id="1539">
        <label>log_macros.h</label>
      </node>
      <node id="1543">
        <label>mount.h</label>
      </node>
      <node id="1546">
        <label>cache_content.h</label>
      </node>
      <node id="1531">
        <label>fcntl.h</label>
      </node>
      <node id="1527">
        <label>nfs4_op_putpubfh.c</label>
        <link refid="nfs4_op_putpubfh.c"/>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1535">
        <label>rpc/types.h</label>
      </node>
      <node id="1551">
        <label>nfs_proto_tools.h</label>
      </node>
      <node id="1542">
        <label>nfs4.h</label>
      </node>
      <node id="1530">
        <label>pthread.h</label>
      </node>
      <node id="1529">
        <label>string.h</label>
      </node>
      <node id="1534">
        <label>HashTable.h</label>
      </node>
      <node id="1537">
        <label>rpc/auth.h</label>
      </node>
      <node id="1532">
        <label>sys/file.h</label>
      </node>
      <node id="1536">
        <label>rpc/rpc.h</label>
      </node>
      <node id="1547">
        <label>nfs_exports.h</label>
      </node>
      <node id="1544">
        <label>nfs_core.h</label>
      </node>
      <node id="1541">
        <label>nfs23.h</label>
      </node>
      <node id="1549">
        <label>nfs_proto_functions.h</label>
      </node>
      <node id="1540">
        <label>stuff_alloc.h</label>
      </node>
      <node id="1528">
        <label>stdio.h</label>
      </node>
      <node id="1545">
        <label>cache_inode.h</label>
      </node>
      <node id="1533">
        <label>HashData.h</label>
      </node>
      <node id="1548">
        <label>nfs_creds.h</label>
      </node>
      <node id="1550">
        <label>nfs_tools.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="nfs4__op__putpubfh_8c_1aaca82145864a684d6f4acf2d9fa79a36" prot="public" static="no">
        <name>arg_PUTPUBFH4</name>
        <initializer>op-&gt;nfs_argop4_u.opputpubfh</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs4_op_putpubfh: The NFS4_OP_PUTFH operation</para><para>Sets the publicFH for the current compound requests as the current FH.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to nfs4_op arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] Pointer to the compound request&apos;s data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resp</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] Pointer to nfs4_op results</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NFS4_OK if successfull, other values show an error.</para></simplesect>
<simplesect kind="see"><para>all the nfs4_op_&lt;*&gt; function </para><simplesectsep/><para><ref refid="nfs4__Compound_8c_1aa1516130248e7ae55d3c2e1bffe90016" kindref="member">nfs4_Compound</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" line="133" bodyfile="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nfs4__op__putpubfh_8c_1a74ceb2516bba88804a042ee2fe96b7f6" prot="public" static="no">
        <name>res_PUTPUBFH4</name>
        <initializer>resp-&gt;nfs_resop4_u.opputpubfh</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" line="134" bodyfile="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs4__op__putpubfh_8c_1a38f52d5e8aab79df8f6dbc499819c569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CreatePUBFH4</definition>
        <argsstring>(nfs_fh4 *fh, compound_data_t *data)</argsstring>
        <name>CreatePUBFH4</name>
        <param>
          <type>nfs_fh4 *</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>compound_data_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CreatePUBFH4: create the pseudo fs public filehandle .</para><para>Creates the pseudo fs root filehandle .</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fh</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] the file handle to be built. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] request compound data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NFS4_OK is successful, NFS4ERR_BADHANDLE otherwise (for an error).</para></simplesect>
<simplesect kind="see"><para><ref refid="nfs4__op__putrootfh_8c_1af2ae7afb2b900467450251fda8abe5d1" kindref="member">nfs4_op_putrootfh</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" line="93" bodyfile="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" bodystart="92" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="nfs4__op__putpubfh_8c_1a0c1e48c9a9e8f520bbdd6dc232f0b168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs4_op_putpubfh</definition>
        <argsstring>(struct nfs_argop4 *op, compound_data_t *data, struct nfs_resop4 *resp)</argsstring>
        <name>nfs4_op_putpubfh</name>
        <param>
          <type>struct nfs_argop4 *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>compound_data_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct nfs_resop4 *</type>
          <declname>resp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" line="138" bodyfile="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" bodystart="136" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="nfs4__op__putpubfh_8c_1a42c88a3096c35d10d58b6225e0a88124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs4_op_putpubfh_Free</definition>
        <argsstring>(PUTPUBFH4res *resp)</argsstring>
        <name>nfs4_op_putpubfh_Free</name>
        <param>
          <type>PUTPUBFH4res *</type>
          <declname>resp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs4_op_putpubfh_Free: frees what was allocared to handle nfs4_op_putpubfh.</para><para>Frees what was allocared to handle nfs4_op_putpubfh.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resp</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] Pointer to nfs4_op results</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function ) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" line="210" bodyfile="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c" bodystart="209" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Routines used for managing the NFS4_OP_PUTPUBFH operation. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>deniel </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2005/11/28 17:02:51 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.11 </para></simplesect>
<ref refid="nfs4__op__getfh_8c" kindref="compound">nfs4_op_getfh.c</ref> : Routines used for managing the NFS4_OP_PUTPUBFH operation. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>FNDELAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs23.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mount.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_content.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_creds.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_proto_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_proto_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="nfs4__op__putpubfh_8c_1a38f52d5e8aab79df8f6dbc499819c569" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs4__op__putpubfh_8c_1a38f52d5e8aab79df8f6dbc499819c569" kindref="member">CreatePUBFH4</ref>(nfs_fh4<sp/>*<sp/>fh,<sp/>compound_data_t<sp/>*<sp/>data)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>pseudofs_entry_t<sp/>psfsentry;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fhstr[LEN_FH_STR];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>psfsentry<sp/>=<sp/>*(data-&gt;pseudofs-&gt;reverse_tab[0]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((status<sp/>=<sp/><ref refid="nfs__proto__tools_8c_1a9f988a714dadc7d8a6c107bc864d30ff" kindref="member">nfs4_AllocateFH</ref>(&amp;(data-&gt;publicFH)))<sp/>!=<sp/>NFS4_OK)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs4__pseudo_8c_1a966b3725ffba577196e3d5b158d0c32f" kindref="member">nfs4_PseudoToFhandle</ref>(&amp;(data-&gt;publicFH),<sp/>&amp;psfsentry))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NFS4ERR_BADHANDLE;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>nfs4_sprint_fhandle(&amp;data-&gt;publicFH,<sp/>fhstr);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>LogDebug(COMPONENT_NFS_V4,<sp/></highlight><highlight class="stringliteral">&quot;CREATE<sp/>PUBFH:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fhstr);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NFS4_OK;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CreatePUBFH4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="nfs4__op__putpubfh_8c_1aaca82145864a684d6f4acf2d9fa79a36" refkind="member"><highlight class="preprocessor">#define<sp/>arg_PUTPUBFH4<sp/>op-&gt;nfs_argop4_u.opputpubfh</highlight></codeline>
<codeline lineno="134" refid="nfs4__op__putpubfh_8c_1a74ceb2516bba88804a042ee2fe96b7f6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>res_PUTPUBFH4<sp/>resp-&gt;nfs_resop4_u.opputpubfh</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="nfs4__op__putpubfh_8c_1a0c1e48c9a9e8f520bbdd6dc232f0b168" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs4__op__putpubfh_8c_1a0c1e48c9a9e8f520bbdd6dc232f0b168" kindref="member">nfs4_op_putpubfh</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nfs_argop4<sp/>*op,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compound_data_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nfs_resop4<sp/>*resp)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>resp-&gt;resop<sp/>=<sp/>NFS4_OP_PUTPUBFH;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/><sp/>NFS4_OK<sp/><sp/>;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unsupported<sp/>for<sp/>now,<sp/>keep<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>for<sp/>a<sp/>later<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/>NFS4ERR_NOTSUPP;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now,<sp/>GANESHA<sp/>makes<sp/>no<sp/>difference<sp/>betzeen<sp/>cwPUBLICFH<sp/>and<sp/>ROOTFH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((error<sp/>=<sp/><ref refid="nfs4__op__putpubfh_8c_1a38f52d5e8aab79df8f6dbc499819c569" kindref="member">CreatePUBFH4</ref>(&amp;(data-&gt;publicFH),<sp/>data))<sp/>!=<sp/>NFS4_OK)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs4__op__putpubfh_8c_1a74ceb2516bba88804a042ee2fe96b7f6" kindref="member">res_PUTPUBFH4</ref>.status<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nfs4__op__putpubfh_8c_1a74ceb2516bba88804a042ee2fe96b7f6" kindref="member">res_PUTPUBFH4</ref>.status;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>of<sp/>all,<sp/>set<sp/>the<sp/>reply<sp/>to<sp/>zero<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>contains<sp/>no<sp/>parasite<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>memset(resp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nfs_resop4));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>is<sp/>no<sp/>currentFH,<sp/>teh<sp/><sp/>return<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs4_Is_Fh_Empty(&amp;(data-&gt;publicFH)))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>no<sp/>current<sp/>FH,<sp/>return<sp/>NFS4ERR_NOFILEHANDLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/>NFS4ERR_NOFILEHANDLE;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>filehandle<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs4_Is_Fh_Invalid(&amp;(data-&gt;publicFH)))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/>NFS4ERR_BADHANDLE;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tests<sp/>if<sp/>teh<sp/>Filehandle<sp/>is<sp/>expired<sp/>(for<sp/>volatile<sp/>filehandle)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs4_Is_Fh_Expired(&amp;(data-&gt;publicFH)))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/>NFS4ERR_FHEXPIRED;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>copy<sp/>the<sp/>root<sp/>FH<sp/>to<sp/>the<sp/>currentFH<sp/>and,<sp/>if<sp/>not<sp/>already<sp/>done,<sp/>to<sp/>the<sp/>publicFH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>moment,<sp/>I<sp/>choose<sp/>to<sp/>have<sp/>rootFH<sp/>=<sp/>publicFH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>initial<sp/>mounted_on_FH,<sp/>I&apos;ll<sp/>use<sp/>the<sp/>rootFH,<sp/>this<sp/>will<sp/>change<sp/>at<sp/>junction<sp/>traversal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;currentFH.nfs_fh4_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((error<sp/>=<sp/><ref refid="nfs__proto__tools_8c_1a9f988a714dadc7d8a6c107bc864d30ff" kindref="member">nfs4_AllocateFH</ref>(&amp;(data-&gt;currentFH)))<sp/>!=<sp/>NFS4_OK)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resp-&gt;nfs_resop4_u.opputpubfh.status<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>data<sp/>from<sp/>current<sp/>FH<sp/>to<sp/>saved<sp/>FH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(data-&gt;currentFH.nfs_fh4_val),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(data-&gt;publicFH.nfs_fh4_val),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;publicFH.nfs_fh4_len);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NFS4_OK;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs4_op_putpubfh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="nfs4__op__putpubfh_8c_1a42c88a3096c35d10d58b6225e0a88124" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs4__op__putpubfh_8c_1a42c88a3096c35d10d58b6225e0a88124" kindref="member">nfs4_op_putpubfh_Free</ref>(PUTPUBFH4res<sp/>*<sp/>resp)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>be<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs4_op_putpubfh_Free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/NFS_Protocols/nfs4_op_putpubfh.c"/>
  </compounddef>
</doxygen>
