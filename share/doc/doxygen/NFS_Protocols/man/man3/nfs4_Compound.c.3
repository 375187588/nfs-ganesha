.TH "nfs4_Compound.c" 3 "9 Apr 2008" "Version 0.1" "NFS and Mount protocols layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs4_Compound.c \- Routines used for managing the NFS4 COMPOUND functions. 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <sys/file.h>\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_creds.h'\fP
.br
\fC#include 'nfs_proto_functions.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBnfs4_op_desc__\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBCOMPOUND4_ARRAY\fP   parg->arg_compound4.argarray"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBnfs4_op_desc__\fP \fBnfs4_op_desc_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBnfs4_Compound\fP (nfs_arg_t *parg, exportlist_t *pexport, fsal_op_context_t *pcontext, cache_inode_client_t *pclient, hash_table_t *ht, struct svc_req *preq, nfs_res_t *pres)"
.br
.ti -1c
.RI "void \fBnfs4_Compound_Free\fP (nfs_res_t *pres)"
.br
.ti -1c
.RI "void \fBcompound_data_Free\fP (compound_data_t *data)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBoptab4index\fP []"
.br
.in -1c
.SH "Detailed Description"
.PP 
Routines used for managing the NFS4 COMPOUND functions. 

\fBAuthor:\fP
.RS 4
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
.RE
.PP
\fBDate:\fP
.RS 4
\fBDate\fP.RS 4
2006/01/16 16:25:44 
.RE
.PP
.RE
.PP
\fBVersion:\fP
.RS 4
\fBRevision\fP.RS 4
1.24 
.RE
.PP
.RE
.PP
\fBnfs4_Compound.c\fP : Routines used for managing the NFS4 COMPOUND functions.
.PP
Definition in file \fBnfs4_Compound.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define COMPOUND4_ARRAY   parg->arg_compound4.argarray"
.PP
Referenced by nfs4_Compound().
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBnfs4_op_desc__\fP  \fBnfs4_op_desc_t\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "void compound_data_Free (compound_data_t * data)"
.PP
compound_data_Free: Mem_Frees the compound data structure.
.PP
Mem_Frees the compound data structure..
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP pointer to be Mem_Freed
.RE
.PP
\fBReturns:\fP
.RS 4
nothing (void function).
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnfs4_op_getfh\fP 
.RE
.PP

.PP
Definition at line 548 of file nfs4_Compound.c.
.SS "int nfs4_Compound (nfs_arg_t * parg, exportlist_t * pexport, fsal_op_context_t * pcontext, cache_inode_client_t * pclient, hash_table_t * ht, struct svc_req * preq, nfs_res_t * pres)"
.PP
nfs4_COMPOUND: The NFS PROC4 COMPOUND
.PP
Implements the NFS PROC4 COMPOUND. This routine processes the content of the nfsv4 operation list and composes the result. On this aspect it is a little similar to a dispatch routine. Operation and functions necessary to process them are defined in array optab4 .
.PP
\fBParameters:\fP
.RS 4
\fIparg\fP [IN] generic nfs arguments 
.br
\fIpexportlist\fP [IN] the full export list 
.br
\fIpcontex\fP [IN] context for the FSAL (unused but kept for nfs functions prototype homogeneity) 
.br
\fIpclient\fP [INOUT] client resource for request management 
.br
\fIht\fP [INOUT] cache inode hash table 
.br
\fIpreq\fP [IN] RPC svc request 
.br
\fIpres\fP [OUT] generic nfs reply
.RE
.PP
\fBSee also:\fP
.RS 4
nfs4_op_<*> functions 
.PP
\fBnfs4_GetPseudoFs\fP
.RE
.PP
.PP
\fBTodo\fP
.RS 4
BUGAZOMEU: Reminder: Stats on NFSv4 operations are to be set here
.RE
.PP

.PP
Definition at line 202 of file nfs4_Compound.c.
.PP
References COMPOUND4_ARRAY, nfs4_op_desc__::funct, nfs4_op_desc__::name, nfs4_GetPseudoFs(), optab4index, utf82str(), and nfs4_op_desc__::val.
.SS "void nfs4_Compound_Free (nfs_res_t * pres)"
.PP
nfs4_Compound_Free: Mem_Free the result for NFS4PROC_COMPOUND
.PP
Mem_Free the result for NFS4PROC_COMPOUND.
.PP
\fBParameters:\fP
.RS 4
\fIresp\fP pointer to be Mem_Freed
.RE
.PP
\fBReturns:\fP
.RS 4
nothing (void function).
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnfs4_op_getfh\fP 
.RE
.PP

.PP
Definition at line 382 of file nfs4_Compound.c.
.PP
References nfs4_op_access_Free(), nfs4_op_close_Free(), nfs4_op_commit_Free(), nfs4_op_create_Free(), nfs4_op_delegpurge_Free(), nfs4_op_delegreturn_Free(), nfs4_op_getattr_Free(), nfs4_op_illegal_Free(), nfs4_op_link_Free(), nfs4_op_lock_Free(), nfs4_op_lockt_Free(), nfs4_op_locku_Free(), nfs4_op_lookup_Free(), nfs4_op_lookupp_Free(), nfs4_op_nverify_Free(), nfs4_op_open_confirm_Free(), nfs4_op_open_downgrade_Free(), nfs4_op_open_Free(), nfs4_op_openattr_Free(), nfs4_op_putfh_Free(), nfs4_op_read_Free(), nfs4_op_readdir_Free(), nfs4_op_release_lockowner_Free(), nfs4_op_remove_Free(), nfs4_op_rename_Free(), nfs4_op_renew_Free(), nfs4_op_secinfo_Free(), nfs4_op_setclientid_Free(), nfs4_op_verify_Free(), and nfs4_op_write_Free().
.SH "Variable Documentation"
.PP 
.SS "const int \fBoptab4index\fP[]"
.PP
\fBInitial value:\fP
.PP
.nf
 { 0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,
                            24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39 }
.fi
.PP
Definition at line 133 of file nfs4_Compound.c.
.PP
Referenced by nfs4_Compound().
.SH "Author"
.PP 
Generated automatically by Doxygen for NFS and Mount protocols layer from the source code.
