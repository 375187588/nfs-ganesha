.TH "nfs4_Compound.c" 3 "15 Sep 2010" "Version 0.1" "NFS and Mount protocols layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs4_Compound.c \- 
.PP
Routines used for managing the NFS4 COMPOUND functions.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <sys/file.h>\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_macros.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_creds.h'\fP
.br
\fC#include 'nfs_proto_functions.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBnfs4_op_desc__\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBPOS_ILLEGAL\fP   40"
.br
.ti -1c
.RI "#define \fBCOMPOUND4_ARRAY\fP   parg->arg_compound4.argarray"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBnfs4_op_desc__\fP \fBnfs4_op_desc_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBnfs4_Compound\fP (nfs_arg_t *parg, exportlist_t *pexport, fsal_op_context_t *pcontext, cache_inode_client_t *pclient, hash_table_t *ht, struct svc_req *preq, nfs_res_t *pres)"
.br
.ti -1c
.RI "void \fBnfs4_Compound_Free\fP (nfs_res_t *pres)"
.br
.ti -1c
.RI "void \fBcompound_data_Free\fP (compound_data_t *data)"
.br
.ti -1c
.RI "int \fBnfs4_op_stat_update\fP (nfs_arg_t *parg, nfs_res_t *pres, nfs_request_stat_t *pstat_req)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBoptab4index\fP []"
.br
.ti -1c
.RI "\fBnfs4_op_desc_t\fP * \fBoptabvers\fP [] = { (\fBnfs4_op_desc_t\fP *) optab4v0 }"
.br
.in -1c
.SH "Detailed Description"
.PP 
Routines used for managing the NFS4 COMPOUND functions. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/01/16 16:25:44 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.24 
.RE
.PP
\fBnfs4_Compound.c\fP : Routines used for managing the NFS4 COMPOUND functions. 
.PP
Definition in file \fBnfs4_Compound.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define COMPOUND4_ARRAY   parg->arg_compound4.argarray"
.SS "#define POS_ILLEGAL   40"
.PP
Definition at line 90 of file nfs4_Compound.c.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBnfs4_op_desc__\fP  \fBnfs4_op_desc_t\fP"
.SH "Function Documentation"
.PP 
.SS "void compound_data_Free (compound_data_t * data)"compound_data_Free: Mem_Frees the compound data structure.
.PP
Mem_Frees the compound data structure..
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP pointer to be Mem_Freed
.RE
.PP
\fBReturns:\fP
.RS 4
nothing (void function).
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnfs4_op_getfh\fP 
.RE
.PP

.PP
Definition at line 834 of file nfs4_Compound.c.
.SS "int nfs4_Compound (nfs_arg_t * parg, exportlist_t * pexport, fsal_op_context_t * pcontext, cache_inode_client_t * pclient, hash_table_t * ht, struct svc_req * preq, nfs_res_t * pres)"nfs4_COMPOUND: The NFS PROC4 COMPOUND
.PP
Implements the NFS PROC4 COMPOUND. This routine processes the content of the nfsv4 operation list and composes the result. On this aspect it is a little similar to a dispatch routine. Operation and functions necessary to process them are defined in array optab4 .
.PP
\fBParameters:\fP
.RS 4
\fIparg\fP [IN] generic nfs arguments 
.br
\fIpexportlist\fP [IN] the full export list 
.br
\fIpcontex\fP [IN] context for the FSAL (unused but kept for nfs functions prototype homogeneity) 
.br
\fIpclient\fP [INOUT] client resource for request management 
.br
\fIht\fP [INOUT] cache inode hash table 
.br
\fIpreq\fP [IN] RPC svc request 
.br
\fIpres\fP [OUT] generic nfs reply
.RE
.PP
\fBSee also:\fP
.RS 4
nfs4_op_<*> functions 
.PP
\fBnfs4_GetPseudoFs\fP 
.RE
.PP

.PP
\fBTodo\fP
.RS 4
BUGAZOMEU: Reminder: Stats on NFSv4 operations are to be set here 
.RE
.PP

.PP
Definition at line 235 of file nfs4_Compound.c.
.SS "void nfs4_Compound_Free (nfs_res_t * pres)"nfs4_Compound_Free: Mem_Free the result for NFS4PROC_COMPOUND
.PP
Mem_Free the result for NFS4PROC_COMPOUND.
.PP
\fBParameters:\fP
.RS 4
\fIresp\fP pointer to be Mem_Freed
.RE
.PP
\fBReturns:\fP
.RS 4
nothing (void function).
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnfs4_op_getfh\fP 
.RE
.PP

.PP
Definition at line 519 of file nfs4_Compound.c.
.SS "int nfs4_op_stat_update (nfs_arg_t * parg, nfs_res_t * pres, nfs_request_stat_t * pstat_req)"nfs4_op_stat_update: updates the NFSv4 operations specific statistics for a COMPOUND4 requests (either v4.0 or v4.1).
.PP
Updates the NFSv4 operations specific statistics for a COMPOUND4 requests (either v4.0 or v4.1).
.PP
\fBParameters:\fP
.RS 4
\fIparg\fP argument for the COMPOUND4 request 
.br
\fIpres\fP result for the COMPOUND4 request 
.br
\fIpstat_req\fP pointer to the worker's structure for NFSv4 stats
.RE
.PP
\fBReturns:\fP
.RS 4
-1 if failed 0 otherwise 
.RE
.PP

.PP
Definition at line 867 of file nfs4_Compound.c.
.SH "Variable Documentation"
.PP 
.SS "const int \fBoptab4index\fP[]"\fBInitial value:\fP
.PP
.nf

    { 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
  21, 22, 23,
  24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
}
.fi
.PP
Definition at line 84 of file nfs4_Compound.c.
.SS "\fBnfs4_op_desc_t\fP* \fBoptabvers\fP[] = { (\fBnfs4_op_desc_t\fP *) optab4v0 }"
.PP
Definition at line 210 of file nfs4_Compound.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for NFS and Mount protocols layer from the source code.
