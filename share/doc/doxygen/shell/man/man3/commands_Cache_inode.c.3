.TH "commands_Cache_inode.c" 3 "31 Mar 2009" "Version 0.1" "ganeshell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
commands_Cache_inode.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'LRU_List.h'\fP
.br
\fC#include 'err_fsal.h'\fP
.br
\fC#include 'err_cache_inode.h'\fP
.br
\fC#include 'err_cache_content.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'cmd_tools.h'\fP
.br
\fC#include 'commands.h'\fP
.br
\fC#include 'Getopt.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <strings.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <sys/time.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pwd.h>\fP
.br
\fC#include <ctype.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBcmdCacheInode_thr_info__\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBEXPORT_ID\fP   1"
.br
.ti -1c
.RI "#define \fBATTR_LEN\fP   100"
.br
.ti -1c
.RI "#define \fBCACHE_INODE_SHELL_READDIR_SIZE\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_GRPS\fP   128"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBcmdCacheInode_thr_info__\fP \fBcmdCacheInode_thr_info_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcmdCacheInode_thr_info_t\fP * \fBRetrieveInitializedContext\fP ()"
.br
.ti -1c
.RI "void \fBCache_inode_layer_SetLogLevel\fP (int log_lvl)"
.br
.ti -1c
.RI "int \fBlru_entry_to_str\fP (LRU_data_t data, char *str)"
.br
.ti -1c
.RI "int \fBlru_clean_entry\fP (LRU_entry_t *entry, void *adddata)"
.br
.ti -1c
.RI "int \fBcache_solvepath\fP (char *io_global_path, int size_global_path, char *i_spec_path, cache_entry_t *current_pentry, cache_entry_t **pnew_pentry, FILE *output)"
.br
.ti -1c
.RI "int \fBcacheinode_init\fP (char *filename, int flag_v, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_cache_init\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_pwd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_cd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_stat\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_gc\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_ls\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_callstat\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_mkdir\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_link\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_ln\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_create\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_rename\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_unlink\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_setattr\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_access\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_data_cache\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_release_cache\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_recover_cache\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_refresh_cache\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_flush_cache\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_read\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_write\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_su\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_open_by_name\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_Cache_inode_close\fP (int argc, char **argv, FILE *output)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "hash_table_t * \fBht\fP"
.br
.ti -1c
.RI "cache_inode_client_parameter_t \fBcache_client_param\fP"
.br
.ti -1c
.RI "cache_content_client_parameter_t \fBdatacache_client_param\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define ATTR_LEN   100"
.PP
Definition at line 114 of file commands_Cache_inode.c.
.SS "#define CACHE_INODE_SHELL_READDIR_SIZE   10"
.PP
.SS "#define EXPORT_ID   1"
.PP
Definition at line 113 of file commands_Cache_inode.c.
.SS "#define MAX_GRPS   128"
.PP
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBcmdCacheInode_thr_info__\fP  \fBcmdCacheInode_thr_info_t\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "void Cache_inode_layer_SetLogLevel (int log_lvl)"
.PP
Definition at line 337 of file commands_Cache_inode.c.
.SS "int cache_solvepath (char * io_global_path, int size_global_path, char * i_spec_path, cache_entry_t * current_pentry, cache_entry_t ** pnew_pentry, FILE * output)"
.PP
Definition at line 389 of file commands_Cache_inode.c.
.SS "int cacheinode_init (char * filename, int flag_v, FILE * output)"
.PP
Definition at line 553 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_access (int argc, char ** argv, FILE * output)"
.PP
perform an access command. syntax: access [F][R][W][X] <file> example: access toto FRX 
.PP
Definition at line 2772 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_cache_init (int argc, char ** argv, FILE * output)"
.PP
proceed an init_fs command. 
.PP
Definition at line 797 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_callstat (int argc, char ** argv, FILE * output)"
.PP
display statistics about FSAL calls. 
.PP
Definition at line 1577 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_cd (int argc, char ** argv, FILE * output)"
.PP
change current path 
.PP
Definition at line 911 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_close (int argc, char ** argv, FILE * output)"
.PP
Close an opened entry 
.PP
Definition at line 4577 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_create (int argc, char ** argv, FILE * output)"
.PP
proceed an create command. 
.PP
Definition at line 2104 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_data_cache (int argc, char ** argv, FILE * output)"
.PP
cache en entry (REGULAR_FILE) in the data cache 
.PP
Definition at line 2944 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_flush_cache (int argc, char ** argv, FILE * output)"
.PP
flush en entry (REGULAR_FILE) in the data cache 
.PP
Definition at line 3425 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_gc (int argc, char ** argv, FILE * output)"
.PP
proceed to a call to the garbagge collector. 
.PP
Definition at line 1073 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_link (int argc, char ** argv, FILE * output)"
.PP
proceed an create command. 
.PP
Definition at line 1809 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_ln (int argc, char ** argv, FILE * output)"
.PP
proceed an ln (symlink) command. 
.PP
Definition at line 1954 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_ls (int argc, char ** argv, FILE * output)"
.PP
proceed an ls command. 
.PP
Definition at line 1157 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_mkdir (int argc, char ** argv, FILE * output)"
.PP
proceed an mkdir command. 
.PP
Definition at line 1636 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_open_by_name (int argc, char ** argv, FILE * output)"
.PP
change current path 
.PP
Definition at line 4505 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_pwd (int argc, char ** argv, FILE * output)"
.PP
prints current path 
.PP
Definition at line 881 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_read (int argc, char ** argv, FILE * output)"
.PP
Reads the content of a cached regular file 
.PP
Definition at line 3545 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_recover_cache (int argc, char ** argv, FILE * output)"
.PP
recover the data cache 
.PP
Definition at line 3200 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_refresh_cache (int argc, char ** argv, FILE * output)"
.PP
refresh en entry (REGULAR_FILE) in the data cache 
.PP
Definition at line 3304 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_release_cache (int argc, char ** argv, FILE * output)"
.PP
cache en entry (REGULAR_FILE) in the data cache 
.PP
Definition at line 3089 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_rename (int argc, char ** argv, FILE * output)"
.PP
proceed a rename command. 
.PP
Definition at line 2275 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_setattr (int argc, char ** argv, FILE * output)"
.PP
setattr
.PP
syntax of command line: setattr file_path attribute_name attribute_value 
.PP
Definition at line 2588 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_stat (int argc, char ** argv, FILE * output)"
.PP
proceed a stat command. 
.PP
Definition at line 974 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_su (int argc, char ** argv, FILE * output)"
.PP
change thread contexte. 
.PP
Definition at line 4411 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_unlink (int argc, char ** argv, FILE * output)"
.PP
proceed an unlink command. 
.PP
Definition at line 2448 of file commands_Cache_inode.c.
.SS "int fn_Cache_inode_write (int argc, char ** argv, FILE * output)"
.PP
Reads the content of a cached regular file 
.PP
Definition at line 3968 of file commands_Cache_inode.c.
.SS "int lru_clean_entry (LRU_entry_t * entry, void * adddata)"
.PP
Definition at line 373 of file commands_Cache_inode.c.
.SS "int lru_entry_to_str (LRU_data_t data, char * str)"
.PP
Definition at line 368 of file commands_Cache_inode.c.
.SS "\fBcmdCacheInode_thr_info_t\fP* RetrieveInitializedContext ()"
.PP
Definition at line 311 of file commands_Cache_inode.c.
.SH "Variable Documentation"
.PP 
.SS "cache_inode_client_parameter_t \fBcache_client_param\fP"
.PP
Global (exported) variable : init parameters for clients. 
.PP
Definition at line 137 of file commands_Cache_inode.c.
.SS "cache_content_client_parameter_t \fBdatacache_client_param\fP"
.PP
Definition at line 138 of file commands_Cache_inode.c.
.SS "hash_table_t* \fBht\fP"
.PP
Global (exported) variable : The cache hash table 
.PP
Definition at line 129 of file commands_Cache_inode.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for ganeshell from the source code.
