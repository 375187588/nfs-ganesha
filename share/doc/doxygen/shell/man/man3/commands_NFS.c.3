.TH "commands_NFS.c" 3 "31 Mar 2009" "Version 0.1" "ganeshell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
commands_NFS.c \- calls to NFSv2, NFSv3, MNTv1, MNTv3 commands.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/svc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'commands.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'Getopt.h'\fP
.br
\fC#include 'cmd_nfstools.h'\fP
.br
\fC#include 'cmd_tools.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include <ctype.h>\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <pwd.h>\fP
.br
\fC#include <string.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBshell_fh3__\fP"
.br
.ti -1c
.RI "struct \fBcmdnfs_thr_info__\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBNFS_READDIR_SIZE\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_GRPS\fP   128"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBshell_fh3__\fP \fBshell_fh3_t\fP"
.br
.ti -1c
.RI "typedef struct \fBcmdnfs_thr_info__\fP \fBcmdnfs_thr_info_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcmdnfs_thr_info_t\fP * \fBGetNFSClient\fP ()"
.br
.ti -1c
.RI "int \fBInitNFSClient\fP (\fBcmdnfs_thr_info_t\fP *p_thr_info)"
.br
.ti -1c
.RI "void \fBnfs_layer_SetLogLevel\fP (int log_lvl)"
.br
.ti -1c
.RI "int \fBnfs_init\fP (char *filename, int flag_v, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_init\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_MNT1_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_MNT3_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_NFS2_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_NFS3_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "void \fBnfs_readdirplus_free\fP (nfs_res_t *to_free)"
.br
.ti -1c
.RI "int \fBfn_nfs_mount\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_umount\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_pwd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_ls\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_cd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_create\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_mkdir\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_unlink\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_setattr\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_rename\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_hardlink\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_ln\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_stat\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_su\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_id\fP (int argc, char **argv, FILE *output)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "nfs_parameter_t \fBnfs_param\fP"
.br
.ti -1c
.RI "hash_table_t * \fBht\fP"
.br
.ti -1c
.RI "cache_inode_client_parameter_t \fBcache_client_param\fP"
.br
.ti -1c
.RI "cache_content_client_parameter_t \fBdatacache_client_param\fP"
.br
.ti -1c
.RI "exportlist_t \fBexportlist\fP [128]"
.br
.ti -1c
.RI "exportlist_t * \fBpexportlist\fP = \fBexportlist\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
calls to NFSv2, NFSv3, MNTv1, MNTv3 commands. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/02/23 07:42:53 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.34 
.RE
.PP
\fBLog\fP.RS 4
\fBcommands_NFS.c\fP,v 
.RE
.PP
Revision 1.34 2006/02/23 07:42:53 leibovic Adding -n option to shell.
.PP
Revision 1.33 2006/02/22 09:07:45 leibovic Correcting bug for returned value.
.PP
Revision 1.32 2006/02/17 13:37:44 leibovic Ghost FS is back !
.PP
Revision 1.31 2006/01/27 10:28:37 deniel Now support rpm
.PP
Revision 1.30 2006/01/26 07:54:44 leibovic Compil AIX_5 et Linux OK.
.PP
Revision 1.29 2006/01/25 09:39:44 deniel pb include DCE
.PP
Revision 1.28 2006/01/24 13:49:33 leibovic Adding missing includes.
.PP
Revision 1.27 2006/01/24 11:43:05 deniel Code cleaning in progress
.PP
Revision 1.26 2006/01/20 14:44:14 leibovic altgroups support.
.PP
Revision 1.25 2006/01/18 08:02:04 deniel Order in includes and libraries
.PP
Revision 1.24 2006/01/17 16:40:54 leibovic New interface for readexport.
.PP
Revision 1.23 2005/11/28 17:03:00 deniel Added CeCILL headers
.PP
Revision 1.22 2005/11/21 09:55:18 leibovic Once for all thread's credential initialization.
.PP
Revision 1.21 2005/11/08 15:22:24 deniel WildCard and Netgroup entry for exportlist are now supported
.PP
Revision 1.20 2005/11/04 15:12:58 deniel Added basic authentication support
.PP
Revision 1.19 2005/10/12 11:30:10 leibovic NFSv2.
.PP
Revision 1.18 2005/10/10 12:39:08 leibovic Using mnt/nfs free functions.
.PP
Revision 1.17 2005/09/28 11:02:29 leibovic Adding su command to NFS layer.
.PP
Revision 1.16 2005/09/27 08:15:13 leibovic Adding traces and changhing readexport prototype.
.PP
Revision 1.15 2005/09/07 14:08:32 leibovic Adding stat command for NFS.
.PP
Revision 1.14 2005/08/12 07:07:23 leibovic Adding ln command for nfs.
.PP
Revision 1.13 2005/08/10 14:55:05 leibovic NFS support of setattr, rename, link, symlink.
.PP
Revision 1.12 2005/08/10 10:57:18 leibovic Adding removal functions.
.PP
Revision 1.11 2005/08/09 14:52:58 leibovic Addinf create and mkdir commands.
.PP
Revision 1.10 2005/08/08 11:42:50 leibovic Adding some stardard unix calls through NFS (ls, cd, pwd).
.PP
Revision 1.9 2005/08/05 15:17:57 leibovic Adding mount and pwd commands for browsing.
.PP
Revision 1.8 2005/08/05 07:59:07 leibovic some nfs3 commands added.
.PP
Revision 1.7 2005/08/04 06:57:41 leibovic some NFSv2 commands are completed.
.PP
Revision 1.6 2005/08/03 12:51:16 leibovic MNT3 protocol OK.
.PP
Revision 1.5 2005/08/03 11:51:10 leibovic MNT1 protocol OK.
.PP
Revision 1.4 2005/08/03 08:16:23 leibovic Adding nfs layer structures.
.PP
Revision 1.3 2005/05/09 12:23:55 leibovic Version 2 of ganeshell.
.PP
Revision 1.2 2005/03/04 10:12:15 leibovic New debug functions.
.PP
Revision 1.1 2005/01/21 09:40:31 leibovic Integrating NFS and MNT protocol commands. 
.PP
Definition in file \fBcommands_NFS.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define MAX_GRPS   128"
.PP
.SS "#define NFS_READDIR_SIZE   10"
.PP
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBcmdnfs_thr_info__\fP  \fBcmdnfs_thr_info_t\fP"
.PP
.SS "typedef struct \fBshell_fh3__\fP  \fBshell_fh3_t\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "int fn_MNT1_command (int argc, char ** argv, FILE * output)"
.PP
process MNT1 protocol's command. 
.PP
Definition at line 628 of file commands_NFS.c.
.SS "int fn_MNT3_command (int argc, char ** argv, FILE * output)"
.PP
process MNT3 protocol's command. 
.PP
Definition at line 732 of file commands_NFS.c.
.SS "int fn_NFS2_command (int argc, char ** argv, FILE * output)"
.PP
process NFS2 protocol's command. 
.PP
Definition at line 833 of file commands_NFS.c.
.SS "int fn_NFS3_command (int argc, char ** argv, FILE * output)"
.PP
process NFS3 protocol's command. 
.PP
Definition at line 952 of file commands_NFS.c.
.SS "int fn_nfs_cd (int argc, char ** argv, FILE * output)"
.PP
change current path 
.PP
Definition at line 2682 of file commands_NFS.c.
.SS "int fn_nfs_create (int argc, char ** argv, FILE * output)"
.PP
create a file 
.PP
Definition at line 2768 of file commands_NFS.c.
.SS "int fn_nfs_hardlink (int argc, char ** argv, FILE * output)"
.PP
proceed a hardlink command. 
.PP
Definition at line 3418 of file commands_NFS.c.
.SS "int fn_nfs_id (int argc, char ** argv, FILE * output)"
.PP
Definition at line 3958 of file commands_NFS.c.
.SS "int fn_nfs_init (int argc, char ** argv, FILE * output)"
.PP
Init nfs layer 
.PP
Definition at line 541 of file commands_NFS.c.
.SS "int fn_nfs_ln (int argc, char ** argv, FILE * output)"
.PP
proceed an ln command. 
.PP
Definition at line 3551 of file commands_NFS.c.
.SS "int fn_nfs_ls (int argc, char ** argv, FILE * output)"
.PP
proceed an ls command using NFS protocol NFS 
.PP
Definition at line 2343 of file commands_NFS.c.
.SS "int fn_nfs_mkdir (int argc, char ** argv, FILE * output)"
.PP
create a directory 
.PP
Definition at line 2895 of file commands_NFS.c.
.SS "int fn_nfs_mount (int argc, char ** argv, FILE * output)"
.PP
mount a path to browse it. 
.PP
Definition at line 2105 of file commands_NFS.c.
.SS "int fn_nfs_pwd (int argc, char ** argv, FILE * output)"
.PP
prints current path 
.PP
Definition at line 2309 of file commands_NFS.c.
.SS "int fn_nfs_rename (int argc, char ** argv, FILE * output)"
.PP
proceed a rename command. 
.PP
Definition at line 3281 of file commands_NFS.c.
.SS "int fn_nfs_setattr (int argc, char ** argv, FILE * output)"
.PP
setattr 
.PP
Definition at line 3153 of file commands_NFS.c.
.SS "int fn_nfs_stat (int argc, char ** argv, FILE * output)"
.PP
proceed an ls command using NFS protocol NFS 
.PP
Definition at line 3692 of file commands_NFS.c.
.SS "int fn_nfs_su (int argc, char ** argv, FILE * output)"
.PP
change thread credentials. 
.PP
Definition at line 3854 of file commands_NFS.c.
.SS "int fn_nfs_umount (int argc, char ** argv, FILE * output)"
.PP
umount a mounted path. 
.PP
Definition at line 2216 of file commands_NFS.c.
.SS "int fn_nfs_unlink (int argc, char ** argv, FILE * output)"
.PP
unlink a file 
.PP
Definition at line 3021 of file commands_NFS.c.
.SS "\fBcmdnfs_thr_info_t\fP* GetNFSClient ()"
.PP
Definition at line 341 of file commands_NFS.c.
.SS "int InitNFSClient (\fBcmdnfs_thr_info_t\fP * p_thr_info)"
.PP

.PP
\fBTodo\fP
.RS 4
No secondary groups support. 
.RE
.PP

.PP
Definition at line 384 of file commands_NFS.c.
.SS "int nfs_init (char * filename, int flag_v, FILE * output)"
.PP

.PP
\fBTodo\fP
.RS 4
Are there other things to initialize ? 
.RE
.PP

.PP
Definition at line 474 of file commands_NFS.c.
.SS "void nfs_layer_SetLogLevel (int log_lvl)"
.PP
Definition at line 458 of file commands_NFS.c.
.SS "void nfs_readdirplus_free (nfs_res_t * to_free)"
.PP
Definition at line 1515 of file commands_NFS.c.
.SH "Variable Documentation"
.PP 
.SS "cache_inode_client_parameter_t \fBcache_client_param\fP"
.PP
Global (exported) variable : init parameters for clients. 
.PP
Definition at line 137 of file commands_Cache_inode.c.
.SS "cache_content_client_parameter_t \fBdatacache_client_param\fP"
.PP
Definition at line 138 of file commands_Cache_inode.c.
.SS "exportlist_t \fBexportlist\fP[128]"
.PP
Definition at line 277 of file commands_NFS.c.
.SS "hash_table_t* \fBht\fP"
.PP
Global (exported) variable : The cache hash table 
.PP
Definition at line 129 of file commands_Cache_inode.c.
.SS "nfs_parameter_t \fBnfs_param\fP"
.PP
Definition at line 224 of file commands_NFS.c.
.SS "exportlist_t* \fBpexportlist\fP = \fBexportlist\fP"
.PP
Definition at line 278 of file commands_NFS.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for ganeshell from the source code.
