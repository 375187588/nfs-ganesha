.TH "cmd_tools.c" 3 "9 Apr 2008" "Version 0.1" "ganeshell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cmd_tools.c \- Header file for functions used by several layers. 
.SH SYNOPSIS
.br
.PP
\fC#include <strings.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <err_ghost_fs.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include 'cmd_tools.h'\fP
.br
\fC#include <grp.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBTIME_STRLEN\fP   30"
.br
.ti -1c
.RI "#define \fBprint_mask\fP(_out, _mode, _mask, _lettre)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "tm * \fBLocaltime_r\fP (const time_t *p_time, struct tm *p_tm)"
.br
.ti -1c
.RI "int \fBmy_atoi\fP (char *str)"
.br
.ti -1c
.RI "int \fBatomode\fP (char *str)"
.br
.ti -1c
.RI "int \fBato64\fP (char *str, unsigned long long *out64)"
.br
.ti -1c
.RI "time_t \fBatotime\fP (char *str)"
.br
.ti -1c
.RI "void \fBsplit_path\fP (char *in_path, char **p_path, char **p_file)"
.br
.ti -1c
.RI "char * \fBtime2str\fP (time_t time_in, char *str_out)"
.br
.ti -1c
.RI "void \fBclean_path\fP (char *str, int len)"
.br
.ti -1c
.RI "void \fBprint_fsal_status\fP (FILE *output, fsal_status_t status)"
.br
.ti -1c
.RI "void \fBprint_fsal_attrib_mask\fP (fsal_attrib_mask_t mask, FILE *output)"
.br
.ti -1c
.RI "char * \fBstrtype\fP (fsal_nodetype_t type)"
.br
.ti -1c
.RI "void \fBprint_fsal_attributes\fP (fsal_attrib_list_t attrs, FILE *output)"
.br
.ti -1c
.RI "void \fBprint_item_line\fP (FILE *out, fsal_attrib_list_t *attrib, char *name, char *target)"
.br
.ti -1c
.RI "int \fBMkFSALSetAttrStruct\fP (char *attribute_list, fsal_attrib_list_t *fsal_set_attr_struct)"
.br
.ti -1c
.RI "timeval \fBtime_diff\fP (struct timeval time_from, struct timeval time_to)"
.br
.ti -1c
.RI "char * \fBconcat\fP (char *str1, char *str2, size_t max_len)"
.br
.ti -1c
.RI "int \fBgetugroups\fP (int maxcount, gid_t *grouplist, char *username, gid_t gid)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Header file for functions used by several layers. 

\fBAuthor:\fP
.RS 4
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
.RE
.PP
\fBDate:\fP
.RS 4
$Date $ 
.RE
.PP
\fBVersion:\fP
.RS 4
$Revision $ 
.RE
.PP
\fBLog\fP.RS 4
\fBcmd_tools.c\fP,v 
.RE
.PP
Revision 1.24 2006/01/20 14:44:13 leibovic altgroups support.
.PP
Revision 1.23 2006/01/17 14:56:22 leibovic Adaptation de HPSS 6.2.
.PP
Revision 1.22 2005/11/28 17:03:00 deniel Added CeCILL headers
.PP
Revision 1.21 2005/09/28 09:08:00 leibovic thread-safe version of localtime.
.PP
Revision 1.20 2005/09/09 15:23:11 leibovic Adding 'cross' command for crossing junctions.
.PP
Revision 1.19 2005/08/12 11:21:27 leibovic Now, set cat concatenate strings.
.PP
Revision 1.18 2005/07/27 14:19:08 leibovic Changing fsal_time_t printing.
.PP
Revision 1.17 2005/05/11 15:53:36 leibovic Adding time function.
.PP
Revision 1.16 2005/05/03 09:38:25 leibovic Adding handle adressing support.
.PP
Revision 1.15 2005/04/25 15:25:54 leibovic Handling daylight saving.
.PP
Revision 1.14 2005/04/25 12:57:48 leibovic Implementing setattr.
.PP
Revision 1.13 2005/04/14 11:21:56 leibovic Changing command syntax.
.PP
Revision 1.12 2005/04/13 09:28:05 leibovic Adding unlink and mkdir calls.
.PP
Revision 1.11 2005/03/15 15:30:07 leibovic localtime_r -> localtime.
.PP
Revision 1.10 2005/03/14 10:49:18 leibovic Changing time printing.
.PP
Revision 1.9 2005/03/09 15:43:25 leibovic Multi-OS compiling.
.PP
Revision 1.8 2005/03/04 08:01:32 leibovic removing snprintmem (moved to FSAL layer)à.
.PP
Revision 1.7 2005/01/31 14:09:03 leibovic Portage to Linux.
.PP
Revision 1.6 2005/01/21 13:31:26 leibovic Code clenaning.
.PP
Revision 1.5 2005/01/11 08:27:38 leibovic Implementing Cache_inode layer tests.
.PP
Revision 1.4 2005/01/07 09:12:13 leibovic Improved Cache_inode shell version.
.PP
Revision 1.3 2004/12/17 16:05:27 leibovic Replacing X with snprintmem for handles printing.
.PP
Revision 1.2 2004/12/09 15:53:50 leibovic A debug printf had been left.
.PP
Revision 1.1 2004/12/09 15:46:22 leibovic Tools externalisation.
.PP
Definition in file \fBcmd_tools.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define print_mask(_out, _mode, _mask, _lettre)"
.PP
\fBValue:\fP
.PP
.nf
do {    \
        if (_mode & _mask) fprintf(_out,_lettre);\
        else fprintf(_out,'-');                  \
      } while(0)
.fi
print_item_line: Prints a filesystem element on one line, like the Unix ls command.
.PP
\fBParameters:\fP
.RS 4
\fIout\fP (in FILE*) The file where the item is to be printed. 
.br
\fIattrib\fP (in fsal_attrib_list_t *) the attributes for the item. 
.br
\fIname\fP (in char *) The name of the item to be printed. 
.br
\fItarget\fP (in char *) It the item is a symbolic link, this contains the link target. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 836 of file cmd_tools.c.
.SS "#define TIME_STRLEN   30"
.PP
Referenced by time2str().
.SH "Function Documentation"
.PP 
.SS "int ato64 (char * str, unsigned long long * out64)"
.PP
Definition at line 265 of file cmd_tools.c.
.PP
Referenced by cmdnfs_READDIR3args(), cmdnfs_READDIRPLUS3args(), cmdnfs_sattr2(), cmdnfs_sattr3(), fn_Cache_inode_read(), fn_Cache_inode_write(), fn_fsal_read(), fn_fsal_truncate(), fn_fsal_write(), and MkFSALSetAttrStruct().
.SS "int atomode (char * str)"
.PP
atomode: This function converts a string to a unix access mode.
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP (in char *) The string to be converted.
.RE
.PP
\fBReturns:\fP
.RS 4
A negative value on error. Else, the access mode integer. 
.RE
.PP

.PP
Definition at line 242 of file cmd_tools.c.
.PP
Referenced by cmdnfs_sattr2(), cmdnfs_sattr3(), fn_Cache_inode_create(), fn_Cache_inode_mkdir(), fn_fsal_create(), fn_fsal_mkdir(), fn_nfs_create(), fn_nfs_mkdir(), fn_nfs_remote_create(), fn_nfs_remote_mkdir(), and MkFSALSetAttrStruct().
.SS "time_t atotime (char * str)"
.PP
convert time from 'YYYYMMDDHHMMSS' to time_t. 
.PP
Definition at line 293 of file cmd_tools.c.
.PP
References my_atoi().
.PP
Referenced by cmdnfs_sattr2(), cmdnfs_sattr3(), cmdnfs_sattrguard3(), and MkFSALSetAttrStruct().
.SS "void clean_path (char * str, int len)"
.PP
clean_path: Transform a path to a cannonical path. Remove //, /./, /../, final / from a POSIX-like path.
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP (in/out char*) The path to be transformed. 
.br
\fIlen\fP (in int) The max path length. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 540 of file cmd_tools.c.
.PP
Referenced by cache_solvepath(), nfs_remote_solvepath(), and solvepath().
.SS "char* concat (char * str1, char * str2, size_t max_len)"
.PP
concat: concatenates 2 strings with a limitation of the size of the destination string.
.PP
\fBParameters:\fP
.RS 4
\fIstr1\fP (in/out char*) The destination string. 
.br
\fIstr2\fP (in char*) The string to be added at the end of str1. 
.br
\fImax_len\fP (in int) The max str1 length. 
.RE
.PP
\fBReturns:\fP
.RS 4
NULL on error, the destination string, else. 
.RE
.PP

.PP
Definition at line 1115 of file cmd_tools.c.
.PP
Referenced by shellcmd_set().
.SS "int getugroups (int maxcount, gid_t * grouplist, char * username, gid_t gid)"
.PP
Definition at line 1129 of file cmd_tools.c.
.PP
Referenced by fn_Cache_inode_su(), fn_fsal_su(), fn_nfs_remote_su(), fn_nfs_su(), and rpc_init().
.SS "struct tm* Localtime_r (const time_t * p_time, struct tm * p_tm)"
.PP
Definition at line 179 of file cmd_tools.c.
.PP
Referenced by cmdnfs_fattr2(), cmdnfs_fattr3(), cmdnfs_preopattr(), and time2str().
.SS "int MkFSALSetAttrStruct (char * attribute_list, fsal_attrib_list_t * fsal_set_attr_struct)"
.PP
this function converts peers (attr_name=attr_value,attr_name=attr_value,...) to a fsal_attrib_list_t to be used in the FSAL_setattr call). 
.PP
\fBReturns:\fP
.RS 4
0 if no error occured, a non null value else. 
.RE
.PP

.PP
Definition at line 946 of file cmd_tools.c.
.PP
References ato64(), atomode(), atotime(), ATTR_32, ATTR_64, shell_attribute__::attr_mask, shell_attribute__::attr_name, ATTR_OCTAL, shell_attribute__::attr_offset, ATTR_TIME, shell_attribute__::attr_type, my_atoi(), and shell_attribute_t.
.PP
Referenced by fn_Cache_inode_setattr(), and fn_fsal_setattr().
.SS "int my_atoi (char * str)"
.PP
my_atoi: This function converts a string to an integer.
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP (in char *) The string to be converted.
.RE
.PP
\fBReturns:\fP
.RS 4
A negative value on error. Else, the converted integer. 
.RE
.PP

.PP
Definition at line 211 of file cmd_tools.c.
.PP
Referenced by atotime(), cmdnfs_READDIR2args(), cmdnfs_sattr2(), cmdnfs_sattr3(), cmdnfs_sattrguard3(), fn_Cache_inode_su(), fn_fsal_su(), fn_nfs_remote_su(), fn_nfs_su(), MkFSALSetAttrStruct(), shellcmd_set(), util_cmp(), and util_sleep().
.SS "void print_fsal_attrib_mask (fsal_attrib_mask_t mask, FILE * output)"
.PP
print_fsal_attrib_mask: Print an fsal_attrib_mask_t to a given output file.
.PP
\fBParameters:\fP
.RS 4
\fImask\fP (in fsal_attrib_mask_t) The mask to be printed. 
.br
\fIoutput\fP (in FILE *) The output where the mask is to be printed. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 707 of file cmd_tools.c.
.PP
Referenced by fn_fsal_stat().
.SS "void print_fsal_attributes (fsal_attrib_list_t attrs, FILE * output)"
.PP
print_fsal_attributes: print an fsal_attrib_list_t to a given output file.
.PP
\fBParameters:\fP
.RS 4
\fIattrs\fP (in fsal_attrib_list_t) The attributes to be printed. 
.br
\fIoutput\fP (in FILE *) The file where the attributes are to be printed. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 784 of file cmd_tools.c.
.PP
References strtype().
.PP
Referenced by fn_Cache_inode_ls(), fn_Cache_inode_setattr(), fn_Cache_inode_stat(), fn_fsal_access(), fn_fsal_ls(), fn_fsal_setattr(), and fn_fsal_stat().
.SS "void print_fsal_status (FILE * output, fsal_status_t status)"
.PP
print_fsal_status: this function prints an fsal_status_t to a given output file.
.PP
\fBParameters:\fP
.RS 4
\fIoutput\fP (in FILE *) The output where the status is to be printed. 
.br
\fIstatus\fP (in status) The status to be printed.
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 677 of file cmd_tools.c.
.PP
Referenced by cache_solvepath(), cacheinode_init(), fn_Cache_inode_create(), fn_Cache_inode_link(), fn_Cache_inode_ln(), fn_Cache_inode_mkdir(), fn_Cache_inode_rename(), fn_Cache_inode_su(), fn_Cache_inode_unlink(), fn_fsal_access(), fn_fsal_cat(), fn_fsal_cd(), fn_fsal_close(), fn_fsal_close_byfileid(), fn_fsal_create(), fn_fsal_cross(), fn_fsal_getxattr(), fn_fsal_handlecmp(), fn_fsal_hardlink(), fn_fsal_ln(), fn_fsal_ls(), fn_fsal_lsxattrs(), fn_fsal_mkdir(), fn_fsal_open(), fn_fsal_open_byfileid(), fn_fsal_open_byname(), fn_fsal_rcp(), fn_fsal_read(), fn_fsal_rename(), fn_fsal_setattr(), fn_fsal_stat(), fn_fsal_su(), fn_fsal_truncate(), fn_fsal_unlink(), fn_fsal_write(), fn_nfs_su(), fsal_init(), Init_Thread_Context(), and solvepath().
.SS "void print_item_line (FILE * out, fsal_attrib_list_t * attrib, char * name, char * target)"
.PP
print_item_line: Prints a filesystem element on one line, like the Unix ls command.
.PP
\fBParameters:\fP
.RS 4
\fIout\fP (in FILE*) The file where the item is to be printed. 
.br
\fIattrib\fP (in fsal_attrib_list_t *) the attributes for the item. 
.br
\fIname\fP (in char *) The name of the item to be printed. 
.br
\fItarget\fP (in char *) It the item is a symbolic link, this contains the link target. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 841 of file cmd_tools.c.
.PP
References print_mask, and time2str().
.PP
Referenced by fn_Cache_inode_ls(), and fn_fsal_ls().
.SS "void split_path (char * in_path, char ** p_path, char ** p_file)"
.PP
split_path: splits a path 'dir/dir/dir/obj' in two strings : 'dir/dir/dir' and 'obj'.
.PP
\fBParameters:\fP
.RS 4
\fIin_path\fP (in/out char *) 
.br
\fIp_path\fP (out char **) 
.br
\fIp_file\fP (out char **) 
.RE
.PP

.PP
Definition at line 443 of file cmd_tools.c.
.PP
Referenced by fn_Cache_inode_create(), fn_Cache_inode_link(), fn_Cache_inode_ln(), fn_Cache_inode_mkdir(), fn_Cache_inode_rename(), fn_Cache_inode_unlink(), fn_fsal_create(), fn_fsal_hardlink(), fn_fsal_ln(), fn_fsal_mkdir(), fn_fsal_rename(), fn_fsal_unlink(), fn_nfs_create(), fn_nfs_hardlink(), fn_nfs_ln(), fn_nfs_mkdir(), fn_nfs_remote_create(), fn_nfs_remote_hardlink(), fn_nfs_remote_ln(), fn_nfs_remote_mkdir(), fn_nfs_remote_rename(), fn_nfs_remote_unlink(), fn_nfs_rename(), and fn_nfs_unlink().
.SS "char* strtype (fsal_nodetype_t type)"
.PP
strtype: convert an FSAL object type to a string.
.PP
\fBParameters:\fP
.RS 4
\fItype\fP (in fsal_nodetype_t) The type to be printed. 
.RE
.PP
\fBReturns:\fP
.RS 4
The name (char *) for this FSAL object type. 
.RE
.PP

.PP
Definition at line 754 of file cmd_tools.c.
.PP
Referenced by print_fsal_attributes().
.SS "char* time2str (time_t time_in, char * str_out)"
.PP
Definition at line 501 of file cmd_tools.c.
.PP
References Localtime_r(), and TIME_STRLEN.
.PP
Referenced by print_item_line(), and print_nfsitem_line().
.SS "struct timeval time_diff (struct timeval time_from, struct timeval time_to)"
.PP
Definition at line 1095 of file cmd_tools.c.
.PP
References time_diff().
.PP
Referenced by fn_Cache_inode_read(), fn_Cache_inode_write(), fn_fsal_read(), fn_fsal_write(), shellcmd_time(), time_diff(), and util_timer().
.SH "Author"
.PP 
Generated automatically by Doxygen for ganeshell from the source code.
