.TH "commands_NFS_remote.c" 3 "31 Mar 2009" "Version 0.1" "ganeshell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
commands_NFS_remote.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/clnt.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'commands.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'Getopt.h'\fP
.br
\fC#include 'cmd_nfstools.h'\fP
.br
\fC#include 'cmd_tools.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include <unistd.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <pwd.h>\fP
.br
\fC#include <ctype.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBshell_fh3__\fP"
.br
.ti -1c
.RI "struct \fBprog_vers_def__\fP"
.br
.ti -1c
.RI "struct \fBprog_vers_client_def__\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMAXIT\fP   10"
.br
.ti -1c
.RI "#define \fBMAXRETRY\fP   3"
.br
.ti -1c
.RI "#define \fBMAX_GRPS\fP   128"
.br
.ti -1c
.RI "#define \fBNFS_READDIR_SIZE\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_GRPS\fP   128"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBshell_fh3__\fP \fBshell_fh3_t\fP"
.br
.ti -1c
.RI "typedef struct \fBprog_vers_def__\fP \fBprog_vers_def_t\fP"
.br
.ti -1c
.RI "typedef struct \fBprog_vers_client_def__\fP \fBprog_vers_client_def_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "CLIENT * \fBgetCLIENT\fP (char *name)"
.br
.ti -1c
.RI "int \fBsetCLIENT\fP (char *name, CLIENT *clnt)"
.br
.ti -1c
.RI "char * \fBgetHostname\fP (char *name)"
.br
.ti -1c
.RI "int \fBsetHostname\fP (char *name, char *hostname)"
.br
.ti -1c
.RI "char * \fBgetProto\fP (char *name)"
.br
.ti -1c
.RI "int \fBsetProto\fP (char *name, char *proto)"
.br
.ti -1c
.RI "int \fBgetPort\fP (char *name)"
.br
.ti -1c
.RI "int \fBsetPort\fP (char *name, int port)"
.br
.ti -1c
.RI "int \fBrpc_init\fP (char *hostname, char *name, char *proto, int port, FILE *output)"
.br
.ti -1c
.RI "int \fBrpc_reinit\fP (char *name, FILE *output)"
.br
.ti -1c
.RI "int \fBtry_rpc_reinit\fP (char *name, int error, FILE *output)"
.br
.ti -1c
.RI "int \fBswitch_result\fP (int result, int i, char *name, char *func_name, char *func_called_name, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_rpc_init\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "void \fBnfs_remote_layer_SetLogLevel\fP (int log_lvl)"
.br
.ti -1c
.RI "int \fBfn_MNT1_remote_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_MNT3_remote_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_NFS2_remote_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_NFS3_remote_command\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_solvepath\fP (\fBshell_fh3_t\fP *p_mounted_path_hdl, char *io_global_path, int size_global_path, char *i_spec_path, \fBshell_fh3_t\fP *p_current_hdl, \fBshell_fh3_t\fP *pnew_hdl, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_getattr\fP (\fBshell_fh3_t\fP *p_hdl, fattr3 *attrs, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_access\fP (\fBshell_fh3_t\fP *p_hdl, nfs3_uint32 *access_mask, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_readlink\fP (\fBshell_fh3_t\fP *p_hdl, char *linkcontent, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_readdirplus\fP (\fBshell_fh3_t\fP *p_dir_hdl, cookie3 cookie, cookieverf3 *p_cookieverf, dirlistplus3 *dirlist, nfs_res_t **to_be_freed, FILE *output)"
.br
.ti -1c
.RI "void \fBnfs_remote_readdirplus_free\fP (nfs_res_t *to_free)"
.br
.ti -1c
.RI "int \fBnfs_remote_readdir\fP (\fBshell_fh3_t\fP *p_dir_hdl, cookie3 cookie, cookieverf3 *p_cookieverf, dirlist3 *dirlist, nfs_res_t **to_be_freed, FILE *output)"
.br
.ti -1c
.RI "void \fBnfs_remote_readdir_free\fP (nfs_res_t *to_free)"
.br
.ti -1c
.RI "int \fBnfs_remote_create\fP (\fBshell_fh3_t\fP *p_dir_hdl, char *obj_name, mode_t posix_mode, \fBshell_fh3_t\fP *p_obj_hdl, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_mkdir\fP (\fBshell_fh3_t\fP *p_dir_hdl, char *obj_name, mode_t posix_mode, \fBshell_fh3_t\fP *p_obj_hdl, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_rmdir\fP (\fBshell_fh3_t\fP *p_dir_hdl, char *obj_name, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_remove\fP (\fBshell_fh3_t\fP *p_dir_hdl, char *obj_name, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_setattr\fP (\fBshell_fh3_t\fP *p_obj_hdl, sattr3 *p_attributes, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_rename\fP (\fBshell_fh3_t\fP *p_src_dir_hdl, char *src_name, \fBshell_fh3_t\fP *p_tgt_dir_hdl, char *tgt_name, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_link\fP (\fBshell_fh3_t\fP *p_file_hdl, \fBshell_fh3_t\fP *p_tgt_dir_hdl, char *tgt_name, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_symlink\fP (\fBshell_fh3_t\fP path_hdl, char *link_name, char *link_content, sattr3 *p_setattr, \fBshell_fh3_t\fP *p_link_hdl, FILE *output)"
.br
.ti -1c
.RI "int \fBnfs_remote_mount\fP (char *str_path, \fBshell_fh3_t\fP *p_mnt_hdl, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_mount\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_umount\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_pwd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_ls\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_cd\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_create\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_mkdir\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_unlink\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_setattr\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_rename\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_hardlink\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_ln\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_stat\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_su\fP (int argc, char **argv, FILE *output)"
.br
.ti -1c
.RI "int \fBfn_nfs_remote_id\fP (int argc, char **argv, FILE *output)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "nfs_parameter_t \fBnfs_param\fP"
.br
.ti -1c
.RI "struct passwd * \fBcurrent_pw\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define MAX_GRPS   128"
.PP
.SS "#define MAX_GRPS   128"
.PP
.SS "#define MAXIT   10"
.PP
Definition at line 121 of file commands_NFS_remote.c.
.SS "#define MAXRETRY   3"
.PP
Definition at line 122 of file commands_NFS_remote.c.
.SS "#define NFS_READDIR_SIZE   10"
.PP
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBprog_vers_client_def__\fP  \fBprog_vers_client_def_t\fP"
.PP
.SS "typedef struct \fBprog_vers_def__\fP  \fBprog_vers_def_t\fP"
.PP
.SS "typedef struct \fBshell_fh3__\fP  \fBshell_fh3_t\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "int fn_MNT1_remote_command (int argc, char ** argv, FILE * output)"
.PP
process MNT1 protocol's command. 
.PP
Definition at line 681 of file commands_NFS_remote.c.
.SS "int fn_MNT3_remote_command (int argc, char ** argv, FILE * output)"
.PP
process MNT3 protocol's command. 
.PP
Definition at line 763 of file commands_NFS_remote.c.
.SS "int fn_NFS2_remote_command (int argc, char ** argv, FILE * output)"
.PP
process NFS2 protocol's command. 
.PP
Definition at line 845 of file commands_NFS_remote.c.
.SS "int fn_NFS3_remote_command (int argc, char ** argv, FILE * output)"
.PP
process NFS3 protocol's command. 
.PP
Definition at line 928 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_cd (int argc, char ** argv, FILE * output)"
.PP
change current path 
.PP
Definition at line 2472 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_create (int argc, char ** argv, FILE * output)"
.PP
create a file 
.PP
Definition at line 2548 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_hardlink (int argc, char ** argv, FILE * output)"
.PP
proceed a hardlink command. 
.PP
Definition at line 3132 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_id (int argc, char ** argv, FILE * output)"
.PP
Definition at line 3621 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_ln (int argc, char ** argv, FILE * output)"
.PP
proceed an ln command. 
.PP
Definition at line 3254 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_ls (int argc, char ** argv, FILE * output)"
.PP
proceed an ls command using NFS protocol NFS 
.PP
Definition at line 2144 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_mkdir (int argc, char ** argv, FILE * output)"
.PP
create a directory 
.PP
Definition at line 2657 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_mount (int argc, char ** argv, FILE * output)"
.PP
mount a path to browse it. 
.PP
Definition at line 2000 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_pwd (int argc, char ** argv, FILE * output)"
.PP
prints current path 
.PP
Definition at line 2122 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_rename (int argc, char ** argv, FILE * output)"
.PP
proceed a rename command. 
.PP
Definition at line 3006 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_setattr (int argc, char ** argv, FILE * output)"
.PP
setattr 
.PP
Definition at line 2891 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_stat (int argc, char ** argv, FILE * output)"
.PP
proceed an ls command using NFS protocol NFS 
.PP
Definition at line 3384 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_su (int argc, char ** argv, FILE * output)"
.PP
change thread credentials. 
.PP
Definition at line 3534 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_umount (int argc, char ** argv, FILE * output)"
.PP
umount a mounted path 
.PP
Definition at line 2046 of file commands_NFS_remote.c.
.SS "int fn_nfs_remote_unlink (int argc, char ** argv, FILE * output)"
.PP
unlink a file 
.PP
Definition at line 2769 of file commands_NFS_remote.c.
.SS "int fn_rpc_init (int argc, char ** argv, FILE * output)"
.PP
fn_rpc_init 
.PP
Definition at line 594 of file commands_NFS_remote.c.
.SS "CLIENT* getCLIENT (char * name)"
.PP
getCLIENT 
.PP
Definition at line 221 of file commands_NFS_remote.c.
.SS "char* getHostname (char * name)"
.PP
getHostname 
.PP
Definition at line 255 of file commands_NFS_remote.c.
.SS "int getPort (char * name)"
.PP
getPort 
.PP
Definition at line 323 of file commands_NFS_remote.c.
.SS "char* getProto (char * name)"
.PP
getProto 
.PP
Definition at line 289 of file commands_NFS_remote.c.
.SS "int nfs_remote_access (\fBshell_fh3_t\fP * p_hdl, nfs3_uint32 * access_mask, FILE * output)"
.PP
nfs_remote_access 
.PP
Definition at line 1224 of file commands_NFS_remote.c.
.SS "int nfs_remote_create (\fBshell_fh3_t\fP * p_dir_hdl, char * obj_name, mode_t posix_mode, \fBshell_fh3_t\fP * p_obj_hdl, FILE * output)"
.PP
nfs_remote_create 
.PP
Definition at line 1472 of file commands_NFS_remote.c.
.SS "int nfs_remote_getattr (\fBshell_fh3_t\fP * p_hdl, fattr3 * attrs, FILE * output)"
.PP
nfs_remote_getattr 
.PP
Definition at line 1174 of file commands_NFS_remote.c.
.SS "void nfs_remote_layer_SetLogLevel (int log_lvl)"
.PP
Definition at line 672 of file commands_NFS_remote.c.
.SS "int nfs_remote_link (\fBshell_fh3_t\fP * p_file_hdl, \fBshell_fh3_t\fP * p_tgt_dir_hdl, char * tgt_name, FILE * output)"
.PP
nfs_remote_link 
.PP
Definition at line 1820 of file commands_NFS_remote.c.
.SS "int nfs_remote_mkdir (\fBshell_fh3_t\fP * p_dir_hdl, char * obj_name, mode_t posix_mode, \fBshell_fh3_t\fP * p_obj_hdl, FILE * output)"
.PP
nfs_remote_mkdir 
.PP
Definition at line 1546 of file commands_NFS_remote.c.
.SS "int nfs_remote_mount (char * str_path, \fBshell_fh3_t\fP * p_mnt_hdl, FILE * output)"
.PP
nfs_remote_mount 
.PP
Definition at line 1937 of file commands_NFS_remote.c.
.SS "int nfs_remote_readdir (\fBshell_fh3_t\fP * p_dir_hdl, cookie3 cookie, cookieverf3 * p_cookieverf, dirlist3 * dirlist, nfs_res_t ** to_be_freed, FILE * output)"
.PP
nfs_remote_readdir 
.PP
Definition at line 1400 of file commands_NFS_remote.c.
.SS "void nfs_remote_readdir_free (nfs_res_t * to_free)"
.PP
nfs_remote_readdir_free 
.PP
Definition at line 1462 of file commands_NFS_remote.c.
.SS "int nfs_remote_readdirplus (\fBshell_fh3_t\fP * p_dir_hdl, cookie3 cookie, cookieverf3 * p_cookieverf, dirlistplus3 * dirlist, nfs_res_t ** to_be_freed, FILE * output)"
.PP
nfs_remote_readdirplus 
.PP
Definition at line 1327 of file commands_NFS_remote.c.
.SS "void nfs_remote_readdirplus_free (nfs_res_t * to_free)"
.PP
nfs_remote_readdirplus_free 
.PP
Definition at line 1390 of file commands_NFS_remote.c.
.SS "int nfs_remote_readlink (\fBshell_fh3_t\fP * p_hdl, char * linkcontent, FILE * output)"
.PP
nfs_remote_readlink 
.PP
Definition at line 1276 of file commands_NFS_remote.c.
.SS "int nfs_remote_remove (\fBshell_fh3_t\fP * p_dir_hdl, char * obj_name, FILE * output)"
.PP
nfs_remote_remove 
.PP
Definition at line 1668 of file commands_NFS_remote.c.
.SS "int nfs_remote_rename (\fBshell_fh3_t\fP * p_src_dir_hdl, char * src_name, \fBshell_fh3_t\fP * p_tgt_dir_hdl, char * tgt_name, FILE * output)"
.PP
nfs_remote_rename 
.PP
Definition at line 1767 of file commands_NFS_remote.c.
.SS "int nfs_remote_rmdir (\fBshell_fh3_t\fP * p_dir_hdl, char * obj_name, FILE * output)"
.PP
nfs_remote_rmdir 
.PP
Definition at line 1619 of file commands_NFS_remote.c.
.SS "int nfs_remote_setattr (\fBshell_fh3_t\fP * p_obj_hdl, sattr3 * p_attributes, FILE * output)"
.PP
nfs_remote_setattr 
.PP
Definition at line 1717 of file commands_NFS_remote.c.
.SS "int nfs_remote_solvepath (\fBshell_fh3_t\fP * p_mounted_path_hdl, char * io_global_path, int size_global_path, char * i_spec_path, \fBshell_fh3_t\fP * p_current_hdl, \fBshell_fh3_t\fP * pnew_hdl, FILE * output)"
.PP
Definition at line 1016 of file commands_NFS_remote.c.
.SS "int nfs_remote_symlink (\fBshell_fh3_t\fP path_hdl, char * link_name, char * link_content, sattr3 * p_setattr, \fBshell_fh3_t\fP * p_link_hdl, FILE * output)"
.PP
nfs_remote_symlink 
.PP
Definition at line 1871 of file commands_NFS_remote.c.
.SS "int rpc_init (char * hostname, char * name, char * proto, int port, FILE * output)"
.PP
rpc_init 
.PP
Definition at line 374 of file commands_NFS_remote.c.
.SS "int rpc_reinit (char * name, FILE * output)"
.PP
rpc_reinit 
.PP
Definition at line 503 of file commands_NFS_remote.c.
.SS "int setCLIENT (char * name, CLIENT * clnt)"
.PP
setCLIENT 
.PP
Definition at line 237 of file commands_NFS_remote.c.
.SS "int setHostname (char * name, char * hostname)"
.PP
setHostname 
.PP
Definition at line 271 of file commands_NFS_remote.c.
.SS "int setPort (char * name, int port)"
.PP
setPort 
.PP
Definition at line 339 of file commands_NFS_remote.c.
.SS "int setProto (char * name, char * proto)"
.PP
setProto 
.PP
Definition at line 305 of file commands_NFS_remote.c.
.SS "int switch_result (int result, int i, char * name, char * func_name, char * func_called_name, FILE * output)"
.PP
Definition at line 554 of file commands_NFS_remote.c.
.SS "int try_rpc_reinit (char * name, int error, FILE * output)"
.PP
try_rpc_reinit 
.PP
Definition at line 536 of file commands_NFS_remote.c.
.SH "Variable Documentation"
.PP 
.SS "struct passwd* \fBcurrent_pw\fP"
.PP
Definition at line 356 of file commands_NFS_remote.c.
.SS "nfs_parameter_t \fBnfs_param\fP"
.PP
Definition at line 135 of file commands_NFS_remote.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for ganeshell from the source code.
