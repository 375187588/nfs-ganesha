<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.7.1">
  <compounddef id="shell_8h" kind="file">
    <compoundname>shell.h</compoundname>
    <includes refid="shell__types_8h" local="yes">shell_types.h</includes>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <includedby refid="shell_8c" local="yes">shell.c</includedby>
    <incdepgraph>
      <node id="263">
        <label>shell.h</label>
        <link refid="shell.h"/>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>shell_types.h</label>
        <link refid="shell__types_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="267">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="268">
        <label>shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="266">
        <label>shell.h</label>
        <link refid="shell.h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="shell_8h_109a3b394b8602092d58347b791158062" prot="public" static="no">
        <name>MAX_LINE_LEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="41" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_129b7451465deac204c5f7cb1f9c6e1fc" prot="public" static="no">
        <name>MAX_ARGS</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="42" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1e7ec926bd777cab05e33c25429d2f68e" prot="public" static="no">
        <name>SHELL_SUCCESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="49" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_17664f5e184e9b41ac92e033f7b8d885d" prot="public" static="no">
        <name>SHELL_ERROR</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="50" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1dd182c422eb915de7f9c9913f405b55b" prot="public" static="no">
        <name>SHELL_NOT_FOUND</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="51" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1e57f36c670720db06c26bf88a9f17a5b" prot="public" static="no">
        <name>SHELL_SYNTAX_ERROR</name>
        <initializer>-22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="52" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="shell_8h_11e3eb6c0416edacc075dcb2c77cba33d" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* shell_special_vars[]</definition>
        <argsstring>[]</argsstring>
        <name>shell_special_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of the shell special variables </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="167" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shell_8h_1c0d310f037d01a4a5b18a3d1cf98dd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Init</definition>
        <argsstring>(int verbose, char *input_file, char *prompt, int shell_index)</argsstring>
        <name>shell_Init</name>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>input_file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shell_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the shell. The command line for the shell is given as parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to read from (NULL if stdin). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="66" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="407" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1271d58bff569ae83aaca4c6545537c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Launch</definition>
        <argsstring>()</argsstring>
        <name>shell_Launch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Launch the interpreter.</para><para>Run the interpreter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="71" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="535" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1e15db0838c4622e178a261efb83bf2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_BarrierInit</definition>
        <argsstring>(int nb_threads)</argsstring>
        <name>shell_BarrierInit</name>
        <param>
          <type>int</type>
          <declname>nb_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the barrier for shell synchronization routines. The number of threads to wait for is given as parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="78" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="259" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_14e27122a4ac0f624fd479497156da7fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_ParseLine</definition>
        <argsstring>(char *in_out_line, char **out_arglist, int *p_argcount)</argsstring>
        <name>shell_ParseLine</name>
        <param>
          <type>char *</type>
          <declname>in_out_line</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_arglist</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>p_argcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_ParseLine: Extract an arglist from a command line.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_out_line</parametername>
</parameternamelist>
<parameterdescription>
<para>The command line (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arglist</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_argcount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="97" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="757" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_19bb7a4a254006386f1135857f11d01e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_CleanArgs</definition>
        <argsstring>(int argc, char **in_out_argv, int *in_allocated)</argsstring>
        <name>shell_CleanArgs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>in_out_argv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>in_allocated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_CleanArgs: Free allocated arguments.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors.</para></simplesect>
shell_CleanArgs: Free allocated arguments.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="111" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1152" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_108079380ae3f2e90dd30c836469eb476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SolveArgs</definition>
        <argsstring>(int argc, char **in_out_argv, int *out_allocated)</argsstring>
        <name>shell_SolveArgs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>in_out_argv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_allocated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SolveArgs: Interprets arguments if they are vars or commands.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="125" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="866" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_110dd9a60b110b6c798b902af2378e212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Execute</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shell_Execute</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_Execute: Execute a command.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments of this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments for this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream of this command.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The returned status of this command.</para></simplesect>
shell_Execute: Commands dispatcher.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments of this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments for this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream of this command.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The returned status of this command. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="139" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1185" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_118ca6567e360fb3becf28c1e64b8c617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_PrintError</definition>
        <argsstring>(shell_state_t *context, char *error_msg)</argsstring>
        <name>shell_PrintError</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>error_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_PrintError: Prints an error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="151" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1319" bodyend="1330"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1b3fcf0204b77c7bf2d1464eaff1a1b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_PrintTrace</definition>
        <argsstring>(shell_state_t *context, char *msg)</argsstring>
        <name>shell_PrintTrace</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_PrintTrace: Prints a verbose trace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="157" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1337" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1451b3514751a63ed4efd5d209e2e268b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetLayer</definition>
        <argsstring>(shell_state_t *context, char *layer_name)</argsstring>
        <name>shell_SetLayer</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>layer_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetLayer: Set the current active layer. <simplesect kind="return"><para>0 if OK. else, an error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="176" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1368" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_187cc52ddf5ce6b0b8b6ea2655fe846cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref> *</type>
        <definition>layer_def_t* shell_GetLayer</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetLayer</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetLayer: Retrieves the current active layer (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="183" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1428" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1203bdb77c7bc5de688f3eabc1b70c16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetStatus</definition>
        <argsstring>(shell_state_t *context, int returned_status)</argsstring>
        <name>shell_SetStatus</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>returned_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetStatus Set the special variables $? and $STATUS. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="190" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1440" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1bad4a8ae0b0a2e36b9285c330a6fb973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetStatus</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetStatus</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetStatus Get the special variables $? or $STATUS (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="197" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1478" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1fd975f5d6931ed03c6a3f65c6c2a0a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetVerbose</definition>
        <argsstring>(shell_state_t *context, char *str_verbose)</argsstring>
        <name>shell_SetVerbose</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetVerbose Set the special variable $VERBOSE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="204" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1488" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_120edf96684135c0d368f0b2c868e2271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetVerbose</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetVerbose</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetVerbose Get the special variable $VERBOSE (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="211" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1552" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_19566cc8471ed064191fab46360448790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetDbgLvl</definition>
        <argsstring>(shell_state_t *context, char *str_debug_level)</argsstring>
        <name>shell_SetDbgLvl</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_debug_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetDbgLvl Set the special variables $DEBUG_LEVEL and $DBG_LVL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="218" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1562" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1235034ca83e42ceb0f655b647ade0a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetDbgLvl</definition>
        <argsstring>()</argsstring>
        <name>shell_GetDbgLvl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetDbgLvl Get the special variable $DEBUG_LEVEL and $DBG_LVL (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_19b53e69fbe0514fd49aa9f8da1a2a331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* shell_GetInputStream</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetInputStream</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetInputStream Get the input stream for reading commands (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="232" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1750" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_19b5002423a565157f01c09748f87cf75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetInput</definition>
        <argsstring>(shell_state_t *context, char *file_name)</argsstring>
        <name>shell_SetInput</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetInput Set the input for reading commands and set the value of $INPUT and $INTERACTIVE.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>a script file or NULL for reading from stdin. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="244" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1635" bodyend="1742"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1baa1753ce1fbddda297f2c4234f90082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetPrompt</definition>
        <argsstring>(shell_state_t *context, char *str_prompt)</argsstring>
        <name>shell_SetPrompt</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_prompt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetPrompt Set the special variable $PROMPT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="252" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1765" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_144bbab19233a13358d0ea0ecc8250575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* shell_GetPrompt</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetPrompt</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetPrompt Get the special variable $PROMPT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="259" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1786" bodyend="1789"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_174327c02354c2791d81e49b207b82882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetShellId</definition>
        <argsstring>(shell_state_t *context, int shell_index)</argsstring>
        <name>shell_SetShellId</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shell_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetShellId Set the special variable $SHELLID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="266" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1797" bodyend="1815"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_145ff35a9de18915830a83de3bd62f2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetLine</definition>
        <argsstring>(shell_state_t *context, int lineno)</argsstring>
        <name>shell_SetLine</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetLine Set the special variable $LINE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="273" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1823" bodyend="1844"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_170c732e9d24a5285ce46c7812e213bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetLine</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetLine</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetLine Get the special variable $LINE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="280" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1852" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1899a09f6793b7f4710e8e99a60a8bc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_help</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_help</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="292" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1864" bodyend="1937"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1ad4894a22c4fb42b1c283550b645a08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_if</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_if</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="299" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1941" bodyend="2030"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_165d6f4320066d4ebbd24d495c3197db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_interactive</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_interactive</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="306" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2035" bodyend="2060"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_12c49685b957c7ac4d00a3ec0f0054225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_set</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_set</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="313" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2065" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_115fa32a0d835185c2c4a70a37ba0c700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_unset</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_unset</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="320" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2177" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_110a8c42cadb842e426fea11044c8ca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_print</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_print</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="327" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2241" bodyend="2258"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_11ad9c62ea92ab2d02f5f2eb5d5c1fcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_varlist</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_varlist</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="334" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2263" bodyend="2288"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1aa214b88c7f47effc68fad8d6d833305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_time</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_time</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="341" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2293" bodyend="2336"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1d21971f2f359ed0dab17c56affe4666e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_quit</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_quit</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="348" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2340" bodyend="2364"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1c90cbb87117d5e2de6759b6689d93d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_barrier</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_barrier</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="355" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2368" bodyend="2401"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1fd3bcf4814bcca57535f99fb0598f3af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>static command_def_t __attribute__</definition>
        <argsstring>((__unused__)) shell_commands[]</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__unused__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of the shell commands </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="376"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Internal routines for the shell. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2006/02/23 07:42:53 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.7 </para></simplesect>
<simplesect kind="rcs"><title>Log</title><para><ref refid="shell_8h" kindref="compound">shell.h</ref>,v </para></simplesect>
Revision 1.7 2006/02/23 07:42:53 leibovic Adding -n option to shell.</para><para>Revision 1.6 2005/07/26 12:54:47 leibovic Multi-thread shell with synchronisation routines.</para><para>Revision 1.5 2005/07/25 12:50:46 leibovic Adding thr_create and thr_join commands.</para><para>Revision 1.4 2005/05/27 12:01:48 leibovic Adding write command.</para><para>Revision 1.3 2005/05/11 15:53:37 leibovic Adding time function.</para><para>Revision 1.2 2005/05/09 14:54:59 leibovic Adding if.</para><para>Revision 1.1 2005/05/09 12:23:55 leibovic Version 2 of ganeshell. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifndef<sp/>_SHELL_H</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SHELL_H</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell__types_8h" kindref="compound" tooltip="Internal routines for the shell.">shell_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="shell_8h_109a3b394b8602092d58347b791158062" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LINE_LEN<sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight></codeline>
<codeline lineno="42" refid="shell_8h_129b7451465deac204c5f7cb1f9c6e1fc" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX_ARGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal<sp/>error<sp/>codes.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="shell_8h_1e7ec926bd777cab05e33c25429d2f68e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHELL_SUCCESS<sp/>0</highlight></codeline>
<codeline lineno="50" refid="shell_8h_17664f5e184e9b41ac92e033f7b8d885d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_ERROR<sp/><sp/>-1</highlight></codeline>
<codeline lineno="51" refid="shell_8h_1dd182c422eb915de7f9c9913f405b55b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_NOT_FOUND<sp/>-2</highlight></codeline>
<codeline lineno="52" refid="shell_8h_1e57f36c670720db06c26bf88a9f17a5b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_SYNTAX_ERROR<sp/>-22</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Main<sp/>shell<sp/>routines.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1c0d310f037d01a4a5b18a3d1cf98dd60" kindref="member">shell_Init</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>input_file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>prompt,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shell_index<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1271d58bff569ae83aaca4c6545537c82" kindref="member">shell_Launch</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1e15db0838c4622e178a261efb83bf2b1" kindref="member">shell_BarrierInit</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_threads<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parsing<sp/>and<sp/>execution<sp/>routines.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_14e27122a4ac0f624fd479497156da7fe" kindref="member">shell_ParseLine</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>in_out_line,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>out_arglist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>p_argcount<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_19bb7a4a254006386f1135857f11d01e4" kindref="member">shell_CleanArgs</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>in_out_argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>in_allocated<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_108079380ae3f2e90dd30c836469eb476" kindref="member">shell_SolveArgs</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>in_out_argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>out_allocated<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_110dd9a60b110b6c798b902af2378e212" kindref="member">shell_Execute</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv,<sp/>FILE<sp/>*<sp/>output<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>ouput<sp/>routines.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_118ca6567e360fb3becf28c1e64b8c617" kindref="member">shell_PrintError</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>error_msg<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1b3fcf0204b77c7bf2d1464eaff1a1b6f" kindref="member">shell_PrintTrace</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>state<sp/>management<sp/>routines.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><ref refid="shell_8c_11e3eb6c0416edacc075dcb2c77cba33d" kindref="member">shell_special_vars</ref>[]<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1451b3514751a63ed4efd5d209e2e268b" kindref="member">shell_SetLayer</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>layer_name<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref><sp/>*<sp/><ref refid="shell_8c_187cc52ddf5ce6b0b8b6ea2655fe846cf" kindref="member">shell_GetLayer</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1203bdb77c7bc5de688f3eabc1b70c16a" kindref="member">shell_SetStatus</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returned_status<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1bad4a8ae0b0a2e36b9285c330a6fb973" kindref="member">shell_GetStatus</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1fd975f5d6931ed03c6a3f65c6c2a0a2b" kindref="member">shell_SetVerbose</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str_verbose<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_120edf96684135c0d368f0b2c868e2271" kindref="member">shell_GetVerbose</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_19566cc8471ed064191fab46360448790" kindref="member">shell_SetDbgLvl</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str_debug_level<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1e8266753e0ec315e4f060c49f70dfc24" kindref="member">shell_GetDbgLvl</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">FILE<sp/>*<sp/><ref refid="shell_8c_19b53e69fbe0514fd49aa9f8da1a2a331" kindref="member">shell_GetInputStream</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_19b5002423a565157f01c09748f87cf75" kindref="member">shell_SetInput</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file_name<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1baa1753ce1fbddda297f2c4234f90082" kindref="member">shell_SetPrompt</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str_prompt<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="shell_8c_144bbab19233a13358d0ea0ecc8250575" kindref="member">shell_GetPrompt</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_174327c02354c2791d81e49b207b82882" kindref="member">shell_SetShellId</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shell_index<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_145ff35a9de18915830a83de3bd62f2a1" kindref="member">shell_SetLine</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_170c732e9d24a5285ce46c7812e213bd0" kindref="member">shell_GetLine</ref>(<sp/><ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>commands.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1899a09f6793b7f4710e8e99a60a8bc5e" kindref="member">shellcmd_help</ref>(</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ad4894a22c4fb42b1c283550b645a08e" kindref="member">shellcmd_if</ref>(</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_165d6f4320066d4ebbd24d495c3197db3" kindref="member">shellcmd_interactive</ref>(</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_12c49685b957c7ac4d00a3ec0f0054225" kindref="member">shellcmd_set</ref>(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_115fa32a0d835185c2c4a70a37ba0c700" kindref="member">shellcmd_unset</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_110a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>(</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_11ad9c62ea92ab2d02f5f2eb5d5c1fcb6" kindref="member">shellcmd_varlist</ref>(</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1aa214b88c7f47effc68fad8d6d833305" kindref="member">shellcmd_time</ref>(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1d21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1c90cbb87117d5e2de6759b6689d93d81" kindref="member">shellcmd_barrier</ref>(</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/><sp/>__attribute__((<sp/>__unused__<sp/>))<sp/>shell_commands[]={</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;barrier&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1c90cbb87117d5e2de6759b6689d93d81" kindref="member">shellcmd_barrier</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;synchronization<sp/>in<sp/>a<sp/>multi-thread<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;echo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_110a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>one<sp/>or<sp/>more<sp/>arguments&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;exit&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1d21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exit<sp/>this<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1899a09f6793b7f4710e8e99a60a8bc5e" kindref="member">shellcmd_help</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>this<sp/>help&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;if&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1ad4894a22c4fb42b1c283550b645a08e" kindref="member">shellcmd_if</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;conditionnal<sp/>execution&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;interactive&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="shell_8c_165d6f4320066d4ebbd24d495c3197db3" kindref="member">shellcmd_interactive</ref>,<sp/></highlight><highlight class="stringliteral">&quot;close<sp/>script<sp/>file<sp/>and<sp/>start<sp/>interactive<sp/>mode&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_110a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>one<sp/>or<sp/>more<sp/>arguments&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;quit&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1d21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exit<sp/>this<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_12c49685b957c7ac4d00a3ec0f0054225" kindref="member">shellcmd_set</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set<sp/>the<sp/>value<sp/>of<sp/>a<sp/>shell<sp/>variable&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_1aa214b88c7f47effc68fad8d6d833305" kindref="member">shellcmd_time</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;measures<sp/>the<sp/>time<sp/>for<sp/>executing<sp/>a<sp/>command&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;unset&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_115fa32a0d835185c2c4a70a37ba0c700" kindref="member">shellcmd_unset</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;free<sp/>a<sp/>shell<sp/>variable&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;varlist&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="shell_8c_11ad9c62ea92ab2d02f5f2eb5d5c1fcb6" kindref="member">shellcmd_varlist</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>the<sp/>list<sp/>of<sp/>shell<sp/>variables&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>{<ref refid="Getopt_8c_1070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="Getopt_8c_1070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,NULL}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@todo:<sp/>if,<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/shell/shell.h"/>
  </compounddef>
</doxygen>
