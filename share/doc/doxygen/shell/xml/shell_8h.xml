<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="shell_8h" kind="file">
    <compoundname>shell.h</compoundname>
    <includes refid="shell__types_8h" local="yes">shell_types.h</includes>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <includedby refid="shell_8c" local="yes">shell.c</includedby>
    <incdepgraph>
      <node id="263">
        <label>shell.h</label>
        <link refid="shell.h"/>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>shell_types.h</label>
        <link refid="shell__types_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="267">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="268">
        <label>shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="266">
        <label>shell.h</label>
        <link refid="shell.h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="shell_8h_1a09a3b394b8602092d58347b791158062" prot="public" static="no">
        <name>MAX_LINE_LEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="40" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc" prot="public" static="no">
        <name>MAX_ARGS</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="41" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1ae7ec926bd777cab05e33c25429d2f68e" prot="public" static="no">
        <name>SHELL_SUCCESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="47" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1a7664f5e184e9b41ac92e033f7b8d885d" prot="public" static="no">
        <name>SHELL_ERROR</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="48" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1add182c422eb915de7f9c9913f405b55b" prot="public" static="no">
        <name>SHELL_NOT_FOUND</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="49" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shell_8h_1ae57f36c670720db06c26bf88a9f17a5b" prot="public" static="no">
        <name>SHELL_SYNTAX_ERROR</name>
        <initializer>-22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="50" bodyfile="/export/GANESHA/src/shell/shell.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="shell_8h_1a1e3eb6c0416edacc075dcb2c77cba33d" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* shell_special_vars[]</definition>
        <argsstring>[]</argsstring>
        <name>shell_special_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of the shell special variables </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="151" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shell_8h_1ac0d310f037d01a4a5b18a3d1cf98dd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Init</definition>
        <argsstring>(int verbose, char *input_file, char *prompt, int shell_index)</argsstring>
        <name>shell_Init</name>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>input_file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shell_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the shell. The command line for the shell is given as parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to read from (NULL if stdin). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="61" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="353" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a271d58bff569ae83aaca4c6545537c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Launch</definition>
        <argsstring>()</argsstring>
        <name>shell_Launch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Launch the interpreter.</para><para>Run the interpreter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="66" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="471" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1ae15db0838c4622e178a261efb83bf2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_BarrierInit</definition>
        <argsstring>(int nb_threads)</argsstring>
        <name>shell_BarrierInit</name>
        <param>
          <type>int</type>
          <declname>nb_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the barrier for shell synchronization routines. The number of threads to wait for is given as parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="72" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="211" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a4e27122a4ac0f624fd479497156da7fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_ParseLine</definition>
        <argsstring>(char *in_out_line, char **out_arglist, int *p_argcount)</argsstring>
        <name>shell_ParseLine</name>
        <param>
          <type>char *</type>
          <declname>in_out_line</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_arglist</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>p_argcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_ParseLine: Extract an arglist from a command line.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_out_line</parametername>
</parameternamelist>
<parameterdescription>
<para>The command line (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arglist</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_argcount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="89" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="681" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a9bb7a4a254006386f1135857f11d01e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_CleanArgs</definition>
        <argsstring>(int argc, char **in_out_argv, int *in_allocated)</argsstring>
        <name>shell_CleanArgs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>in_out_argv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>in_allocated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_CleanArgs: Free allocated arguments.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors.</para></simplesect>
shell_CleanArgs: Free allocated arguments.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="102" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1062" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a08079380ae3f2e90dd30c836469eb476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SolveArgs</definition>
        <argsstring>(int argc, char **in_out_argv, int *out_allocated)</argsstring>
        <name>shell_SolveArgs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>in_out_argv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_allocated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SolveArgs: Interprets arguments if they are vars or commands.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line tokens. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_out_argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of command line tokens (modified). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_allocated</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which tokens must be freed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no errors. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="115" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="785" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a10dd9a60b110b6c798b902af2378e212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_Execute</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shell_Execute</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_Execute: Execute a command.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments of this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments for this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream of this command.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The returned status of this command.</para></simplesect>
shell_Execute: Commands dispatcher.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments of this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments for this command. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream of this command.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The returned status of this command. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="127" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1093" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a18ca6567e360fb3becf28c1e64b8c617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_PrintError</definition>
        <argsstring>(shell_state_t *context, char *error_msg)</argsstring>
        <name>shell_PrintError</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>error_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_PrintError: Prints an error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="137" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1224" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1ab3fcf0204b77c7bf2d1464eaff1a1b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_PrintTrace</definition>
        <argsstring>(shell_state_t *context, char *msg)</argsstring>
        <name>shell_PrintTrace</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_PrintTrace: Prints a verbose trace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="143" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1238" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a451b3514751a63ed4efd5d209e2e268b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetLayer</definition>
        <argsstring>(shell_state_t *context, char *layer_name)</argsstring>
        <name>shell_SetLayer</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>layer_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetLayer: Set the current active layer. <simplesect kind="return"><para>0 if OK. else, an error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="159" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1263" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a87cc52ddf5ce6b0b8b6ea2655fe846cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref> *</type>
        <definition>layer_def_t* shell_GetLayer</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetLayer</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetLayer: Retrieves the current active layer (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="165" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1319" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a203bdb77c7bc5de688f3eabc1b70c16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetStatus</definition>
        <argsstring>(shell_state_t *context, int returned_status)</argsstring>
        <name>shell_SetStatus</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>returned_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetStatus Set the special variables $? and $STATUS. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="171" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1330" bodyend="1360"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1abad4a8ae0b0a2e36b9285c330a6fb973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetStatus</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetStatus</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetStatus Get the special variables $? or $STATUS (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="177" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1366" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1afd975f5d6931ed03c6a3f65c6c2a0a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetVerbose</definition>
        <argsstring>(shell_state_t *context, char *str_verbose)</argsstring>
        <name>shell_SetVerbose</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetVerbose Set the special variable $VERBOSE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="183" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1375" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a20edf96684135c0d368f0b2c868e2271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetVerbose</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetVerbose</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetVerbose Get the special variable $VERBOSE (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="189" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1431" bodyend="1434"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a9566cc8471ed064191fab46360448790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetDbgLvl</definition>
        <argsstring>(shell_state_t *context, char *str_debug_level)</argsstring>
        <name>shell_SetDbgLvl</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_debug_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetDbgLvl Set the special variables $DEBUG_LEVEL and $DBG_LVL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="195" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1440" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a235034ca83e42ceb0f655b647ade0a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetDbgLvl</definition>
        <argsstring>()</argsstring>
        <name>shell_GetDbgLvl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetDbgLvl Get the special variable $DEBUG_LEVEL and $DBG_LVL (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="201"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a9b53e69fbe0514fd49aa9f8da1a2a331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* shell_GetInputStream</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetInputStream</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetInputStream Get the input stream for reading commands (internal use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="207" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1617" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a9b5002423a565157f01c09748f87cf75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetInput</definition>
        <argsstring>(shell_state_t *context, char *file_name)</argsstring>
        <name>shell_SetInput</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetInput Set the input for reading commands and set the value of $INPUT and $INTERACTIVE.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>a script file or NULL for reading from stdin. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="217" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1508" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1abaa1753ce1fbddda297f2c4234f90082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetPrompt</definition>
        <argsstring>(shell_state_t *context, char *str_prompt)</argsstring>
        <name>shell_SetPrompt</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str_prompt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetPrompt Set the special variable $PROMPT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="223" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1629" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a44bbab19233a13358d0ea0ecc8250575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* shell_GetPrompt</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetPrompt</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetPrompt Get the special variable $PROMPT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="229" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1648" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a74327c02354c2791d81e49b207b82882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetShellId</definition>
        <argsstring>(shell_state_t *context, int shell_index)</argsstring>
        <name>shell_SetShellId</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shell_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetShellId Set the special variable $SHELLID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="235" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1657" bodyend="1675"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a45ff35a9de18915830a83de3bd62f2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_SetLine</definition>
        <argsstring>(shell_state_t *context, int lineno)</argsstring>
        <name>shell_SetLine</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_SetLine Set the special variable $LINE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="241" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1681" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a70c732e9d24a5285ce46c7812e213bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shell_GetLine</definition>
        <argsstring>(shell_state_t *context)</argsstring>
        <name>shell_GetLine</name>
        <param>
          <type><ref refid="structshell__state____" kindref="compound">shell_state_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell_GetLine Get the special variable $LINE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="247" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1708" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a899a09f6793b7f4710e8e99a60a8bc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_help</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_help</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="256" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1717" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1aad4894a22c4fb42b1c283550b645a08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_if</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_if</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="261" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1788" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a65d6f4320066d4ebbd24d495c3197db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_interactive</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_interactive</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="266" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1878" bodyend="1902"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a2c49685b957c7ac4d00a3ec0f0054225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_set</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_set</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="271" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="1904" bodyend="2009"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a15fa32a0d835185c2c4a70a37ba0c700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_unset</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_unset</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="276" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2011" bodyend="2067"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a10a8c42cadb842e426fea11044c8ca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_print</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_print</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="281" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2069" bodyend="2085"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1a1ad9c62ea92ab2d02f5f2eb5d5c1fcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_varlist</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_varlist</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="286" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2087" bodyend="2111"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1aaa214b88c7f47effc68fad8d6d833305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_time</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_time</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="291" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2113" bodyend="2156"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1ad21971f2f359ed0dab17c56affe4666e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_quit</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_quit</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="296" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2158" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1ac90cbb87117d5e2de6759b6689d93d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shellcmd_barrier</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>shellcmd_barrier</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="301" bodyfile="/export/GANESHA/src/shell/shell.c" bodystart="2183" bodyend="2216"/>
      </memberdef>
      <memberdef kind="function" id="shell_8h_1afd3bcf4814bcca57535f99fb0598f3af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>static command_def_t __attribute__</definition>
        <argsstring>((__unused__)) shell_commands[]</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__unused__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of the shell commands </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/shell/shell.h" line="334"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Internal routines for the shell. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2006/02/23 07:42:53 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.7 </para></simplesect>
<simplesect kind="rcs"><title>Log</title><para><ref refid="shell_8h" kindref="compound">shell.h</ref>,v </para></simplesect>
Revision 1.7 2006/02/23 07:42:53 leibovic Adding -n option to shell.</para><para>Revision 1.6 2005/07/26 12:54:47 leibovic Multi-thread shell with synchronisation routines.</para><para>Revision 1.5 2005/07/25 12:50:46 leibovic Adding thr_create and thr_join commands.</para><para>Revision 1.4 2005/05/27 12:01:48 leibovic Adding write command.</para><para>Revision 1.3 2005/05/11 15:53:37 leibovic Adding time function.</para><para>Revision 1.2 2005/05/09 14:54:59 leibovic Adding if.</para><para>Revision 1.1 2005/05/09 12:23:55 leibovic Version 2 of ganeshell. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifndef<sp/>_SHELL_H</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SHELL_H</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell__types_8h" kindref="compound" tooltip="Internal routines for the shell.">shell_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="shell_8h_1a09a3b394b8602092d58347b791158062" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LINE_LEN<sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight></codeline>
<codeline lineno="41" refid="shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX_ARGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal<sp/>error<sp/>codes.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="shell_8h_1ae7ec926bd777cab05e33c25429d2f68e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHELL_SUCCESS<sp/>0</highlight></codeline>
<codeline lineno="48" refid="shell_8h_1a7664f5e184e9b41ac92e033f7b8d885d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_ERROR<sp/><sp/>-1</highlight></codeline>
<codeline lineno="49" refid="shell_8h_1add182c422eb915de7f9c9913f405b55b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_NOT_FOUND<sp/>-2</highlight></codeline>
<codeline lineno="50" refid="shell_8h_1ae57f36c670720db06c26bf88a9f17a5b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHELL_SYNTAX_ERROR<sp/>-22</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Main<sp/>shell<sp/>routines.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ac0d310f037d01a4a5b18a3d1cf98dd60" kindref="member">shell_Init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a0b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input_file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shell_index);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a271d58bff569ae83aaca4c6545537c82" kindref="member">shell_Launch</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ae15db0838c4622e178a261efb83bf2b1" kindref="member">shell_BarrierInit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_threads);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parsing<sp/>and<sp/>execution<sp/>routines.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a4e27122a4ac0f624fd479497156da7fe" kindref="member">shell_ParseLine</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in_out_line,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_arglist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p_argcount);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a9bb7a4a254006386f1135857f11d01e4" kindref="member">shell_CleanArgs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in_out_argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*in_allocated);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a08079380ae3f2e90dd30c836469eb476" kindref="member">shell_SolveArgs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in_out_argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_allocated);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a10dd9a60b110b6c798b902af2378e212" kindref="member">shell_Execute</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/>FILE<sp/>*<sp/>output);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>ouput<sp/>routines.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a18ca6567e360fb3becf28c1e64b8c617" kindref="member">shell_PrintError</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error_msg);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ab3fcf0204b77c7bf2d1464eaff1a1b6f" kindref="member">shell_PrintTrace</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>state<sp/>management<sp/>routines.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="shell_8c_1a1e3eb6c0416edacc075dcb2c77cba33d" kindref="member">shell_special_vars</ref>[];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a451b3514751a63ed4efd5d209e2e268b" kindref="member">shell_SetLayer</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*layer_name);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref><sp/>*<ref refid="shell_8c_1a87cc52ddf5ce6b0b8b6ea2655fe846cf" kindref="member">shell_GetLayer</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a203bdb77c7bc5de688f3eabc1b70c16a" kindref="member">shell_SetStatus</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returned_status);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1abad4a8ae0b0a2e36b9285c330a6fb973" kindref="member">shell_GetStatus</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1afd975f5d6931ed03c6a3f65c6c2a0a2b" kindref="member">shell_SetVerbose</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_verbose);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a20edf96684135c0d368f0b2c868e2271" kindref="member">shell_GetVerbose</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a9566cc8471ed064191fab46360448790" kindref="member">shell_SetDbgLvl</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_debug_level);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ae8266753e0ec315e4f060c49f70dfc24" kindref="member">shell_GetDbgLvl</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">FILE<sp/>*<ref refid="shell_8c_1a9b53e69fbe0514fd49aa9f8da1a2a331" kindref="member">shell_GetInputStream</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a9b5002423a565157f01c09748f87cf75" kindref="member">shell_SetInput</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1abaa1753ce1fbddda297f2c4234f90082" kindref="member">shell_SetPrompt</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_prompt);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="shell_8c_1a44bbab19233a13358d0ea0ecc8250575" kindref="member">shell_GetPrompt</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a74327c02354c2791d81e49b207b82882" kindref="member">shell_SetShellId</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shell_index);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a45ff35a9de18915830a83de3bd62f2a1" kindref="member">shell_SetLine</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a70c732e9d24a5285ce46c7812e213bd0" kindref="member">shell_GetLine</ref>(<ref refid="structshell__state____" kindref="compound">shell_state_t</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shell<sp/>commands.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*-----------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a899a09f6793b7f4710e8e99a60a8bc5e" kindref="member">shellcmd_help</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1aad4894a22c4fb42b1c283550b645a08e" kindref="member">shellcmd_if</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a65d6f4320066d4ebbd24d495c3197db3" kindref="member">shellcmd_interactive</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a2c49685b957c7ac4d00a3ec0f0054225" kindref="member">shellcmd_set</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a15fa32a0d835185c2c4a70a37ba0c700" kindref="member">shellcmd_unset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a10a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1a1ad9c62ea92ab2d02f5f2eb5d5c1fcb6" kindref="member">shellcmd_varlist</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1aaa214b88c7f47effc68fad8d6d833305" kindref="member">shellcmd_time</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ad21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shell_8c_1ac90cbb87117d5e2de6759b6689d93d81" kindref="member">shellcmd_barrier</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/>__attribute__<sp/>((__unused__))<sp/>shell_commands[]<sp/>=</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;barrier&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1ac90cbb87117d5e2de6759b6689d93d81" kindref="member">shellcmd_barrier</ref>,<sp/></highlight><highlight class="stringliteral">&quot;synchronization<sp/>in<sp/>a<sp/>multi-thread<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;echo&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a10a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>,<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>one<sp/>or<sp/>more<sp/>arguments&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;exit&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1ad21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exit<sp/>this<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a899a09f6793b7f4710e8e99a60a8bc5e" kindref="member">shellcmd_help</ref>,<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>this<sp/>help&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;if&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1aad4894a22c4fb42b1c283550b645a08e" kindref="member">shellcmd_if</ref>,<sp/></highlight><highlight class="stringliteral">&quot;conditionnal<sp/>execution&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;interactive&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a65d6f4320066d4ebbd24d495c3197db3" kindref="member">shellcmd_interactive</ref>,<sp/></highlight><highlight class="stringliteral">&quot;close<sp/>script<sp/>file<sp/>and<sp/>start<sp/>interactive<sp/>mode&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a10a8c42cadb842e426fea11044c8ca09" kindref="member">shellcmd_print</ref>,<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>one<sp/>or<sp/>more<sp/>arguments&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;quit&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1ad21971f2f359ed0dab17c56affe4666e" kindref="member">shellcmd_quit</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exit<sp/>this<sp/>shell&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a2c49685b957c7ac4d00a3ec0f0054225" kindref="member">shellcmd_set</ref>,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>the<sp/>value<sp/>of<sp/>a<sp/>shell<sp/>variable&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1aaa214b88c7f47effc68fad8d6d833305" kindref="member">shellcmd_time</ref>,<sp/></highlight><highlight class="stringliteral">&quot;measures<sp/>the<sp/>time<sp/>for<sp/>executing<sp/>a<sp/>command&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unset&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a15fa32a0d835185c2c4a70a37ba0c700" kindref="member">shellcmd_unset</ref>,<sp/></highlight><highlight class="stringliteral">&quot;free<sp/>a<sp/>shell<sp/>variable&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;varlist&quot;</highlight><highlight class="normal">,<sp/><ref refid="shell_8c_1a1ad9c62ea92ab2d02f5f2eb5d5c1fcb6" kindref="member">shellcmd_varlist</ref>,<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>the<sp/>list<sp/>of<sp/>shell<sp/>variables&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="Getopt_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="Getopt_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>NULL}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@todo:<sp/>if,<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/shell/shell.h"/>
  </compounddef>
</doxygen>
