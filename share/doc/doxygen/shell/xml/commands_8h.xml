<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="commands_8h" kind="file">
    <compoundname>commands.h</compoundname>
    <includes refid="shell__types_8h" local="yes">shell_types.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="commands__Cache__inode_8c" local="yes">commands_Cache_inode.c</includedby>
    <includedby refid="commands__FSAL_8c" local="yes">commands_FSAL.c</includedby>
    <includedby refid="commands__NFS_8c" local="yes">commands_NFS.c</includedby>
    <includedby refid="commands__NFS__remote_8c" local="yes">commands_NFS_remote.c</includedby>
    <includedby refid="shell_8c" local="yes">shell.c</includedby>
    <incdepgraph>
      <node id="57">
        <label>shell_types.h</label>
        <link refid="shell__types_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>commands.h</label>
        <link refid="commands.h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="62">
        <label>commands_NFS.c</label>
        <link refid="commands__NFS_8c"/>
      </node>
      <node id="61">
        <label>commands_FSAL.c</label>
        <link refid="commands__FSAL_8c"/>
      </node>
      <node id="63">
        <label>commands_NFS_remote.c</label>
        <link refid="commands__NFS__remote_8c"/>
      </node>
      <node id="59">
        <label>commands.h</label>
        <link refid="commands.h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="60">
        <label>commands_Cache_inode.c</label>
        <link refid="commands__Cache__inode_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="commands_8h_1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsal_layer_SetLogLevel</definition>
        <argsstring>(int log_lvl)</argsstring>
        <name>fsal_layer_SetLogLevel</name>
        <param>
          <type>int</type>
          <declname>log_lvl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="184" bodystart="473" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_init_fs</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_init_fs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an init_fs command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="191" bodystart="639" bodyend="707"/>
        <references refid="commands__FSAL_8c_1a16" compoundref="commands__FSAL_8c" startline="507" endline="636">fsal_init</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_pwd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_pwd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="197" bodystart="713" bodyend="752"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_cd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_cd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="203" bodystart="919" bodyend="1015"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_stat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_stat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a stat command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="210" bodystart="1019" bodyend="1142"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a19" compoundref="cmd__tools_8c" startline="707" endline="744">print_fsal_attrib_mask</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_ls</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_ls</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="216" bodystart="1522" bodyend="1805"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="cmd__tools_8h_1a22" compoundref="cmd__tools_8c" startline="841" endline="935">print_item_line</references>
        <references refid="commands__FSAL_8c_1a0">READDIR_SIZE</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_callstat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_callstat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display statistics about FSAL calls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="222" bodystart="1810" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_su</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_su</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change thread contexte. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="228" bodystart="1854" bodyend="1954"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o4" compoundref="commands__FSAL_8c" startline="319">cmdfsal_thr_info__::exp_context</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="cmd__tools_8h_1a25" compoundref="cmd__tools_8c" startline="1129" endline="1179">getugroups</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="commands__Cache__inode_8c_1a3">MAX_GRPS</references>
        <references refid="cmd__tools_8h_1a10" compoundref="cmd__tools_8c" startline="211" endline="230">my_atoi</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_unlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_unlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an unlink command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="234" bodystart="1960" bodyend="2082"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_mkdir</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_mkdir</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an mkdir command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="240" bodystart="2086" bodyend="2249"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_rename</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_rename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a rename command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="247" bodystart="2255" bodyend="2424"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_ln</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_ln</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ln command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="254" bodystart="2430" bodyend="2592"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_hardlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_hardlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a hardlink command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="260" bodystart="2598" bodyend="2752"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_create</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_create</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an create command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="267" bodystart="2758" bodyend="2929"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_setattr</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_setattr</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change file attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="274" bodystart="2939" bodyend="3115"/>
        <references refid="cmd__tools_8h_1a26a5">ATTR_32</references>
        <references refid="cmd__tools_8h_1a26a6">ATTR_64</references>
        <references refid="structshell__attribute_____1o0" compoundref="cmd__tools_8h" startline="221">shell_attribute__::attr_name</references>
        <references refid="cmd__tools_8h_1a26a7">ATTR_OCTAL</references>
        <references refid="cmd__tools_8h_1a26a8">ATTR_TIME</references>
        <references refid="structshell__attribute_____1o1" compoundref="cmd__tools_8h" startline="222">shell_attribute__::attr_type</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="cmd__tools_8h_1a23" compoundref="cmd__tools_8c" startline="946" endline="1088">MkFSALSetAttrStruct</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="cmd__tools_8h_1a2">shell_attribute_t</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_access</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_access</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>perform an access command. syntax: access [-A] [F][R][W][X] &lt;file&gt; example: access toto FRX </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="280" bodystart="3125" bodyend="3362"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_truncate</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_truncate</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a truncate command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="286" bodystart="3370" bodyend="3492"/>
        <references refid="cmd__tools_8h_1a12" compoundref="cmd__tools_8c" startline="265" endline="287">ato64</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_open</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_open</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that opens a file using specific flags. open &lt;path&gt; [ rwat ] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="292" bodystart="3693" bodyend="3878"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o6" compoundref="commands__FSAL_8c" startline="321">cmdfsal_thr_info__::current_fd</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="structcmdfsal__thr__info_____1o5" compoundref="commands__FSAL_8c" startline="320">cmdfsal_thr_info__::opened</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_open_byname</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_open_byname</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that opens a file using specific flags, but using FSAL_open_by_name. open &lt;path&gt; [ rwat ] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="298" bodystart="3498" bodyend="3686"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o6" compoundref="commands__FSAL_8c" startline="321">cmdfsal_thr_info__::current_fd</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="structcmdfsal__thr__info_____1o5" compoundref="commands__FSAL_8c" startline="320">cmdfsal_thr_info__::opened</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_open_byfileid</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_open_byfileid</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that opens a file using specific flags. open &lt;path&gt; [ rwat ] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="304" bodystart="3884" bodyend="4073"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o6" compoundref="commands__FSAL_8c" startline="321">cmdfsal_thr_info__::current_fd</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="structcmdfsal__thr__info_____1o5" compoundref="commands__FSAL_8c" startline="320">cmdfsal_thr_info__::opened</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_read</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_read</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that reads data from an opened file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="310" bodystart="4081" bodyend="4492"/>
        <references refid="cmd__tools_8h_1a12" compoundref="cmd__tools_8c" startline="265" endline="287">ato64</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a6" compoundref="Getopt_8c" startline="126">Optarg</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="cmd__tools_8h_1a0" compoundref="cmd__tools_8h" startline="263">print_timeval</references>
        <references refid="cmd__tools_8h_1a24" compoundref="cmd__tools_8c" startline="1095" endline="1110">time_diff</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_write</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_write</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that writes data to an opened file.</para><para>Usage: write [-h][-v] [ -s &lt;seek_type&gt;,&lt;offset&gt; ] [-N &lt;nb_times&gt;] -A &lt;ascii_string&gt; write [-h][-v] [ -s &lt;seek_type&gt;,&lt;offset&gt; ] [-N &lt;nb_times&gt;] -X &lt;hexa_data&gt; Where: &lt;seek_type&gt; can be: SET, CUR, END &lt;offset&gt; is a signed number of bytes. &lt;nb_times&gt; is the number of times we write the expression into the file.</para><para>&lt;ascii_string&gt; is a string to be written to file. Note that the null terminating character of is also written to file. or &lt;hexa_data&gt; is a data represented in hexadecimal format, that is to be written to file.</para><para>Examples:</para><para>For writing 10 times the null terminated string &quot;hello world&quot; at the end of the file: write -s END,0 -N 10 -A &quot;hello world&quot;</para><para>For overwriting the beginning of the file with the pattern 0xA1267AEF31254ADE repeated twice: write -s SET,0 -N 2 -X &quot;A1267AEF31254ADE&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="316" bodystart="4525" bodyend="4965"/>
        <references refid="cmd__tools_8h_1a12" compoundref="cmd__tools_8c" startline="265" endline="287">ato64</references>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a6" compoundref="Getopt_8c" startline="126">Optarg</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="cmd__tools_8h_1a0" compoundref="cmd__tools_8h" startline="263">print_timeval</references>
        <references refid="cmd__tools_8h_1a24" compoundref="cmd__tools_8c" startline="1095" endline="1110">time_diff</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_close</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_close</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that closes a file. close </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="322" bodystart="4974" bodyend="5032"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o6" compoundref="commands__FSAL_8c" startline="321">cmdfsal_thr_info__::current_fd</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="structcmdfsal__thr__info_____1o5" compoundref="commands__FSAL_8c" startline="320">cmdfsal_thr_info__::opened</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_close_byfileid</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_close_byfileid</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that closes a file. close </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="328" bodystart="5038" bodyend="5096"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o6" compoundref="commands__FSAL_8c" startline="321">cmdfsal_thr_info__::current_fd</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="structcmdfsal__thr__info_____1o5" compoundref="commands__FSAL_8c" startline="320">cmdfsal_thr_info__::opened</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_cat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_cat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that prints a file to screen. cat [-f] &lt;path&gt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="334" bodystart="5103" bodyend="5261"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_rcp</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_rcp</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command that copy a file from/to the local filesystem. rcp [-h] -r|-w &lt;fsal_path&gt; &lt;local_path&gt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="340" bodystart="5269" bodyend="5466"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_cross</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_cross</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="346" bodystart="5472" bodyend="5560"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_handlecmp</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_handlecmp</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compare 2 handles. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="352" bodystart="5564" bodyend="5650"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_lsxattrs</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_lsxattrs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list extended attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="358" bodystart="1146" bodyend="1277"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_fsal_getxattr</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_fsal_getxattr</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display an extended attribute. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="364" bodystart="1280" bodyend="1516"/>
        <references refid="commands__FSAL_8c_1a8">cmdfsal_thr_info_t</references>
        <references refid="structcmdfsal__thr__info_____1o3" compoundref="commands__FSAL_8c" startline="313">cmdfsal_thr_info__::context</references>
        <references refid="structcmdfsal__thr__info_____1o1" compoundref="commands__FSAL_8c" startline="309">cmdfsal_thr_info__::current_dir</references>
        <references refid="structcmdfsal__thr__info_____1o2" compoundref="commands__FSAL_8c" startline="310">cmdfsal_thr_info__::current_path</references>
        <references refid="commands__FSAL_8c_1a12" compoundref="commands__FSAL_8c" startline="347" endline="389">GetFSALCmdContext</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__FSAL_8c_1a13" compoundref="commands__FSAL_8c" startline="395" endline="470">Init_Thread_Context</references>
        <references refid="structcmdfsal__thr__info_____1o0" compoundref="commands__FSAL_8c" startline="308">cmdfsal_thr_info__::is_thread_ok</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__FSAL_8c_1a19" compoundref="commands__FSAL_8c" startline="757" endline="915">solvepath</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cache_inode_layer_SetLogLevel</definition>
        <argsstring>(int log_lvl)</argsstring>
        <name>Cache_inode_layer_SetLogLevel</name>
        <param>
          <type>int</type>
          <declname>log_lvl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="371" bodystart="547" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_cache_init</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_cache_init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an init_fs command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="378" bodystart="1019" bodyend="1098"/>
        <references refid="commands__Cache__inode_8c_1a27" compoundref="commands__Cache__inode_8c" startline="763" endline="1016">cacheinode_init</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_pwd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_pwd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="384" bodystart="1103" bodyend="1131"/>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_cd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_cd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="390" bodystart="1134" bodyend="1195"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_stat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_stat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a stat command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="397" bodystart="1199" bodyend="1294"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_gc</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_gc</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed to a call to the garbagge collector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="402" bodystart="1298" bodyend="1378"/>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_ls</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_ls</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="408" bodystart="1382" bodyend="1802"/>
        <references refid="commands__Cache__inode_8c_1a2">CACHE_INODE_SHELL_READDIR_SIZE</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="cmd__tools_8h_1a22" compoundref="cmd__tools_8c" startline="841" endline="935">print_item_line</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_link</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_link</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an create command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="413" bodystart="2040" bodyend="2181"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_mkdir</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_mkdir</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an mkdir command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="418" bodystart="1866" bodyend="2037"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_rename</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_rename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a rename command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="423" bodystart="2511" bodyend="2681"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_create</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_create</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an create command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="428" bodystart="2339" bodyend="2506"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_ln</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_ln</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ln (symlink) command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="433" bodystart="2186" bodyend="2335"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_setattr</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_setattr</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setattr</para><para>syntax of command line: setattr file_path attribute_name attribute_value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="443" bodystart="2828" bodyend="3002"/>
        <references refid="cmd__tools_8h_1a26a5">ATTR_32</references>
        <references refid="cmd__tools_8h_1a26a6">ATTR_64</references>
        <references refid="structshell__attribute_____1o0" compoundref="cmd__tools_8h" startline="221">shell_attribute__::attr_name</references>
        <references refid="cmd__tools_8h_1a26a7">ATTR_OCTAL</references>
        <references refid="cmd__tools_8h_1a26a8">ATTR_TIME</references>
        <references refid="structshell__attribute_____1o1" compoundref="cmd__tools_8h" startline="222">shell_attribute__::attr_type</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="cmd__tools_8h_1a23" compoundref="cmd__tools_8c" startline="946" endline="1088">MkFSALSetAttrStruct</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a21" compoundref="cmd__tools_8c" startline="784" endline="820">print_fsal_attributes</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a2">shell_attribute_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_unlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_unlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an unlink command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="448" bodystart="2685" bodyend="2819"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_callstat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_callstat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display statistics about FSAL calls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="453" bodystart="1807" bodyend="1862"/>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_data_cache</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_data_cache</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache en entry (REGULAR_FILE) in the data cache </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="458" bodystart="3185" bodyend="3327"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_recover_cache</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_recover_cache</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>recover the data cache </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="463" bodystart="3443" bodyend="3545"/>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="commands__Cache__inode_8c_1a0" compoundref="commands__Cache__inode_8c" startline="324">EXPORT_ID</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_refresh_cache</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_refresh_cache</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>refresh en entry (REGULAR_FILE) in the data cache </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="469" bodystart="3549" bodyend="3667"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_flush_cache</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_flush_cache</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>flush en entry (REGULAR_FILE) in the data cache </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="474" bodystart="3671" bodyend="3789"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_release_cache</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_release_cache</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cache en entry (REGULAR_FILE) in the data cache </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="479" bodystart="3331" bodyend="3439"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_read</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_read</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the content of a cached regular file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="484" bodystart="3792" bodyend="4215"/>
        <references refid="cmd__tools_8h_1a12" compoundref="cmd__tools_8c" startline="265" endline="287">ato64</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a6" compoundref="Getopt_8c" startline="126">Optarg</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a0" compoundref="cmd__tools_8h" startline="263">print_timeval</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a24" compoundref="cmd__tools_8c" startline="1095" endline="1110">time_diff</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_write</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_write</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the content of a cached regular file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="489" bodystart="4219" bodyend="4659"/>
        <references refid="cmd__tools_8h_1a12" compoundref="cmd__tools_8c" startline="265" endline="287">ato64</references>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a6" compoundref="Getopt_8c" startline="126">Optarg</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="cmd__tools_8h_1a0" compoundref="cmd__tools_8h" startline="263">print_timeval</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
        <references refid="cmd__tools_8h_1a24" compoundref="cmd__tools_8c" startline="1095" endline="1110">time_diff</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_su</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_su</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change thread contexte. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="494" bodystart="4664" bodyend="4754"/>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o1" compoundref="commands__Cache__inode_8c" startline="359">cmdCacheInode_thr_info__::exp_context</references>
        <references refid="cmd__tools_8h_1a25" compoundref="cmd__tools_8c" startline="1129" endline="1179">getugroups</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__Cache__inode_8c_1a3">MAX_GRPS</references>
        <references refid="cmd__tools_8h_1a10" compoundref="cmd__tools_8c" startline="211" endline="230">my_atoi</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_Cache_inode_access</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_Cache_inode_access</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>perform an access command. syntax: access [F][R][W][X] &lt;file&gt; example: access toto FRX </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="505" bodystart="3012" bodyend="3181"/>
        <references refid="commands__Cache__inode_8c_1a26" compoundref="commands__Cache__inode_8c" startline="599" endline="761">cache_solvepath</references>
        <references refid="structcmdCacheInode__thr__info_____1o3" compoundref="commands__Cache__inode_8c" startline="365">cmdCacheInode_thr_info__::cache_status</references>
        <references refid="structcmdCacheInode__thr__info_____1o7" compoundref="commands__Cache__inode_8c" startline="377">cmdCacheInode_thr_info__::client</references>
        <references refid="commands__Cache__inode_8c_1a14">cmdCacheInode_thr_info_t</references>
        <references refid="structcmdCacheInode__thr__info_____1o2" compoundref="commands__Cache__inode_8c" startline="362">cmdCacheInode_thr_info__::context</references>
        <references refid="structcmdCacheInode__thr__info_____1o6" compoundref="commands__Cache__inode_8c" startline="373">cmdCacheInode_thr_info__::current_path</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="structcmdCacheInode__thr__info_____1o5" compoundref="commands__Cache__inode_8c" startline="370">cmdCacheInode_thr_info__::pentry</references>
        <references refid="commands__Cache__inode_8c_1a21" compoundref="commands__Cache__inode_8c" startline="521" endline="544">RetrieveInitializedContext</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_layer_SetLogLevel</definition>
        <argsstring>(int log_lvl)</argsstring>
        <name>nfs_layer_SetLogLevel</name>
        <param>
          <type>int</type>
          <declname>log_lvl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="513" bodystart="450" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_init</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init nfs layer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="520" bodystart="536" bodyend="618"/>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS_8c_1a21" compoundref="commands__NFS_8c" startline="466" endline="533">nfs_init</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_MNT1_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_MNT1_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process MNT1 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="526" bodystart="623" bodyend="720"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a2">cmdnfs_funcdesc_t</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="120">cmdnfs_funcdesc__::func_call</references>
        <references refid="structcmdnfs__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="129">cmdnfs_funcdesc__::func_decode</references>
        <references refid="structcmdnfs__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="126">cmdnfs_funcdesc__::func_encode</references>
        <references refid="structcmdnfs__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="123">cmdnfs_funcdesc__::func_free</references>
        <references refid="structcmdnfs__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="132">cmdnfs_funcdesc__::func_help</references>
        <references refid="structcmdnfs__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="117">cmdnfs_funcdesc__::func_name</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_MNT3_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_MNT3_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process MNT3 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="532" bodystart="727" bodyend="822"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a2">cmdnfs_funcdesc_t</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="120">cmdnfs_funcdesc__::func_call</references>
        <references refid="structcmdnfs__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="129">cmdnfs_funcdesc__::func_decode</references>
        <references refid="structcmdnfs__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="126">cmdnfs_funcdesc__::func_encode</references>
        <references refid="structcmdnfs__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="123">cmdnfs_funcdesc__::func_free</references>
        <references refid="structcmdnfs__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="132">cmdnfs_funcdesc__::func_help</references>
        <references refid="structcmdnfs__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="117">cmdnfs_funcdesc__::func_name</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_NFS2_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_NFS2_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process NFS2 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="539" bodystart="828" bodyend="943"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a2">cmdnfs_funcdesc_t</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="120">cmdnfs_funcdesc__::func_call</references>
        <references refid="structcmdnfs__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="129">cmdnfs_funcdesc__::func_decode</references>
        <references refid="structcmdnfs__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="126">cmdnfs_funcdesc__::func_encode</references>
        <references refid="structcmdnfs__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="123">cmdnfs_funcdesc__::func_free</references>
        <references refid="structcmdnfs__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="132">cmdnfs_funcdesc__::func_help</references>
        <references refid="structcmdnfs__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="117">cmdnfs_funcdesc__::func_name</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_NFS3_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_NFS3_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process NFS3 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="545" bodystart="947" bodyend="1062"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a2">cmdnfs_funcdesc_t</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="120">cmdnfs_funcdesc__::func_call</references>
        <references refid="structcmdnfs__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="129">cmdnfs_funcdesc__::func_decode</references>
        <references refid="structcmdnfs__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="126">cmdnfs_funcdesc__::func_encode</references>
        <references refid="structcmdnfs__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="123">cmdnfs_funcdesc__::func_free</references>
        <references refid="structcmdnfs__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="132">cmdnfs_funcdesc__::func_help</references>
        <references refid="structcmdnfs__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="117">cmdnfs_funcdesc__::func_name</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_cd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_cd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="551" bodystart="2682" bodyend="2763"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_ls</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_ls</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command using NFS protocol NFS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="557" bodystart="2341" bodyend="2677"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="commands__NFS_8c_1a32" compoundref="commands__NFS_8c" startline="1510" endline="1516">nfs_readdirplus_free</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__nfstools_8h_1a69" compoundref="cmd__nfstools_8c" startline="4500" endline="4516">print_nfs_attributes</references>
        <references refid="cmd__nfstools_8h_1a68" compoundref="cmd__nfstools_8c" startline="4416" endline="4487">print_nfsitem_line</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_mount</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_mount</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mount a path to browse it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="563" bodystart="2100" bodyend="2206"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a16" compoundref="cmd__nfstools_8c" startline="203" endline="252">cmdnfs_dirpath</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="structcmdnfs__thr__info_____1o8" compoundref="commands__NFS_8c" startline="307">cmdnfs_thr_info__::mounted_path</references>
        <references refid="structcmdnfs__thr__info_____1o7" compoundref="commands__NFS_8c" startline="306">cmdnfs_thr_info__::mounted_path_hdl</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_umount</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_umount</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>umount a mounted path. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="569" bodystart="2211" bodyend="2301"/>
        <references refid="structcmdnfs__thr__info_____1o3" compoundref="commands__NFS_8c" startline="296">cmdnfs_thr_info__::authunix_struct</references>
        <references refid="structcmdnfs__thr__info_____1o4" compoundref="commands__NFS_8c" startline="299">cmdnfs_thr_info__::client</references>
        <references refid="cmd__nfstools_8h_1a16" compoundref="cmd__nfstools_8c" startline="203" endline="252">cmdnfs_dirpath</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__Cache__inode_8c_1a10" compoundref="commands__Cache__inode_8c" startline="340">ht</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="structcmdnfs__thr__info_____1o8" compoundref="commands__NFS_8c" startline="307">cmdnfs_thr_info__::mounted_path</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a9" compoundref="commands__NFS_8c" startline="274">pexportlist</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_pwd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_pwd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="575" bodystart="2306" bodyend="2337"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_create</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_create</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="581" bodystart="2768" bodyend="2890"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_mkdir</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_mkdir</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a directory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="587" bodystart="2895" bodyend="3017"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_unlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_unlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unlink a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="593" bodystart="3021" bodyend="3150"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_setattr</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_setattr</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setattr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="599" bodystart="3153" bodyend="3273"/>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a36" compoundref="cmd__nfstools_8c" startline="1666" endline="1866">cmdnfs_sattr3</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_rename</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_rename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a rename command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="605" bodystart="3278" bodyend="3409"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_hardlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_hardlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a hardlink command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="611" bodystart="3415" bodyend="3542"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_ln</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_ln</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ln command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="617" bodystart="3548" bodyend="3683"/>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a36" compoundref="cmd__nfstools_8c" startline="1666" endline="1866">cmdnfs_sattr3</references>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_stat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_stat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command using NFS protocol NFS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="623" bodystart="3689" bodyend="3855"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o10" compoundref="commands__NFS_8c" startline="310">cmdnfs_thr_info__::current_path</references>
        <references refid="structcmdnfs__thr__info_____1o9" compoundref="commands__NFS_8c" startline="309">cmdnfs_thr_info__::current_path_hdl</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="structcmdnfs__thr__info_____1o6" compoundref="commands__NFS_8c" startline="304">cmdnfs_thr_info__::is_mounted_path</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__nfstools_8h_1a69" compoundref="cmd__nfstools_8c" startline="4500" endline="4516">print_nfs_attributes</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_su</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_su</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change thread credentials. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="627" bodystart="3861" bodyend="3962"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="structcmdnfs__thr__info_____1o1" compoundref="commands__NFS_8c" startline="290">cmdnfs_thr_info__::exp_context</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="cmd__tools_8h_1a25" compoundref="cmd__tools_8c" startline="1129" endline="1179">getugroups</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
        <references refid="commands__Cache__inode_8c_1a3">MAX_GRPS</references>
        <references refid="cmd__tools_8h_1a10" compoundref="cmd__tools_8c" startline="211" endline="230">my_atoi</references>
        <references refid="cmd__tools_8h_1a18" compoundref="cmd__tools_8c" startline="677" endline="696">print_fsal_status</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_id</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_id</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="631" bodystart="3965" bodyend="3995"/>
        <references refid="commands__NFS_8c_1a11">cmdnfs_thr_info_t</references>
        <references refid="structcmdnfs__thr__info_____1o2" compoundref="commands__NFS_8c" startline="293">cmdnfs_thr_info__::context</references>
        <references refid="commands__NFS_8c_1a17" compoundref="commands__NFS_8c" startline="337" endline="380">GetNFSClient</references>
        <references refid="commands__NFS_8c_1a18" compoundref="commands__NFS_8c" startline="383" endline="445">InitNFSClient</references>
        <references refid="structcmdnfs__thr__info_____1o0" compoundref="commands__NFS_8c" startline="284">cmdnfs_thr_info__::is_thread_init</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_remote_layer_SetLogLevel</definition>
        <argsstring>(int log_lvl)</argsstring>
        <name>nfs_remote_layer_SetLogLevel</name>
        <param>
          <type>int</type>
          <declname>log_lvl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="638" bodystart="657" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_rpc_init</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_rpc_init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fn_rpc_init </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="644" bodystart="579" bodyend="653"/>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS__remote_8c_1a29" compoundref="commands__NFS__remote_8c" startline="357" endline="483">rpc_init</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_MNT1_remote_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_MNT1_remote_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process MNT1 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="650" bodystart="666" bodyend="744"/>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a3">cmdnfsremote_funcdesc_t</references>
        <references refid="structcmdnfsremote__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="142">cmdnfsremote_funcdesc__::func_call</references>
        <references refid="structcmdnfsremote__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="151">cmdnfsremote_funcdesc__::func_decode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="148">cmdnfsremote_funcdesc__::func_encode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="145">cmdnfsremote_funcdesc__::func_free</references>
        <references refid="structcmdnfsremote__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="154">cmdnfsremote_funcdesc__::func_help</references>
        <references refid="structcmdnfsremote__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="139">cmdnfsremote_funcdesc__::func_name</references>
        <references refid="commands__NFS__remote_8c_1a21" compoundref="commands__NFS__remote_8c" startline="204" endline="216">getCLIENT</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS__remote_8c_1a32" compoundref="commands__NFS__remote_8c" startline="539" endline="565">switch_result</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_MNT3_remote_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_MNT3_remote_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process MNT3 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="656" bodystart="748" bodyend="826"/>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a3">cmdnfsremote_funcdesc_t</references>
        <references refid="structcmdnfsremote__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="142">cmdnfsremote_funcdesc__::func_call</references>
        <references refid="structcmdnfsremote__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="151">cmdnfsremote_funcdesc__::func_decode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="148">cmdnfsremote_funcdesc__::func_encode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="145">cmdnfsremote_funcdesc__::func_free</references>
        <references refid="structcmdnfsremote__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="154">cmdnfsremote_funcdesc__::func_help</references>
        <references refid="structcmdnfsremote__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="139">cmdnfsremote_funcdesc__::func_name</references>
        <references refid="commands__NFS__remote_8c_1a21" compoundref="commands__NFS__remote_8c" startline="204" endline="216">getCLIENT</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS__remote_8c_1a32" compoundref="commands__NFS__remote_8c" startline="539" endline="565">switch_result</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_NFS2_remote_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_NFS2_remote_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process NFS2 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="663" bodystart="830" bodyend="909"/>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a3">cmdnfsremote_funcdesc_t</references>
        <references refid="structcmdnfsremote__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="142">cmdnfsremote_funcdesc__::func_call</references>
        <references refid="structcmdnfsremote__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="151">cmdnfsremote_funcdesc__::func_decode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="148">cmdnfsremote_funcdesc__::func_encode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="145">cmdnfsremote_funcdesc__::func_free</references>
        <references refid="structcmdnfsremote__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="154">cmdnfsremote_funcdesc__::func_help</references>
        <references refid="structcmdnfsremote__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="139">cmdnfsremote_funcdesc__::func_name</references>
        <references refid="commands__NFS__remote_8c_1a21" compoundref="commands__NFS__remote_8c" startline="204" endline="216">getCLIENT</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS__remote_8c_1a32" compoundref="commands__NFS__remote_8c" startline="539" endline="565">switch_result</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_NFS3_remote_command</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_NFS3_remote_command</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process NFS3 protocol&apos;s command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="669" bodystart="913" bodyend="992"/>
        <references refid="cmd__nfstools_8h_1a70a13">CMDNFS_DECODE</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="cmd__nfstools_8h_1a3">cmdnfsremote_funcdesc_t</references>
        <references refid="structcmdnfsremote__funcdesc_____1o1" compoundref="cmd__nfstools_8h" startline="142">cmdnfsremote_funcdesc__::func_call</references>
        <references refid="structcmdnfsremote__funcdesc_____1o4" compoundref="cmd__nfstools_8h" startline="151">cmdnfsremote_funcdesc__::func_decode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o3" compoundref="cmd__nfstools_8h" startline="148">cmdnfsremote_funcdesc__::func_encode</references>
        <references refid="structcmdnfsremote__funcdesc_____1o2" compoundref="cmd__nfstools_8h" startline="145">cmdnfsremote_funcdesc__::func_free</references>
        <references refid="structcmdnfsremote__funcdesc_____1o5" compoundref="cmd__nfstools_8h" startline="154">cmdnfsremote_funcdesc__::func_help</references>
        <references refid="structcmdnfsremote__funcdesc_____1o0" compoundref="cmd__nfstools_8h" startline="139">cmdnfsremote_funcdesc__::func_name</references>
        <references refid="commands__NFS__remote_8c_1a21" compoundref="commands__NFS__remote_8c" startline="204" endline="216">getCLIENT</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS__remote_8c_1a32" compoundref="commands__NFS__remote_8c" startline="539" endline="565">switch_result</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_cd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_cd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="675" bodystart="2462" bodyend="2533"/>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS__remote_8c_1a42" compoundref="commands__NFS__remote_8c" startline="1209" endline="1257">nfs_remote_access</references>
        <references refid="commands__NFS__remote_8c_1a41" compoundref="commands__NFS__remote_8c" startline="1159" endline="1205">nfs_remote_getattr</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_ls</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_ls</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command using NFS protocol NFS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="681" bodystart="2132" bodyend="2457"/>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a41" compoundref="commands__NFS__remote_8c" startline="1159" endline="1205">nfs_remote_getattr</references>
        <references refid="commands__NFS__remote_8c_1a44" compoundref="commands__NFS__remote_8c" startline="1312" endline="1371">nfs_remote_readdirplus</references>
        <references refid="commands__NFS__remote_8c_1a45" compoundref="commands__NFS__remote_8c" startline="1375" endline="1381">nfs_remote_readdirplus_free</references>
        <references refid="commands__NFS__remote_8c_1a43" compoundref="commands__NFS__remote_8c" startline="1261" endline="1308">nfs_remote_readlink</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__nfstools_8h_1a69" compoundref="cmd__nfstools_8c" startline="4500" endline="4516">print_nfs_attributes</references>
        <references refid="cmd__nfstools_8h_1a68" compoundref="cmd__nfstools_8c" startline="4416" endline="4487">print_nfsitem_line</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_mount</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_mount</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mount a path to browse it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="687" bodystart="1985" bodyend="2026"/>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="commands__NFS__remote_8c_1a56" compoundref="commands__NFS__remote_8c" startline="1922" endline="1978">nfs_remote_mount</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_umount</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_umount</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>umount a mounted path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="693" bodystart="2031" bodyend="2104"/>
        <references refid="cmd__nfstools_8h_1a16" compoundref="cmd__nfstools_8c" startline="203" endline="252">cmdnfs_dirpath</references>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a70a14">CMDNFS_FREE</references>
        <references refid="commands__NFS__remote_8c_1a21" compoundref="commands__NFS__remote_8c" startline="204" endline="216">getCLIENT</references>
        <references refid="group__MNTprocs_1ga7" compoundref="nfs__remote__functions_8c" startline="303" endline="317">mnt3_remote_Mnt</references>
        <references refid="group__NFSprocs_1ga52" compoundref="nfs__remote__functions_8c" startline="1646" endline="1649">mnt3_remote_Umnt_Free</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="commands__NFS__remote_8c_1a32" compoundref="commands__NFS__remote_8c" startline="539" endline="565">switch_result</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_pwd</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_pwd</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints current path </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="699" bodystart="2109" bodyend="2128"/>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_create</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_create</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="705" bodystart="2538" bodyend="2642"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a48" compoundref="commands__NFS__remote_8c" startline="1457" endline="1527">nfs_remote_create</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_mkdir</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_mkdir</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a directory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="711" bodystart="2647" bodyend="2755"/>
        <references refid="cmd__tools_8h_1a11" compoundref="cmd__tools_8c" startline="242" endline="262">atomode</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a49" compoundref="commands__NFS__remote_8c" startline="1531" endline="1600">nfs_remote_mkdir</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_unlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_unlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unlink a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="717" bodystart="2759" bodyend="2878"/>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a41" compoundref="commands__NFS__remote_8c" startline="1159" endline="1205">nfs_remote_getattr</references>
        <references refid="commands__NFS__remote_8c_1a51" compoundref="commands__NFS__remote_8c" startline="1653" endline="1698">nfs_remote_remove</references>
        <references refid="commands__NFS__remote_8c_1a50" compoundref="commands__NFS__remote_8c" startline="1604" endline="1649">nfs_remote_rmdir</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_setattr</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_setattr</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setattr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="723" bodystart="2881" bodyend="2991"/>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a36" compoundref="cmd__nfstools_8c" startline="1666" endline="1866">cmdnfs_sattr3</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a52" compoundref="commands__NFS__remote_8c" startline="1702" endline="1748">nfs_remote_setattr</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_rename</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_rename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a rename command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="729" bodystart="2996" bodyend="3116"/>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a53" compoundref="commands__NFS__remote_8c" startline="1752" endline="1801">nfs_remote_rename</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_hardlink</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_hardlink</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed a hardlink command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="735" bodystart="3122" bodyend="3238"/>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a54" compoundref="commands__NFS__remote_8c" startline="1805" endline="1852">nfs_remote_link</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_ln</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_ln</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ln command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="741" bodystart="3244" bodyend="3368"/>
        <references refid="cmd__nfstools_8h_1a70a12">CMDNFS_ENCODE</references>
        <references refid="cmd__nfstools_8h_1a36" compoundref="cmd__nfstools_8c" startline="1666" endline="1866">cmdnfs_sattr3</references>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="commands__NFS__remote_8c_1a55" compoundref="commands__NFS__remote_8c" startline="1856" endline="1918">nfs_remote_symlink</references>
        <references refid="Getopt_8c_1a0" compoundref="Getopt_8c" startline="111">NULL</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
        <references refid="cmd__tools_8h_1a15" compoundref="cmd__tools_8c" startline="443" endline="495">split_path</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_stat</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_stat</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>proceed an ls command using NFS protocol NFS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="747" bodystart="3374" bodyend="3529"/>
        <references refid="structshell__fh3_____1o0" compoundref="commands__NFS__remote_8c" startline="142">shell_fh3__::data_len</references>
        <references refid="structshell__fh3_____1o1" compoundref="commands__NFS__remote_8c" startline="143">shell_fh3__::data_val</references>
        <references refid="Getopt_8h_1a4" compoundref="Getopt_8c" startline="128" endline="179">Getopt</references>
        <references refid="commands__NFS__remote_8c_1a41" compoundref="commands__NFS__remote_8c" startline="1159" endline="1205">nfs_remote_getattr</references>
        <references refid="commands__NFS__remote_8c_1a40" compoundref="commands__NFS__remote_8c" startline="1001" endline="1155">nfs_remote_solvepath</references>
        <references refid="Getopt_8c_1a4" compoundref="Getopt_8c" startline="124">Optind</references>
        <references refid="Getopt_8c_1a5" compoundref="Getopt_8c" startline="125">Optopt</references>
        <references refid="cmd__nfstools_8h_1a69" compoundref="cmd__nfstools_8c" startline="4500" endline="4516">print_nfs_attributes</references>
        <references refid="commands__NFS_8c_1a3">shell_fh3_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_su</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_su</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change thread credentials. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="751" bodystart="3535" bodyend="3621"/>
        <references refid="structprog__vers__client__def_____1o1" compoundref="commands__NFS__remote_8c" startline="185">prog_vers_client_def__::clnt</references>
        <references refid="commands__NFS__remote_8c_1a12" compoundref="commands__NFS__remote_8c" startline="339">current_pw</references>
        <references refid="cmd__tools_8h_1a25" compoundref="cmd__tools_8c" startline="1129" endline="1179">getugroups</references>
        <references refid="commands__Cache__inode_8c_1a3">MAX_GRPS</references>
        <references refid="cmd__tools_8h_1a10" compoundref="cmd__tools_8c" startline="211" endline="230">my_atoi</references>
        <references refid="structprog__vers__client__def_____1o0" compoundref="commands__NFS__remote_8c" startline="184">prog_vers_client_def__::name</references>
        <references refid="commands__NFS__remote_8c_1a10">prog_vers_client_def_t</references>
      </memberdef>
      <memberdef kind="function" id="commands_8h_1a100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fn_nfs_remote_id</definition>
        <argsstring>(int argc, char **argv, FILE *output)</argsstring>
        <name>fn_nfs_remote_id</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="755" bodystart="3623" bodyend="3631"/>
        <references refid="commands__NFS__remote_8c_1a12" compoundref="commands__NFS__remote_8c" startline="339">current_pw</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="commands_8h_1a0" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>command_def_t commands_FSAL[]</definition>
        <argsstring>[]</argsstring>
        <name>commands_FSAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="795" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commands_8h_1a1" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>command_def_t commands_Cache_inode[]</definition>
        <argsstring>[]</argsstring>
        <name>commands_Cache_inode</name>
        <initializer>{
  {&quot;access&quot;,        fn_Cache_inode_access,        &quot;test access rights&quot;  },
  {&quot;callstat&quot;,      fn_Cache_inode_callstat,      &quot;display stats about FSAL calls&quot;  },
  {&quot;cd&quot;,            fn_Cache_inode_cd,            &quot;change current directory&quot;  },
  {&quot;create&quot;,        fn_Cache_inode_create,        &quot;create regular file&quot; },
  {&quot;data_cache&quot;,    fn_Cache_inode_data_cache,    &quot;cache a file in the Data Cache&quot;  },
  {&quot;flush_cache&quot;,   fn_Cache_inode_flush_cache,   &quot;flushes a previously Data cached entry&quot;  },
  {&quot;gc&quot;,            fn_Cache_inode_gc,            &quot;run the garbagge collector on the cache inode&quot; },
  {&quot;hardlink&quot;,      fn_Cache_inode_link,          &quot;create hard link&quot;  }, 
  {&quot;init_cache&quot;,    fn_Cache_inode_cache_init,    &quot;initialize filesystem&quot; },
  {&quot;ln&quot;,            fn_Cache_inode_ln,            &quot;creates a new symbolic link&quot; },
  {&quot;ls&quot;,            fn_Cache_inode_ls,            &quot;list contents of directory&quot;  },
  {&quot;mkdir&quot;,         fn_Cache_inode_mkdir,         &quot;create a new directory&quot;  },
  {&quot;read&quot;,          fn_Cache_inode_read,          &quot;reads the content of a data cached file&quot; },
  {&quot;recover_cache&quot;, fn_Cache_inode_recover_cache, &quot;recover the data cache after a crash&quot;  },
  {&quot;refresh_cache&quot;, fn_Cache_inode_refresh_cache, &quot;refreshes a previously Data cached entry&quot;  },
  {&quot;release_cache&quot;, fn_Cache_inode_release_cache, &quot;releases a previously Data cached entry&quot; },
  {&quot;rename&quot;,        fn_Cache_inode_rename,        &quot;rename/move an object&quot; }, 
  {&quot;setattr&quot;,       fn_Cache_inode_setattr,       &quot;change attributes of an object&quot;  },
  {&quot;pwd&quot;,           fn_Cache_inode_pwd,           &quot;print current path&quot;  },
  {&quot;stat&quot;,          fn_Cache_inode_stat,          &quot;display stat about a filesystem object&quot;  },
  {&quot;su&quot;,            fn_Cache_inode_su,            &quot;change current user&quot; },
  {&quot;unlink&quot;,        fn_Cache_inode_unlink,        &quot;unlink an entry in a directory&quot;  },
  {&quot;write&quot;,         fn_Cache_inode_write,         &quot;writes the content of a data cached file&quot;  },
  {NULL,NULL,NULL} 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="825" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commands_8h_1a2" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>command_def_t commands_NFS[]</definition>
        <argsstring>[]</argsstring>
        <name>commands_NFS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="904" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commands_8h_1a3" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structcommand__def____" kindref="compound">command_def_t</ref></type>
        <definition>command_def_t commands_NFS_remote[]</definition>
        <argsstring>[]</argsstring>
        <name>commands_NFS_remote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="982" bodystart="906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commands_8h_1a4" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref></type>
        <definition>layer_def_t layer_list[]</definition>
        <argsstring>[]</argsstring>
        <name>layer_list</name>
        <initializer> {
  {&quot;FSAL&quot;,         commands_FSAL,        &quot;File system abstraction layer&quot;,fsal_layer_SetLogLevel},
  {&quot;Cache_inode&quot;,  commands_Cache_inode, &quot;Cache inode layer&quot;, Cache_inode_layer_SetLogLevel},
  {&quot;NFS&quot;,          commands_NFS,         &quot;NFSv2, NFSv3, MNTv1, MNTv3 protocols (direct calls, not through RPCs)&quot;,nfs_layer_SetLogLevel},
  {&quot;NFS_remote&quot;,   commands_NFS_remote,  &quot;NFSv2, NFSv3, MNTv1, MNTv3 protocols (calls through RPCs)&quot;,nfs_remote_layer_SetLogLevel},
  {NULL,NULL,NULL,NULL} 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Layer list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/shell/commands.h" line="995" bodystart="989" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file for processing user&apos;s command line. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para><simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
</para></simplesect>
<simplesect kind="date"><para><simplesect kind="rcs"><title>Date</title><para>2006/01/24 15:04:22 </para></simplesect>
</para></simplesect>
<simplesect kind="version"><para><simplesect kind="rcs"><title>Revision</title><para>1.52 </para></simplesect>
</para></simplesect>
<simplesect kind="rcs"><title>Log</title><para><ref refid="commands_8h" kindref="compound">commands.h</ref>,v </para></simplesect>
Revision 1.52 2006/01/24 15:04:22 leibovic Re-integrating nfs commands for HPSS_62.</para><para>Revision 1.51 2006/01/17 14:56:22 leibovic Adaptation de HPSS 6.2.</para><para>Revision 1.50 2005/09/28 11:02:29 leibovic Adding su command to NFS layer.</para><para>Revision 1.49 2005/09/19 14:20:58 leibovic Adding handlecmp call.</para><para>Revision 1.48 2005/09/09 15:23:11 leibovic Adding &quot;cross&quot; command for crossing junctions.</para><para>Revision 1.47 2005/09/07 14:08:32 leibovic Adding stat command for NFS.</para><para>Revision 1.46 2005/08/25 13:44:26 leibovic Adding su commande for cache indoe layer.</para><para>Revision 1.45 2005/08/12 07:07:23 leibovic Adding ln command for nfs.</para><para>Revision 1.44 2005/08/10 14:55:05 leibovic NFS support of setattr, rename, link, symlink.</para><para>Revision 1.43 2005/08/10 10:57:17 leibovic Adding removal functions.</para><para>Revision 1.42 2005/08/09 14:52:57 leibovic Addinf create and mkdir commands.</para><para>Revision 1.41 2005/08/08 11:42:49 leibovic Adding some stardard unix calls through NFS (ls, cd, pwd).</para><para>Revision 1.40 2005/08/05 15:17:57 leibovic Adding mount and pwd commands for browsing.</para><para>Revision 1.39 2005/08/03 11:51:10 leibovic MNT1 protocol OK.</para><para>Revision 1.38 2005/06/14 12:25:13 deniel commit for seek size</para><para>Revision 1.37 2005/06/02 12:53:44 deniel Shell is now support flush/refresh commands for data cache</para><para>Revision 1.36 2005/06/02 07:14:33 leibovic Adding rcp call.</para><para>Revision 1.35 2005/05/27 14:47:52 leibovic adding cat command.</para><para>Revision 1.34 2005/05/27 12:01:47 leibovic Adding write command.</para><para>Revision 1.33 2005/05/26 12:54:18 leibovic Adding open, read, close commands for FSAL.</para><para>Revision 1.32 2005/05/18 13:07:19 leibovic Adding fsal truncate operation.</para><para>Revision 1.31 2005/05/10 11:44:15 deniel Datacache and metadatacache are noewqw bounded</para><para>Revision 1.30 2005/05/09 12:23:55 leibovic Version 2 of ganeshell.</para><para>Revision 1.29 2005/04/27 09:33:48 deniel Added cache_inode_access</para><para>Revision 1.28 2005/04/26 14:57:27 leibovic Implementing access command.</para><para>Revision 1.27 2005/04/25 15:19:12 deniel Adding setattr support in Cache inode</para><para>Revision 1.26 2005/04/25 12:57:48 leibovic Implementing setattr.</para><para>Revision 1.25 2005/04/21 13:19:15 deniel Adding cache_inode_rename/ link/ remove implementation</para><para>Revision 1.24 2005/04/20 10:40:55 deniel Adding &apos;create&apos;</para><para>Revision 1.23 2005/04/19 12:29:32 leibovic Adding create command.</para><para>Revision 1.22 2005/04/19 08:28:17 leibovic Adding hardlink command for FSAL.</para><para>Revision 1.21 2005/04/18 14:03:25 deniel First version of mkdir/symlink/unlink that works Further test are to be made with DIR_CONTINUE entry type</para><para>Revision 1.20 2005/04/18 07:59:27 deniel Added mkdir and ln support</para><para>Revision 1.19 2005/04/15 12:25:44 deniel Added mkdir for Cache_inode</para><para>Revision 1.18 2005/04/14 11:21:56 leibovic Changing command syntax.</para><para>Revision 1.17 2005/04/13 13:36:17 leibovic Ajout de la commande rename.</para><para>Revision 1.16 2005/04/13 09:28:05 leibovic Adding unlink and mkdir calls.</para><para>Revision 1.15 2005/03/15 13:01:13 deniel Pb with one stream log desc is ok</para><para>Revision 1.14 2005/03/04 10:12:15 leibovic New debug functions.</para><para>Revision 1.13 2005/03/02 09:20:53 deniel Test for gc added</para><para>Revision 1.12 2005/01/21 13:31:26 leibovic Code clenaning.</para><para>Revision 1.11 2005/01/21 09:40:31 leibovic Integrating NFS and MNT protocol commands.</para><para>Revision 1.10 2004/12/15 16:19:10 deniel Some command for testing cache_inode were added</para><para>Revision 1.9 2004/12/08 17:31:01 deniel adding array for Cache_inode layer in <ref refid="commands_8h" kindref="compound">commands.h</ref></para><para>Revision 1.8 2004/12/08 17:13:50 leibovic Multi-layer support.</para><para>Revision 1.7 2004/12/08 15:56:57 deniel Beginning addition for Cache_inode support</para><para>Revision 1.6 2004/12/01 16:12:21 leibovic New tests + displaying command number in verbose mode.</para><para>Revision 1.5 2004/11/22 14:02:36 leibovic Adding su command.</para><para>Revision 1.4 2004/11/19 16:18:12 leibovic First operational version.</para><para>Revision 1.3 2004/11/19 08:46:16 leibovic fixed conflict between command names and syscalls.</para><para>Revision 1.2 2004/11/18 13:40:40 leibovic implemented: init_fs, pwd, cd</para><para>Revision 1.1 2004/11/18 08:55:54 leibovic Shell for browsing FSAL and other GANESHA modules.</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="172"><highlight class="preprocessor">#ifndef<sp/>_COMMANDS_H</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_COMMANDS_H</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell__types_8h" kindref="compound">shell_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>FSAL<sp/>commands<sp/>prototypes.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>setloglevel<sp/>command<sp/>is<sp/>needed<sp/>for<sp/>each<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a14" kindref="member">fsal_layer_SetLogLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_lvl);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a17" kindref="member">fn_fsal_init_fs</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a18" kindref="member">fn_fsal_pwd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a20" kindref="member">fn_fsal_cd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a21" kindref="member">fn_fsal_stat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a24" kindref="member">fn_fsal_ls</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a25" kindref="member">fn_fsal_callstat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a26" kindref="member">fn_fsal_su</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a27" kindref="member">fn_fsal_unlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a28" kindref="member">fn_fsal_mkdir</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a29" kindref="member">fn_fsal_rename</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a30" kindref="member">fn_fsal_ln</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a31" kindref="member">fn_fsal_hardlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a32" kindref="member">fn_fsal_create</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a33" kindref="member">fn_fsal_setattr</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a34" kindref="member">fn_fsal_access</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a35" kindref="member">fn_fsal_truncate</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a37" kindref="member">fn_fsal_open</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a36" kindref="member">fn_fsal_open_byname</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a38" kindref="member">fn_fsal_open_byfileid</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a39" kindref="member">fn_fsal_read</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a40" kindref="member">fn_fsal_write</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a41" kindref="member">fn_fsal_close</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a42" kindref="member">fn_fsal_close_byfileid</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a43" kindref="member">fn_fsal_cat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a44" kindref="member">fn_fsal_rcp</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a45" kindref="member">fn_fsal_cross</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a46" kindref="member">fn_fsal_handlecmp</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a22" kindref="member">fn_fsal_lsxattrs</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__FSAL_8c_1a23" kindref="member">fn_fsal_getxattr</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>Cache_inode<sp/>commands<sp/>prototypes.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>setloglevel<sp/>command<sp/>is<sp/>needed<sp/>for<sp/>each<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a22" kindref="member">Cache_inode_layer_SetLogLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_lvl);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a28" kindref="member">fn_Cache_inode_cache_init</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a29" kindref="member">fn_Cache_inode_pwd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a30" kindref="member">fn_Cache_inode_cd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a31" kindref="member">fn_Cache_inode_stat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a32" kindref="member">fn_Cache_inode_gc</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/>)<sp/>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a33" kindref="member">fn_Cache_inode_ls</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a36" kindref="member">fn_Cache_inode_link</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a35" kindref="member">fn_Cache_inode_mkdir</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a39" kindref="member">fn_Cache_inode_rename</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a38" kindref="member">fn_Cache_inode_create</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a37" kindref="member">fn_Cache_inode_ln</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a41" kindref="member">fn_Cache_inode_setattr</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/><sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a40" kindref="member">fn_Cache_inode_unlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a34" kindref="member">fn_Cache_inode_callstat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a43" kindref="member">fn_Cache_inode_data_cache</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a45" kindref="member">fn_Cache_inode_recover_cache</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a46" kindref="member">fn_Cache_inode_refresh_cache</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a47" kindref="member">fn_Cache_inode_flush_cache</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a44" kindref="member">fn_Cache_inode_release_cache</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a48" kindref="member">fn_Cache_inode_read</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a49" kindref="member">fn_Cache_inode_write</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a50" kindref="member">fn_Cache_inode_su</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__Cache__inode_8c_1a42" kindref="member">fn_Cache_inode_access</ref>(<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------*</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NFS<sp/>commands<sp/>prototypes.</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>setloglevel<sp/>command<sp/>is<sp/>needed<sp/>for<sp/>each<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a19" kindref="member">nfs_layer_SetLogLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_lvl);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a22" kindref="member">fn_nfs_init</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a23" kindref="member">fn_MNT1_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a24" kindref="member">fn_MNT3_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a25" kindref="member">fn_NFS2_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a26" kindref="member">fn_NFS3_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a45" kindref="member">fn_nfs_cd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a44" kindref="member">fn_nfs_ls</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a41" kindref="member">fn_nfs_mount</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a42" kindref="member">fn_nfs_umount</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a43" kindref="member">fn_nfs_pwd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a46" kindref="member">fn_nfs_create</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a47" kindref="member">fn_nfs_mkdir</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a48" kindref="member">fn_nfs_unlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a49" kindref="member">fn_nfs_setattr</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a50" kindref="member">fn_nfs_rename</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a51" kindref="member">fn_nfs_hardlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a52" kindref="member">fn_nfs_ln</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a53" kindref="member">fn_nfs_stat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a54" kindref="member">fn_nfs_su</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS_8c_1a55" kindref="member">fn_nfs_id</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------*</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NFS_remote<sp/>commands<sp/>prototypes.</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>setloglevel<sp/>command<sp/>is<sp/>needed<sp/>for<sp/>each<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a35" kindref="member">nfs_remote_layer_SetLogLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_lvl);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a34" kindref="member">fn_rpc_init</ref>(<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a36" kindref="member">fn_MNT1_remote_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a37" kindref="member">fn_MNT3_remote_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a38" kindref="member">fn_NFS2_remote_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a39" kindref="member">fn_NFS3_remote_command</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a61" kindref="member">fn_nfs_remote_cd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a60" kindref="member">fn_nfs_remote_ls</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a57" kindref="member">fn_nfs_remote_mount</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a58" kindref="member">fn_nfs_remote_umount</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a59" kindref="member">fn_nfs_remote_pwd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a62" kindref="member">fn_nfs_remote_create</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a63" kindref="member">fn_nfs_remote_mkdir</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a64" kindref="member">fn_nfs_remote_unlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a65" kindref="member">fn_nfs_remote_setattr</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a66" kindref="member">fn_nfs_remote_rename</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a67" kindref="member">fn_nfs_remote_hardlink</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a68" kindref="member">fn_nfs_remote_ln</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a69" kindref="member">fn_nfs_remote_stat</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a70" kindref="member">fn_nfs_remote_su</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commands__NFS__remote_8c_1a71" kindref="member">fn_nfs_remote_id</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>number<sp/>of<sp/>args<sp/>in<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv<sp/>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>arg<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>output<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>:<sp/>output<sp/>stream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Layers<sp/>and<sp/>commands<sp/>definitions</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FSAL<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/><sp/>commands_FSAL[]={</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;access&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_access,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test<sp/>access<sp/>rights&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;callstat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_callstat,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>stats<sp/>about<sp/>FSAL<sp/>calls&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_cat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>the<sp/>content<sp/>of<sp/>a<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_cd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_close,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;close<sp/>an<sp/>opened<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;close_byfileid&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_fsal_close,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;close<sp/>an<sp/>opened<sp/>file<sp/>by<sp/>fileid&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_create,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>regular<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cross&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_cross,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;traverse<sp/>a<sp/>junction&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;getxattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_getxattr,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>the<sp/>value<sp/>of<sp/>an<sp/>extended<sp/>attribute&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;handlecmp&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_handlecmp,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compare<sp/>2<sp/>handles&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;hardlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_hardlink,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>hardlink&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;init_fs&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_init_fs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initialize<sp/>filesystem&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_ln,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>symlink&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ls&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_ls,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>contents<sp/>of<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;lsxattrs&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_lsxattrs,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>extended<sp/>attributes<sp/>for<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_mkdir,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_open,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;open<sp/>an<sp/>existing<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;open_byname&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_fsal_open_byname,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;open<sp/>an<sp/>existing<sp/>file<sp/>by<sp/>name&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;open_byfileid&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_fsal_open_byfileid,<sp/></highlight><highlight class="stringliteral">&quot;open<sp/>an<sp/>existing<sp/>file<sp/>by<sp/>fileid&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;pwd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_pwd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>current<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rcp&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_rcp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;copy<sp/>a<sp/>file<sp/>to/from<sp/>a<sp/>local<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_read,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;read<sp/>data<sp/>from<sp/>current<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_rename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rename/move<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_setattr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>attributes<sp/>of<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_stat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>stat<sp/>about<sp/>a<sp/>filesystem<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;su&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_su,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>user&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;truncate&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_truncate,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>file<sp/>size&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;unlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_unlink,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;remove<sp/>a<sp/>filesystem<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_fsal_write,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;write<sp/>data<sp/>to<sp/>current<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>{NULL,NULL,<ref refid="Getopt_8c_1a0" kindref="member">NULL</ref>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal">};</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cache<sp/>inode<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/><sp/>commands_Cache_inode[]={</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;access&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_access,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test<sp/>access<sp/>rights&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;callstat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_callstat,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>stats<sp/>about<sp/>FSAL<sp/>calls&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_cd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_create,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>regular<sp/>file&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;data_cache&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_Cache_inode_data_cache,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cache<sp/>a<sp/>file<sp/>in<sp/>the<sp/>Data<sp/>Cache&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;flush_cache&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_Cache_inode_flush_cache,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;flushes<sp/>a<sp/>previously<sp/>Data<sp/>cached<sp/>entry&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;gc&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_gc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;run<sp/>the<sp/>garbagge<sp/>collector<sp/>on<sp/>the<sp/>cache<sp/>inode&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;hardlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_link,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>hard<sp/>link&quot;</highlight><highlight class="normal"><sp/><sp/>},<sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;init_cache&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_Cache_inode_cache_init,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initialize<sp/>filesystem&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_ln,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;creates<sp/>a<sp/>new<sp/>symbolic<sp/>link&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ls&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_ls,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>contents<sp/>of<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_mkdir,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>new<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_read,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reads<sp/>the<sp/>content<sp/>of<sp/>a<sp/>data<sp/>cached<sp/>file&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;recover_cache&quot;</highlight><highlight class="normal">,<sp/>fn_Cache_inode_recover_cache,<sp/></highlight><highlight class="stringliteral">&quot;recover<sp/>the<sp/>data<sp/>cache<sp/>after<sp/>a<sp/>crash&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;refresh_cache&quot;</highlight><highlight class="normal">,<sp/>fn_Cache_inode_refresh_cache,<sp/></highlight><highlight class="stringliteral">&quot;refreshes<sp/>a<sp/>previously<sp/>Data<sp/>cached<sp/>entry&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;release_cache&quot;</highlight><highlight class="normal">,<sp/>fn_Cache_inode_release_cache,<sp/></highlight><highlight class="stringliteral">&quot;releases<sp/>a<sp/>previously<sp/>Data<sp/>cached<sp/>entry&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_rename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rename/move<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_setattr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>attributes<sp/>of<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;pwd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_pwd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>current<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_stat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;display<sp/>stat<sp/>about<sp/>a<sp/>filesystem<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;su&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_su,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>user&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;unlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_unlink,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unlink<sp/>an<sp/>entry<sp/>in<sp/>a<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_Cache_inode_write,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;writes<sp/>the<sp/>content<sp/>of<sp/>a<sp/>data<sp/>cached<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>{NULL,NULL,<ref refid="Getopt_8c_1a0" kindref="member">NULL</ref>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>command<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">};</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/><sp/>commands_NFS[]={</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs_init&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initialize<sp/>NFS<sp/>layer&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_NULL<sp/>v1&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_MNT<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_dump&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_DUMP<sp/>v1&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNT<sp/>v1&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_umount_all&quot;</highlight><highlight class="normal">,fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNTALL<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_export&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT1_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_EXPORT<sp/>v1&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_NULL<sp/>v3&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_MNT<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_dump&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_DUMP<sp/>v3&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNT<sp/>v3&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_umount_all&quot;</highlight><highlight class="normal">,fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNTALL<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_export&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_EXPORT<sp/>v3&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_NULL&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_getattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_GETATTR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_SETATTR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_root&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_ROOT&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_lookup&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_LOOKUP&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_readlink&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READLINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READ&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_writecache&quot;</highlight><highlight class="normal">,fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_WRITECACHE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_WRITE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_CREATE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_remove&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_REMOVE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_RENAME&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_link&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_LINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_symlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_SYMLINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_MKDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_rmdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_RMDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_readdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_statfs&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/><sp/>fn_NFS2_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_STATFS&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_NULL&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_getattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_GETATTR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_SETATTR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_lookup&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_LOOKUP&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_access&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_ACCESS&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readlink&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READLINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READ&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_WRITE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_CREATE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_MKDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_symlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_SYMLINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_mknod&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_MKNOD&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_remove&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_REMOVE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_rmdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_RMDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_RENAME&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_link&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_LINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readdirplus&quot;</highlight><highlight class="normal">,fn_NFS3_command,<sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READDIRPLUS&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_fsstat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_FSSTAT&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_fsinfo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_FSINFO&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_pathconf&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_PATHCONF&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_commit&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_COMMIT&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_cd,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>directory&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_create,</highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>regular<sp/>file&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;hardlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_hardlink,</highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>hard<sp/>link&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_ln,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>symbolic<sp/>link&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ls&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_ls,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>contents<sp/>of<sp/>directory&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_mkdir,<sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>directory&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_mount,<sp/></highlight><highlight class="stringliteral">&quot;mount<sp/>an<sp/>exported<sp/>path&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_umount,<sp/></highlight><highlight class="stringliteral">&quot;umount<sp/>a<sp/>mounted<sp/>path&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;pwd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_pwd,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>current<sp/>path&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_rename,</highlight><highlight class="stringliteral">&quot;rename/move<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_setattr,</highlight><highlight class="stringliteral">&quot;change<sp/>object<sp/>attributes&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_stat,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;show<sp/>file<sp/>attributes&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;su&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_su,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>user&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_id,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;show<sp/>who<sp/>I<sp/>am&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;unlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_unlink,<sp/></highlight><highlight class="stringliteral">&quot;remove<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>{NULL,NULL,<ref refid="Getopt_8c_1a0" kindref="member">NULL</ref>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>NFS<sp/>command<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal">};<sp/><sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcommand__def____" kindref="compound">command_def_t</ref><sp/><sp/>commands_NFS_remote[]={</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rpc_init&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_rpc_init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initialize<sp/>RPCs&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_NULL<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_MNT<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_dump&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_DUMP<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNT<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_umount_all&quot;</highlight><highlight class="normal">,fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNTALL<sp/>v1&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt1_export&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT1_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_EXPORT<sp/>v1&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_NULL<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_MNT<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_dump&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_DUMP<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNT<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_umount_all&quot;</highlight><highlight class="normal">,fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_UMNTALL<sp/>v3&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mnt3_export&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_MNT3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MNTPROC_EXPORT<sp/>v3&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_NULL&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_getattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_GETATTR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_SETATTR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_root&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_ROOT&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_lookup&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_LOOKUP&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_readlink&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READLINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READ&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_writecache&quot;</highlight><highlight class="normal">,fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_WRITECACHE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_WRITE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_CREATE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_remove&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_REMOVE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_RENAME&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_link&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_LINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_symlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_SYMLINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_MKDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_rmdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_RMDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_readdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_READDIR&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs2_statfs&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/><sp/>fn_NFS2_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC_STATFS&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_null&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_NULL&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_getattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_GETATTR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_SETATTR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_lookup&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_LOOKUP&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_access&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_ACCESS&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readlink&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READLINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_read&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READ&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_write&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_WRITE&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_CREATE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_MKDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_symlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_SYMLINK&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_mknod&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_MKNOD&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_remove&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_REMOVE&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_rmdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_RMDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_RENAME&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_link&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_LINK&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READDIR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_readdirplus&quot;</highlight><highlight class="normal">,fn_NFS3_remote_command,<sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_READDIRPLUS&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_fsstat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_FSSTAT&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_fsinfo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_FSINFO&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_pathconf&quot;</highlight><highlight class="normal">,<sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_PATHCONF&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nfs3_commit&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>fn_NFS3_remote_command,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSPROC3_COMMIT&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_cd,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_create,</highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>regular<sp/>file&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;hardlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_hardlink,</highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>hard<sp/>link&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_ln,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>symbolic<sp/>link&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ls&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_ls,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>contents<sp/>of<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mkdir&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_mkdir,<sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>directory&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;mount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_mount,<sp/></highlight><highlight class="stringliteral">&quot;mount<sp/>an<sp/>exported<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;umount&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_umount,<sp/></highlight><highlight class="stringliteral">&quot;umount<sp/>a<sp/>mounted<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;pwd&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_pwd,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>current<sp/>path&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;rename&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_rename,</highlight><highlight class="stringliteral">&quot;rename/move<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;setattr&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_setattr,</highlight><highlight class="stringliteral">&quot;change<sp/>object<sp/>attributes&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_stat,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;show<sp/>file<sp/>attributes&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;su&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_su,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;change<sp/>current<sp/>user&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_id,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;show<sp/>who<sp/>I<sp/>am&quot;</highlight><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;unlink&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_nfs_remote_unlink,<sp/></highlight><highlight class="stringliteral">&quot;remove<sp/>an<sp/>object&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>{NULL,NULL,<ref refid="Getopt_8c_1a0" kindref="member">NULL</ref>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>NFS<sp/>command<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">};<sp/><sp/></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlayer__def____" kindref="compound">layer_def_t</ref><sp/>layer_list[]=<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;FSAL&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commands_FSAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;File<sp/>system<sp/>abstraction<sp/>layer&quot;</highlight><highlight class="normal">,<ref refid="commands_8h_1a5" kindref="member">fsal_layer_SetLogLevel</ref>},</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Cache_inode&quot;</highlight><highlight class="normal">,<sp/><sp/>commands_Cache_inode,<sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>inode<sp/>layer&quot;</highlight><highlight class="normal">,<sp/><ref refid="commands_8h_1a35" kindref="member">Cache_inode_layer_SetLogLevel</ref>},</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;NFS&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commands_NFS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSv2,<sp/>NFSv3,<sp/>MNTv1,<sp/>MNTv3<sp/>protocols<sp/>(direct<sp/>calls,<sp/>not<sp/>through<sp/>RPCs)&quot;</highlight><highlight class="normal">,<ref refid="commands_8h_1a59" kindref="member">nfs_layer_SetLogLevel</ref>},</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;NFS_remote&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>commands_NFS_remote,<sp/><sp/></highlight><highlight class="stringliteral">&quot;NFSv2,<sp/>NFSv3,<sp/>MNTv1,<sp/>MNTv3<sp/>protocols<sp/>(calls<sp/>through<sp/>RPCs)&quot;</highlight><highlight class="normal">,<ref refid="commands_8h_1a80" kindref="member">nfs_remote_layer_SetLogLevel</ref>},</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>{NULL,NULL,NULL,<ref refid="Getopt_8c_1a0" kindref="member">NULL</ref>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>layer<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal">};</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/shell/commands.h"/>
  </compounddef>
</doxygen>
