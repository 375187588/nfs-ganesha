<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="Rpc__prot_8c" kind="file">
    <compoundname>Rpc_prot.c</compoundname>
    <includes local="no">sys/param.h</includes>
    <includes local="yes">Rpc.h</includes>
    <incdepgraph>
      <node id="218">
        <label>Rpc_prot.c</label>
        <link refid="Rpc_prot.c"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>sys/param.h</label>
      </node>
      <node id="220">
        <label>Rpc.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Rpc__prot_8c_1a0" prot="public" static="no">
        <name>Xdr_u_int32_t</name>
        <param><defname>x</defname></param>
        <param><defname>a</defname></param>
        <initializer>Xdr_u_int( x, (u_int *)a )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="47" bodystart="47" bodyend="-1"/>
        <referencedby refid="Rpc__prot_8c_1a4" compoundref="Rpc__prot_8c" startline="77" endline="96">Xdr_accepted_reply</referencedby>
        <referencedby refid="Rpc__prot_8c_1a7" compoundref="Rpc__prot_8c" startline="143" endline="155">Xdr_callhdr</referencedby>
        <referencedby refid="Rpc__prot_8c_1a5" compoundref="Rpc__prot_8c" startline="101" endline="117">Xdr_rejected_reply</referencedby>
        <referencedby refid="Rpc__prot_8c_1a6" compoundref="Rpc__prot_8c" startline="127" endline="135">Xdr_replymsg</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Rpc__prot_8c_1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_opaque_auth</definition>
        <argsstring>(XDR *xdrs, struct opaque_auth *ap)</argsstring>
        <name>Xdr_opaque_auth</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>struct opaque_auth *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="56" bodystart="55" bodyend="62"/>
        <references refid="Xdr_8c_1a21" compoundref="Xdr_8c" startline="526" endline="590">Xdr_bytes</references>
        <references refid="Xdr_8c_1a19" compoundref="Xdr_8c" startline="436" endline="460">Xdr_enum</references>
        <referencedby refid="Auth__none_8c_1a10" compoundref="Auth__none_8c" startline="102" endline="126">Authnone_create</referencedby>
        <referencedby refid="Rpc__prot_8c_1a4" compoundref="Rpc__prot_8c" startline="77" endline="96">Xdr_accepted_reply</referencedby>
        <referencedby refid="Rpc__cmsg_8c_1a0" compoundref="Rpc__cmsg_8c" startline="79" endline="219">Xdr_callmsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_des_block</definition>
        <argsstring>(XDR *xdrs, des_block *blkp)</argsstring>
        <name>Xdr_des_block</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>des_block *</type>
          <declname>blkp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="68" bodystart="67" bodyend="70"/>
        <references refid="Xdr_8c_1a20" compoundref="Xdr_8c" startline="468" endline="518">Xdr_opaque</references>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_accepted_reply</definition>
        <argsstring>(XDR *xdrs, struct accepted_reply *ar)</argsstring>
        <name>Xdr_accepted_reply</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>struct accepted_reply *</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="78" bodystart="77" bodyend="96"/>
        <references refid="Xdr_8c_1a19" compoundref="Xdr_8c" startline="436" endline="460">Xdr_enum</references>
        <references refid="Rpc__prot_8c_1a2" compoundref="Rpc__prot_8c" startline="55" endline="62">Xdr_opaque_auth</references>
        <references refid="Rpc__prot_8c_1a0" compoundref="Rpc__prot_8c" startline="47">Xdr_u_int32_t</references>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_rejected_reply</definition>
        <argsstring>(XDR *xdrs, struct rejected_reply *rr)</argsstring>
        <name>Xdr_rejected_reply</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>struct rejected_reply *</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="102" bodystart="101" bodyend="117"/>
        <references refid="Xdr_8c_1a19" compoundref="Xdr_8c" startline="436" endline="460">Xdr_enum</references>
        <references refid="Rpc__prot_8c_1a0" compoundref="Rpc__prot_8c" startline="47">Xdr_u_int32_t</references>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_replymsg</definition>
        <argsstring>(XDR *xdrs, struct Rpc_msg *rmsg)</argsstring>
        <name>Xdr_replymsg</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>struct Rpc_msg *</type>
          <declname>rmsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="128" bodystart="127" bodyend="135"/>
        <references refid="Xdr_8c_1a19" compoundref="Xdr_8c" startline="436" endline="460">Xdr_enum</references>
        <references refid="Rpc__prot_8c_1a0" compoundref="Rpc__prot_8c" startline="47">Xdr_u_int32_t</references>
        <references refid="Xdr_8c_1a23" compoundref="Xdr_8c" startline="616" endline="647">Xdr_union</references>
        <referencedby refid="Pmap__rmt_8c_1a6" compoundref="Pmap__rmt_8c" startline="208" endline="387">Clnt_broadcast</referencedby>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Xdr_callhdr</definition>
        <argsstring>(XDR *xdrs, struct Rpc_msg *cmsg)</argsstring>
        <name>Xdr_callhdr</name>
        <param>
          <type>XDR *</type>
          <declname>xdrs</declname>
        </param>
        <param>
          <type>struct Rpc_msg *</type>
          <declname>cmsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="144" bodystart="143" bodyend="155"/>
        <references refid="Xdr_8c_1a19" compoundref="Xdr_8c" startline="436" endline="460">Xdr_enum</references>
        <references refid="Rpc__prot_8c_1a0" compoundref="Rpc__prot_8c" startline="47">Xdr_u_int32_t</references>
        <referencedby refid="Clnt__raw_8c_1a10" compoundref="Clnt__raw_8c" startline="110" endline="150">Clntraw_create</referencedby>
        <referencedby refid="Clnt__tcp_8c_1a11" compoundref="Clnt__tcp_8c" startline="116" endline="233">Clnttcp_create</referencedby>
        <referencedby refid="Clnt__udp_8c_1a8" compoundref="Clnt__udp_8c" startline="112" endline="209">Clntudp_bufcreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void accepted</definition>
        <argsstring>(enum accept_stat acpt_stat, struct Rpc_err *error)</argsstring>
        <name>accepted</name>
        <param>
          <type>enum accept_stat</type>
          <declname>acpt_stat</declname>
        </param>
        <param>
          <type>struct Rpc_err *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="160" bodystart="159" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rejected</definition>
        <argsstring>(enum reject_stat rjct_stat, struct Rpc_err *error)</argsstring>
        <name>rejected</name>
        <param>
          <type>enum reject_stat</type>
          <declname>rjct_stat</declname>
        </param>
        <param>
          <type>struct Rpc_err *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="195" bodystart="194" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="Rpc__prot_8c_1a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _seterr_reply</definition>
        <argsstring>(struct Rpc_msg *msg, struct Rpc_err *error)</argsstring>
        <name>_seterr_reply</name>
        <param>
          <type>struct Rpc_msg *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>struct Rpc_err *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="217" bodystart="216" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Rpc__prot_8c_1a1" prot="public" static="yes" volatile="no" mutable="no">
        <type>Xdr_discrim</type>
        <definition>struct Xdr_discrim reply_dscrm[3]</definition>
        <argsstring>[3]</argsstring>
        <name>reply_dscrm</name>
        <initializer> {
	{ (int)MSG_ACCEPTED, Xdr_accepted_reply },
	{ (int)MSG_DENIED, Xdr_rejected_reply },
	{ __dontcare__, NULL_Xdrproc_t } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c" line="122" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Sun<sp/>RPC<sp/>is<sp/>a<sp/>product<sp/>of<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>and<sp/>is<sp/>provided<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>unrestricted<sp/>use<sp/>provided<sp/>that<sp/>this<sp/>legend<sp/>is<sp/>included<sp/>on<sp/>all<sp/>tape</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>media<sp/>and<sp/>as<sp/>a<sp/>part<sp/>of<sp/>the<sp/>software<sp/>program<sp/>in<sp/>whole<sp/>or<sp/>part.<sp/><sp/>Users</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>may<sp/>copy<sp/>or<sp/>modify<sp/>Sun<sp/>RPC<sp/>without<sp/>charge,<sp/>but<sp/>are<sp/>not<sp/>authorized</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>license<sp/>or<sp/>distribute<sp/>it<sp/>to<sp/>anyone<sp/>else<sp/>except<sp/>as<sp/>part<sp/>of<sp/>a<sp/>product<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>program<sp/>developed<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>SUN<sp/>RPC<sp/>IS<sp/>PROVIDED<sp/>AS<sp/>IS<sp/>WITH<sp/>NO<sp/>WARRANTIES<sp/>OF<sp/>ANY<sp/>KIND<sp/>INCLUDING<sp/>THE</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>DESIGN,<sp/>MERCHANTIBILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>PURPOSE,<sp/>OR<sp/>ARISING<sp/>FROM<sp/>A<sp/>COURSE<sp/>OF<sp/>DEALING,<sp/>USAGE<sp/>OR<sp/>TRADE<sp/>PRACTICE.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Sun<sp/>RPC<sp/>is<sp/>provided<sp/>with<sp/>no<sp/>support<sp/>and<sp/>without<sp/>any<sp/>obligation<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>part<sp/>of<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>to<sp/>assist<sp/>in<sp/>its<sp/>use,<sp/>correction,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>modification<sp/>or<sp/>enhancement.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>SUN<sp/>MICROSYSTEMS,<sp/>INC.<sp/>SHALL<sp/>HAVE<sp/>NO<sp/>LIABILITY<sp/>WITH<sp/>RESPECT<sp/>TO<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OF<sp/>COPYRIGHTS,<sp/>TRADE<sp/>SECRETS<sp/>OR<sp/>ANY<sp/>PATENTS<sp/>BY<sp/>SUN<sp/>RPC</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OR<sp/>ANY<sp/>PART<sp/>THEREOF.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>In<sp/>no<sp/>event<sp/>will<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>be<sp/>liable<sp/>for<sp/>any<sp/>lost<sp/>revenue</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>or<sp/>profits<sp/>or<sp/>other<sp/>special,<sp/>indirect<sp/>and<sp/>consequential<sp/>damages,<sp/>even<sp/>if</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Sun<sp/>has<sp/>been<sp/>advised<sp/>of<sp/>the<sp/>possibility<sp/>of<sp/>such<sp/>damages.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Sun<sp/>Microsystems,<sp/>Inc.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>2550<sp/>Garcia<sp/>Avenue</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Mountain<sp/>View,<sp/>California<sp/><sp/>94043</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>rpc_prot.c</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1984,<sp/>Sun<sp/>Microsystems,<sp/>Inc.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>This<sp/>set<sp/>of<sp/>routines<sp/>implements<sp/>the<sp/>rpc<sp/>message<sp/>definition,</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>its<sp/>serializer<sp/>and<sp/>some<sp/>common<sp/>rpc<sp/>utility<sp/>routines.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>The<sp/>routines<sp/>are<sp/>meant<sp/>for<sp/>various<sp/>implementations<sp/>of<sp/>rpc<sp/>-</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>they<sp/>are<sp/>NOT<sp/>for<sp/>the<sp/>rpc<sp/>client<sp/>or<sp/>rpc<sp/>service<sp/>implementations!</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Because<sp/>authentication<sp/>stuff<sp/>is<sp/>easy<sp/>and<sp/>is<sp/>part<sp/>of<sp/>rpc,<sp/>the<sp/>opaque</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>routines<sp/>are<sp/>also<sp/>in<sp/>this<sp/>program.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Rpc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="Rpc__prot_8c_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>Xdr_u_int32_t(<sp/>x,<sp/>a<sp/>)<sp/><sp/>Xdr_u_int(<sp/>x,<sp/>(u_int<sp/>*)a<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>XDR<sp/>Authentication<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>XDR<sp/>an<sp/>opaque<sp/>authentication<sp/>struct</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>(see<sp/>auth.h)</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="Rpc__prot_8c_1a2" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a2" kindref="member">Xdr_opaque_auth</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>opaque_auth<sp/>*<sp/>ap)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>&amp;(ap-&gt;oa_flavor)))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Xdr_8c_1a21" kindref="member">Xdr_bytes</ref>(xdrs,<sp/>&amp;ap-&gt;oa_base,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ap-&gt;oa_length,<sp/>MAX_AUTH_BYTES));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>XDR<sp/>a<sp/>DES<sp/>block</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="Rpc__prot_8c_1a3" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a3" kindref="member">Xdr_des_block</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/>des_block<sp/>*<sp/>blkp)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Xdr_8c_1a20" kindref="member">Xdr_opaque</ref>(xdrs,<sp/>(caddr_t)blkp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(des_block)));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>XDR<sp/>RPC<sp/>MESSAGE<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>XDR<sp/>the<sp/>MSG_ACCEPTED<sp/>part<sp/>of<sp/>a<sp/>reply<sp/>message<sp/>union</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="Rpc__prot_8c_1a4" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a4" kindref="member">Xdr_accepted_reply</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>accepted_reply<sp/>*<sp/>ar)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>personalized<sp/>union,<sp/>rather<sp/>than<sp/>calling<sp/>xdr_union<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="Rpc__prot_8c_1a2" kindref="member">Xdr_opaque_auth</ref>(xdrs,<sp/>&amp;(ar-&gt;ar_verf)))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(ar-&gt;ar_stat)))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ar-&gt;ar_stat)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SUCCESS:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*(ar-&gt;ar_results.proc))(xdrs,<sp/>ar-&gt;ar_results.where));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PROG_MISMATCH:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(ar-&gt;ar_vers.low)))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(ar-&gt;ar_vers.high)));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TRUE);<sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>=&gt;<sp/>open<sp/>ended<sp/>set<sp/>of<sp/>problems<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>XDR<sp/>the<sp/>MSG_DENIED<sp/>part<sp/>of<sp/>a<sp/>reply<sp/>message<sp/>union</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="Rpc__prot_8c_1a5" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a5" kindref="member">Xdr_rejected_reply</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>rejected_reply<sp/>*<sp/>rr)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>personalized<sp/>union,<sp/>rather<sp/>than<sp/>calling<sp/>xdr_union<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(rr-&gt;rj_stat)))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rr-&gt;rj_stat)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RPC_MISMATCH:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(rr-&gt;rj_vers.low)))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(rr-&gt;rj_vers.high)));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AUTH_ERROR:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(rr-&gt;rj_why)));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Xdr_discrim<sp/>reply_dscrm[3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(int)MSG_ACCEPTED,<sp/><ref refid="Rpc__prot_8c_1a4" kindref="member">Xdr_accepted_reply</ref><sp/>},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(int)MSG_DENIED,<sp/><ref refid="Rpc__prot_8c_1a5" kindref="member">Xdr_rejected_reply</ref><sp/>},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>__dontcare__,<sp/>NULL_Xdrproc_t<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>XDR<sp/>a<sp/>reply<sp/>message</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="Rpc__prot_8c_1a6" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a6" kindref="member">Xdr_replymsg</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_msg<sp/>*<sp/>rmsg)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(rmsg-&gt;rm_xid))<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(rmsg-&gt;rm_direction))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg-&gt;rm_direction<sp/>==<sp/>REPLY)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Xdr_8c_1a23" kindref="member">Xdr_union</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(rmsg-&gt;rm_reply.rp_stat),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(caddr_t)&amp;(rmsg-&gt;rm_reply.ru),<sp/>reply_dscrm,<sp/>NULL_Xdrproc_t));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>Serializes<sp/>the<sp/>&quot;static<sp/>part&quot;<sp/>of<sp/>a<sp/>call<sp/>message<sp/>header.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>The<sp/>fields<sp/>include:<sp/>rm_xid,<sp/>rm_direction,<sp/>rpcvers,<sp/>prog,<sp/>and<sp/>vers.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>The<sp/>rm_xid<sp/>is<sp/>not<sp/>really<sp/>static,<sp/>but<sp/>the<sp/>user<sp/>can<sp/>easily<sp/>munge<sp/>on<sp/>the<sp/>fly.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="Rpc__prot_8c_1a7" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Rpc__prot_8c_1a7" kindref="member">Xdr_callhdr</ref>(<sp/>XDR<sp/>*<sp/>xdrs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_msg<sp/>*<sp/>cmsg)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg-&gt;rm_direction<sp/>=<sp/>CALL;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg-&gt;rm_call.cb_rpcvers<sp/>=<sp/>RPC_MSG_VERSION;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdrs-&gt;x_op<sp/>==<sp/>XDR_ENCODE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(cmsg-&gt;rm_xid))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Xdr_8c_1a19" kindref="member">Xdr_enum</ref>(xdrs,<sp/>(enum_t<sp/>*)&amp;(cmsg-&gt;rm_direction))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(cmsg-&gt;rm_call.cb_rpcvers))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(cmsg-&gt;rm_call.cb_prog)))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Rpc__prot_8c_1a0" kindref="member">Xdr_u_int32_t</ref>(xdrs,<sp/>&amp;(cmsg-&gt;rm_call.cb_vers)));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************<sp/>Client<sp/>utility<sp/>routine<sp/>*************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accepted(<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>accept_stat<sp/>acpt_stat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_err<sp/>*<sp/>error)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(acpt_stat)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PROG_UNAVAIL:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_PROGUNAVAIL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PROG_MISMATCH:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_PROGVERSMISMATCH;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PROC_UNAVAIL:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_PROCUNAVAIL;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GARBAGE_ARGS:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_CANTDECODEARGS;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SYSTEM_ERR:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_SYSTEMERROR;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SUCCESS:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_SUCCESS;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>something&apos;s<sp/>wrong,<sp/>but<sp/>we<sp/>don&apos;t<sp/>know<sp/>what<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_FAILED;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_lb.s1<sp/>=<sp/>(long)MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_lb.s2<sp/>=<sp/>(long)acpt_stat;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rejected(<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>reject_stat<sp/>rjct_stat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_err<sp/>*<sp/>error)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rjct_stat)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RPC_MISMATCH:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_VERSMISMATCH;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AUTH_ERROR:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_AUTHERROR;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>something&apos;s<sp/>wrong,<sp/>but<sp/>we<sp/>don&apos;t<sp/>know<sp/>what<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_FAILED;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_lb.s1<sp/>=<sp/>(long)MSG_DENIED;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_lb.s2<sp/>=<sp/>(long)rjct_stat;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>given<sp/>a<sp/>reply<sp/>message,<sp/>fills<sp/>in<sp/>the<sp/>error</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="Rpc__prot_8c_1a10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Rpc__prot_8c_1a10" kindref="member">_seterr_reply</ref>(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_msg<sp/>*<sp/>msg,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Rpc_err<sp/>*<sp/>error)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>optimized<sp/>for<sp/>normal,<sp/>SUCCESSful<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg-&gt;rm_reply.rp_stat)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSG_ACCEPTED:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;acpted_rply.ar_stat<sp/>==<sp/>SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_SUCCESS;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accepted(msg-&gt;acpted_rply.ar_stat,<sp/>error);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSG_DENIED:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rejected(msg-&gt;rjcted_rply.rj_stat,<sp/>error);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_status<sp/>=<sp/>RPC_FAILED;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_lb.s1<sp/>=<sp/>(long)(msg-&gt;rm_reply.rp_stat);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error-&gt;re_status)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RPC_VERSMISMATCH:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_vers.low<sp/>=<sp/>msg-&gt;rjcted_rply.rj_vers.low;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_vers.high<sp/>=<sp/>msg-&gt;rjcted_rply.rj_vers.high;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RPC_AUTHERROR:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_why<sp/>=<sp/>msg-&gt;rjcted_rply.rj_why;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RPC_PROGVERSMISMATCH:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_vers.low<sp/>=<sp/>msg-&gt;acpted_rply.ar_vers.low;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error-&gt;re_vers.high<sp/>=<sp/>msg-&gt;acpted_rply.ar_vers.high;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Rpc_prot.c"/>
  </compounddef>
</doxygen>
