<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="Svc_8c" kind="file">
    <compoundname>Svc.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/errno.h</includes>
    <includes local="yes">Rpc.h</includes>
    <includes local="yes">Clnt.h</includes>
    <includes local="yes">Pmap_clnt.h</includes>
    <includes local="yes">Svc.h</includes>
    <incdepgraph>
      <node id="340">
        <label>sys/errno.h</label>
      </node>
      <node id="338">
        <label>stdlib.h</label>
      </node>
      <node id="342">
        <label>Clnt.h</label>
      </node>
      <node id="339">
        <label>string.h</label>
      </node>
      <node id="341">
        <label>Rpc.h</label>
      </node>
      <node id="343">
        <label>Pmap_clnt.h</label>
      </node>
      <node id="337">
        <label>Svc.c</label>
        <link refid="Svc.c"/>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>Svc.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsvc__callout">svc_callout</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="Svc_8c_1a0" prot="public" static="no">
        <name>NULL_SVC</name>
        <initializer>((struct svc_callout *)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="13" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Svc_8c_1a1" prot="public" static="no">
        <name>RQCRED_SIZE</name>
        <initializer>400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="14" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Svc_8c_1a2" prot="public" static="no">
        <name>max</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(a &gt; b ? a : b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="16" bodystart="16" bodyend="-1"/>
        <referencedby refid="Svc_8c_1a8" compoundref="Svc_8c" startline="51" endline="70">Xprt_register</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Svc_8c_1a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>svc_callout *</type>
        <definition>struct svc_callout* Svc_find</definition>
        <argsstring>()</argsstring>
        <name>Svc_find</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="38"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Xprt_register</definition>
        <argsstring>(SVCXPRT *xprt)</argsstring>
        <name>Xprt_register</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="52" bodystart="51" bodyend="70"/>
        <references refid="Svc_8c_1a2" compoundref="Svc_8c" startline="16">max</references>
        <references refid="Svc_8c_1a6" compoundref="Svc_8c" startline="43">Svc_fdset</references>
        <references refid="Svc_8c_1a5" compoundref="Svc_8c" startline="41">svc_maxfd</references>
        <references refid="Svc_8c_1a3" compoundref="Svc_8c" startline="11">Xports</references>
        <referencedby refid="Svc__tcp_8c_1a14" compoundref="Svc__tcp_8c" startline="87" endline="146">Svctcp_create</referencedby>
        <referencedby refid="Svc__udp_8c_1a10" compoundref="Svc__udp_8c" startline="60" endline="143">Svcudp_bufcreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Xprt_unregister</definition>
        <argsstring>(SVCXPRT *xprt)</argsstring>
        <name>Xprt_unregister</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="77" bodystart="76" bodyend="91"/>
        <references refid="Svc_8c_1a6" compoundref="Svc_8c" startline="43">Svc_fdset</references>
        <references refid="Svc_8c_1a5" compoundref="Svc_8c" startline="41">svc_maxfd</references>
        <references refid="Svc_8c_1a3" compoundref="Svc_8c" startline="11">Xports</references>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Svc_register</definition>
        <argsstring>(SVCXPRT *xprt, u_long prog, u_long vers, void(*dispatch)(), int protocol)</argsstring>
        <name>Svc_register</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>prog</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>vers</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>dispatch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="104" bodystart="103" bodyend="128"/>
        <references refid="Pmap__clnt_8c_1a3" compoundref="Pmap__clnt_8c" startline="51" endline="80">Pmap_set</references>
        <referencedby refid="onc__rpc__server_8c_1a14" compoundref="onc__rpc__server_8c" startline="105" endline="230">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svc_unregister</definition>
        <argsstring>(u_long prog, u_long vers)</argsstring>
        <name>Svc_unregister</name>
        <param>
          <type>u_long</type>
          <declname>prog</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>vers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="135" bodystart="134" bodyend="150"/>
        <references refid="Pmap__clnt_8c_1a4" compoundref="Pmap__clnt_8c" startline="86" endline="111">Pmap_unset</references>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>svc_callout *</type>
        <definition>struct svc_callout* Svc_find</definition>
        <argsstring>(u_long prog, u_long vers, struct svc_callout **prev)</argsstring>
        <name>Svc_find</name>
        <param>
          <type>u_long</type>
          <declname>prog</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>vers</declname>
        </param>
        <param>
          <type>struct svc_callout **</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="157" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svc_getreqset</definition>
        <argsstring>(fd_set *readfds)</argsstring>
        <name>Svc_getreqset</name>
        <param>
          <type>fd_set *</type>
          <declname>readfds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="172" bodystart="171" bodyend="268"/>
        <references refid="Svc__auth_8c_1a7" compoundref="Svc__auth_8c" startline="90" endline="104">Svc_authenticate</references>
        <references refid="Svc_8c_1a3" compoundref="Svc_8c" startline="11">Xports</references>
        <referencedby refid="Svc__run_8c_1a1" compoundref="Svc__run_8c" startline="65" endline="98">Svc_run</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Svc_sendreply</definition>
        <argsstring>(register SVCXPRT *xprt, Xdrproc_t xdr_results, caddr_t xdr_location)</argsstring>
        <name>Svc_sendreply</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <param>
          <type>Xdrproc_t</type>
          <declname>xdr_results</declname>
        </param>
        <param>
          <type>caddr_t</type>
          <declname>xdr_location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="272" bodystart="271" bodyend="282"/>
        <referencedby refid="onc__rpc__server_8c_1a13" compoundref="onc__rpc__server_8c" startline="63" endline="103">dispatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_noproc</definition>
        <argsstring>(register SVCXPRT *xprt)</argsstring>
        <name>Svcerr_noproc</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="288" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_decode</definition>
        <argsstring>(register SVCXPRT *xprt)</argsstring>
        <name>Svcerr_decode</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="303" bodystart="302" bodyend="311"/>
        <referencedby refid="onc__rpc__server_8c_1a13" compoundref="onc__rpc__server_8c" startline="63" endline="103">dispatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_systemerr</definition>
        <argsstring>(register SVCXPRT *xprt)</argsstring>
        <name>Svcerr_systemerr</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="317" bodystart="316" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_auth</definition>
        <argsstring>(SVCXPRT *xprt, enum Auth_stat why)</argsstring>
        <name>Svcerr_auth</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <param>
          <type>enum Auth_stat</type>
          <declname>why</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="331" bodystart="330" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_weakauth</definition>
        <argsstring>(SVCXPRT *xprt)</argsstring>
        <name>Svcerr_weakauth</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="345" bodystart="344" bodyend="348"/>
        <referencedby refid="rpcsec__gss__server_8c_1a17" compoundref="rpcsec__gss__server_8c" startline="100" endline="170">dispatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_noprog</definition>
        <argsstring>(register SVCXPRT *xprt)</argsstring>
        <name>Svcerr_noprog</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="354" bodystart="353" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="Svc_8c_1a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Svcerr_progvers</definition>
        <argsstring>(register SVCXPRT *xprt, u_long low_vers, u_long high_vers)</argsstring>
        <name>Svcerr_progvers</name>
        <param>
          <type>register SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>low_vers</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>high_vers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="368" bodystart="367" bodyend="378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Svc_8c_1a3" prot="public" static="no" volatile="no" mutable="no">
        <type>SVCXPRT **</type>
        <definition>SVCXPRT** Xports</definition>
        <argsstring></argsstring>
        <name>Xports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="11" bodystart="11" bodyend="-1"/>
        <referencedby refid="Svc_8c_1a13" compoundref="Svc_8c" startline="171" endline="268">Svc_getreqset</referencedby>
        <referencedby refid="Svc_8c_1a8" compoundref="Svc_8c" startline="51" endline="70">Xprt_register</referencedby>
        <referencedby refid="Svc_8c_1a9" compoundref="Svc_8c" startline="76" endline="91">Xprt_unregister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="Svc_8c_1a4" prot="public" static="yes" volatile="no" mutable="no">
        <type>svc_callout *</type>
        <definition>struct svc_callout * svc_head</definition>
        <argsstring></argsstring>
        <name>svc_head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="36"/>
      </memberdef>
      <memberdef kind="variable" id="Svc_8c_1a5" prot="public" static="no" volatile="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int svc_maxfd</definition>
        <argsstring></argsstring>
        <name>svc_maxfd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="41" bodystart="41" bodyend="-1"/>
        <referencedby refid="Svc_8c_1a8" compoundref="Svc_8c" startline="51" endline="70">Xprt_register</referencedby>
        <referencedby refid="Svc_8c_1a9" compoundref="Svc_8c" startline="76" endline="91">Xprt_unregister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="Svc_8c_1a6" prot="public" static="no" volatile="no" mutable="no">
        <type>fd_set</type>
        <definition>fd_set Svc_fdset</definition>
        <argsstring></argsstring>
        <name>Svc_fdset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c" line="43" bodystart="43" bodyend="-1"/>
        <referencedby refid="Svc_8c_1a8" compoundref="Svc_8c" startline="51" endline="70">Xprt_register</referencedby>
        <referencedby refid="Svc_8c_1a9" compoundref="Svc_8c" startline="76" endline="91">Xprt_unregister</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&lt;sys/errno.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&quot;Rpc.h&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&quot;Clnt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&quot;Pmap_clnt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/>&quot;Svc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="Svc_8c_1a3" refkind="member"><highlight class="normal">SVCXPRT<sp/>**Xports;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="Svc_8c_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NULL_SVC<sp/>((struct<sp/>svc_callout<sp/>*)0)</highlight></codeline>
<codeline lineno="14" refid="Svc_8c_1a1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RQCRED_SIZE<sp/><sp/><sp/><sp/><sp/>400<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>size<sp/>is<sp/>excessive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="Svc_8c_1a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(a,<sp/>b)<sp/>(a<sp/>&gt;<sp/>b<sp/>?<sp/>a<sp/>:<sp/>b)</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SunOS_5</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_authenticate<sp/>Svc_authenticate</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>xp_stat</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>xp_statv</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>The<sp/>services<sp/>list</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Each<sp/>entry<sp/>represents<sp/>a<sp/>set<sp/>of<sp/>procedures<sp/>(an<sp/>rpc<sp/>program).</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>The<sp/>dispatch<sp/>routine<sp/>takes<sp/>request<sp/>structs<sp/>and<sp/>runs<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>apropriate<sp/>procedure.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*sc_next;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc_prog;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_long<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc_vers;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*sc_dispatch)();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/>*svc_head;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*Svc_find();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Un<sp/>rajout<sp/>pour<sp/>voir<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="Svc_8c_1a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>svc_maxfd<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="Svc__run_8c_1a0" refkind="member"><highlight class="normal">fd_set<sp/>Svc_fdset<sp/><sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>***************<sp/><sp/>SVCXPRT<sp/>related<sp/>stuff<sp/>****************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Activate<sp/>a<sp/>transport<sp/>handle.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="Svc_8c_1a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a8" kindref="member">Xprt_register</ref>(<sp/>SVCXPRT<sp/>*<sp/>xprt)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>xprt-&gt;xp_sock;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Svc_8c_1a3" kindref="member">Xports</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc_8c_1a3" kindref="member">Xports</ref><sp/>=<sp/>(SVCXPRT<sp/>**)mem_alloc(FD_SETSIZE<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SVCXPRT<sp/>*));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/><ref refid="Svc_8c_1a3" kindref="member">Xports</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>FD_SETSIZE<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SVCXPRT<sp/>*));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>&lt;<sp/>FD_SETSIZE)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc_8c_1a3" kindref="member">Xports</ref>[sock]<sp/>=<sp/>xprt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xprt-&gt;xp_auth<sp/>=<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(sock,<sp/>&amp;<ref refid="Svc_8c_1a6" kindref="member">Svc_fdset</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc_8c_1a5" kindref="member">svc_maxfd</ref><sp/>=<sp/><ref refid="Svc_8c_1a2" kindref="member">max</ref>(<ref refid="Svc_8c_1a5" kindref="member">svc_maxfd</ref>,<sp/>sock);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>De-activate<sp/>a<sp/>transport<sp/>handle.<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="Svc_8c_1a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a9" kindref="member">Xprt_unregister</ref>(SVCXPRT<sp/>*<sp/>xprt)<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>xprt-&gt;xp_sock;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sock<sp/>&lt;<sp/>FD_SETSIZE)<sp/>&amp;&amp;<sp/>(<ref refid="Svc_8c_1a3" kindref="member">Xports</ref>[sock]<sp/>==<sp/>xprt))<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc_8c_1a3" kindref="member">Xports</ref>[sock]<sp/>=<sp/>(SVCXPRT<sp/>*)0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FD_CLR(sock,<sp/>&amp;<ref refid="Svc_8c_1a6" kindref="member">Svc_fdset</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>svc_maxfd)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="Svc_8c_1a5" kindref="member">svc_maxfd</ref>--;<sp/><ref refid="Svc_8c_1a5" kindref="member">svc_maxfd</ref>&gt;=0;<sp/><ref refid="Svc_8c_1a5" kindref="member">svc_maxfd</ref>--)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="Svc_8c_1a3" kindref="member">Xports</ref>[svc_maxfd])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**********************<sp/>CALLOUT<sp/>list<sp/>related<sp/>stuff<sp/>*************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Add<sp/>a<sp/>service<sp/>program<sp/>to<sp/>the<sp/>callout<sp/>list.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>The<sp/>dispatch<sp/>routine<sp/>will<sp/>be<sp/>called<sp/>when<sp/>a<sp/>rpc<sp/>request<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>program<sp/>number<sp/>comes<sp/>in.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="Svc_8c_1a10" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Svc_8c_1a10" kindref="member">Svc_register</ref>(SVCXPRT<sp/>*<sp/>xprt,<sp/>u_long<sp/><sp/>prog,<sp/>u_long<sp/><sp/>vers,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dispatch)(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*prev;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*s;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s<sp/>=<sp/>Svc_find(prog,<sp/>vers,<sp/>&amp;prev))<sp/>!=<sp/>NULL_SVC)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sc_dispatch<sp/>==<sp/>dispatch)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pmap_it;<sp/><sp/></highlight><highlight class="comment">/*<sp/>he<sp/>is<sp/>registering<sp/>another<sp/>xptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*)mem_alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_callout));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*)0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sc_prog<sp/>=<sp/>prog;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sc_vers<sp/>=<sp/>vers;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sc_dispatch<sp/>=<sp/>dispatch;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sc_next<sp/>=<sp/>svc_head;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svc_head<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>pmap_it:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>register<sp/>the<sp/>information<sp/>with<sp/>the<sp/>local<sp/>binder<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(protocol)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="Pmap__clnt_8c_1a3" kindref="member">Pmap_set</ref>(prog,<sp/>vers,<sp/>protocol,<sp/>xprt-&gt;xp_port));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TRUE);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>Remove<sp/>a<sp/>service<sp/>program<sp/>from<sp/>the<sp/>callout<sp/>list.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="Svc_8c_1a11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a11" kindref="member">Svc_unregister</ref>(u_long<sp/>prog,<sp/>u_long<sp/>vers)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*prev;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*s;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s<sp/>=<sp/>Svc_find(prog,<sp/>vers,<sp/>&amp;prev))<sp/>==<sp/>NULL_SVC)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>==<sp/>NULL_SVC)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svc_head<sp/>=<sp/>s-&gt;sc_next;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;sc_next<sp/>=<sp/>s-&gt;sc_next;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;sc_next<sp/>=<sp/>NULL_SVC;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_free((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>s,<sp/>(u_int)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_callout));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>unregister<sp/>the<sp/>information<sp/>with<sp/>the<sp/>local<sp/>binder<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="Pmap__clnt_8c_1a4" kindref="member">Pmap_unset</ref>(prog,<sp/>vers);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>Search<sp/>the<sp/>callout<sp/>list<sp/>for<sp/>a<sp/>program<sp/>number,<sp/>return<sp/>the<sp/>callout</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>struct.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*<sp/>Svc_find(<sp/>u_long<sp/>prog,<sp/>u_long<sp/>vers,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_callout<sp/>**prev<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*s,<sp/>*p;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL_SVC;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>svc_head;<sp/>s<sp/>!=<sp/>NULL_SVC;<sp/>s<sp/>=<sp/>s-&gt;sc_next)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;sc_prog<sp/>==<sp/>prog)<sp/>&amp;&amp;<sp/>(s-&gt;sc_vers<sp/>==<sp/>vers))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prev<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="Svc_8c_1a13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a13" kindref="member">Svc_getreqset</ref>(fd_set<sp/>*<sp/>readfds)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>xprt_stat<sp/>stat;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>msg;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prog_found;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_long<sp/>low_vers;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_long<sp/>high_vers;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Svc_req<sp/>r;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*xprt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>register<sp/>u_int32_t<sp/>mask,<sp/>*maskp;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>mask,<sp/>*maskp;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cred_area[2*MAX_AUTH_BYTES<sp/>+<sp/>RQCRED_SIZE];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.rm_call.cb_cred.oa_base<sp/>=<sp/>cred_area;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>struct<sp/>Svc_req<sp/>r<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;r,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Svc_req<sp/>)<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.rm_call.cb_verf.oa_base<sp/>=<sp/>&amp;(cred_area[MAX_AUTH_BYTES]);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_clntcred<sp/>=<sp/>&amp;(cred_area[2*MAX_AUTH_BYTES]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_LINUX</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskp<sp/>=<sp/>readfds-&gt;fds_bits;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>maskp<sp/>=<sp/>readfds-&gt;__fds_bits<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sock<sp/>=<sp/>0;<sp/>sock<sp/>&lt;<sp/>FD_SETSIZE;<sp/>sock<sp/>+=<sp/>NFDBITS)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mask<sp/>=<sp/>*maskp++;<sp/>bit<sp/>=<sp/>ffs(mask);<sp/>mask<sp/>^=<sp/>(1<sp/>&lt;&lt;<sp/>(bit<sp/>-<sp/>1)))<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sock<sp/>has<sp/>input<sp/>waiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xprt<sp/>=<sp/><ref refid="Svc_8c_1a3" kindref="member">Xports</ref>[sock<sp/>+<sp/>bit<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xprt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>But<sp/>do<sp/>we<sp/>control<sp/>sock?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>receive<sp/>msgs<sp/>from<sp/>xprtprt<sp/>(support<sp/>batch<sp/>calls)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVC_RECV(xprt,<sp/>&amp;msg))<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>find<sp/>the<sp/>exported<sp/>program<sp/>and<sp/>call<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_callout<sp/>*s;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Auth_stat<sp/>why;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_xprt<sp/>=<sp/>xprt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_prog<sp/>=<sp/>msg.rm_call.cb_prog;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_vers<sp/>=<sp/>msg.rm_call.cb_vers;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_proc<sp/>=<sp/>msg.rm_call.cb_proc;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.rq_cred<sp/>=<sp/>msg.rm_call.cb_cred;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>authenticate<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((why=<sp/><ref refid="Svc__auth_8c_1a7" kindref="member">Svc_authenticate</ref>(&amp;r,<sp/>&amp;msg))<sp/>!=<sp/>AUTH_OK)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svcerr_auth(xprt,<sp/>why);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>call_done;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>match<sp/>message<sp/>with<sp/>a<sp/>registered<sp/>service*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog_found<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_vers<sp/>=<sp/>0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high_vers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>svc_head;<sp/>s<sp/>!=<sp/>NULL_SVC;<sp/>s<sp/>=<sp/>s-&gt;sc_next)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sc_prog<sp/>==<sp/>r.rq_prog)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sc_vers<sp/>==<sp/>r.rq_vers)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*s-&gt;sc_dispatch)(&amp;r,<sp/>xprt);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>call_done;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>correct<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog_found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sc_vers<sp/>&lt;<sp/>low_vers)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_vers<sp/>=<sp/>s-&gt;sc_vers;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;sc_vers<sp/>&gt;<sp/>high_vers)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high_vers<sp/>=<sp/>s-&gt;sc_vers;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>correct<sp/>program<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>we<sp/>got<sp/>here,<sp/>the<sp/>program<sp/>or<sp/>version</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>not<sp/>served<sp/>...</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prog_found)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svcerr_progvers(xprt,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_vers,<sp/>high_vers);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svcerr_noprog(xprt);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>to<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_done:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stat<sp/>=<sp/>SVC_STAT(xprt))<sp/>==<sp/>XPRT_DIED<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_DESTROY(xprt);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stat<sp/>==<sp/>XPRT_MOREREQS);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="Svc_8c_1a14" refkind="member"><highlight class="normal">bool_t<sp/><ref refid="Svc_8c_1a14" kindref="member">Svc_sendreply</ref>(<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/>xprt,<sp/>Xdrproc_t<sp/>xdr_results,<sp/>caddr_t<sp/>xdr_location)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_results.where<sp/>=<sp/>xdr_location;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_results.proc<sp/>=<sp/>xdr_results;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(SVC_REPLY(xprt,<sp/>&amp;rply));</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>No<sp/>procedure<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="Svc_8c_1a15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a15" kindref="member">Svcerr_noproc</ref>(<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/>xprt)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>PROC_UNAVAIL;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>Can&apos;t<sp/>decode<sp/>args<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="Svc_8c_1a16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a16" kindref="member">Svcerr_decode</ref>(<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/>xprt)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>GARBAGE_ARGS;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>Some<sp/>system<sp/>error</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="Svc_8c_1a17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a17" kindref="member">Svcerr_systemerr</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/><sp/>xprt)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>SYSTEM_ERR;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>Authentication<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="Svc_8c_1a18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a18" kindref="member">Svcerr_auth</ref>(<sp/>SVCXPRT<sp/>*<sp/>xprt,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Auth_stat<sp/>why)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_DENIED;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rjcted_rply.rj_stat<sp/>=<sp/>AUTH_ERROR;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rjcted_rply.rj_why<sp/>=<sp/>why;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>Auth<sp/>too<sp/>weak<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="Svc_8c_1a19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a19" kindref="member">Svcerr_weakauth</ref>(<sp/>SVCXPRT<sp/>*<sp/>xprt)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svcerr_auth(xprt,<sp/>AUTH_TOOWEAK);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>Program<sp/>unavailable<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="Svc_8c_1a20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a20" kindref="member">Svcerr_noprog</ref>(<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/>xprt)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>PROG_UNAVAIL;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>Program<sp/>version<sp/>mismatch<sp/>error<sp/>reply</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="Svc_8c_1a21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Svc_8c_1a21" kindref="member">Svcerr_progvers</ref>(<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<sp/>xprt,<sp/>u_long<sp/>low_vers,<sp/>u_long<sp/><sp/>high_vers)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rpc_msg<sp/>rply;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_direction<sp/>=<sp/>REPLY;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.rm_reply.rp_stat<sp/>=<sp/>MSG_ACCEPTED;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_verf<sp/>=<sp/>xprt-&gt;xp_verf;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_stat<sp/>=<sp/>PROG_MISMATCH;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_vers.low<sp/>=<sp/>low_vers;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rply.acpted_rply.ar_vers.high<sp/>=<sp/>high_vers;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_REPLY(xprt,<sp/>&amp;rply);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/RPCSEC_GSS/Svc.c"/>
  </compounddef>
</doxygen>
