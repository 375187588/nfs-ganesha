.TH "nfs_export_list.c" 3 "9 Apr 2008" "Version 0.1" "Support routines layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs_export_list.c \- routines for managing the export list. 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <sys/types.h>\fP
.br
\fC#include <ctype.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <dirent.h>\fP
.br
\fC#include <netdb.h>\fP
.br
\fC#include <netinet/in.h>\fP
.br
\fC#include <arpa/inet.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <sys/file.h>\fP
.br
\fC#include <pwd.h>\fP
.br
\fC#include <grp.h>\fP
.br
\fC#include <gssapi/gssapi.h>\fP
.br
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'nfs_tools.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "exportlist_t * \fBnfs_Get_export_by_id\fP (exportlist_t *exportroot, unsigned short exportid)"
.br
.ti -1c
.RI "int \fBnfs_build_fsal_context\fP (struct svc_req *ptr_req, exportlist_client_entry_t *pexport_client, exportlist_t *pexport, fsal_op_context_t *pcontext)"
.br
.ti -1c
.RI "int \fBnfs_compare_clientcred\fP (nfs_client_cred_t *pcred1, nfs_client_cred_t *pcred2)"
.br
.ti -1c
.RI "int \fBnfs_rpc_req2client_cred\fP (struct svc_req *reqp, nfs_client_cred_t *pcred)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBRpc_gss_svc_name\fP [] = { 'no name', 'RPCSEC_GSS_SVC_NONE', 'RPCSEC_GSS_SVC_INTEGRITY', 'RPCSEC_GSS_SVC_PRIVACY' }"
.br
.in -1c
.SH "Detailed Description"
.PP 
routines for managing the export list. 

\fBAuthor:\fP
.RS 4
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
.RE
.PP
\fBDate:\fP
.RS 4
\fBDate\fP.RS 4
2006/01/20 13:44:57 
.RE
.PP
.RE
.PP
\fBVersion:\fP
.RS 4
\fBRevision\fP.RS 4
1.13 
.RE
.PP
.RE
.PP
\fBnfs_export_list.c\fP : routines for managing the export list.
.PP
\fBHeader\fP.RS 4
/cea/S/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/support/nfs_export_list.c,v 1.13 2006/01/20 13:44:57 deniel Exp 
.RE
.PP
.PP
\fBLog\fP.RS 4
\fBnfs_export_list.c\fP,v 
.RE
.PP
Revision 1.13 2006/01/20 13:44:57 deniel alt_groups are now handled
.PP
Revision 1.12 2006/01/19 07:40:26 leibovic Better exportlist management (test whether iterator is null).
.PP
Revision 1.11 2005/12/20 10:52:18 deniel exportlist is no longer dynamic but static
.PP
Revision 1.10 2005/11/28 17:03:03 deniel Added CeCILL headers
.PP
Revision 1.9 2005/11/21 15:04:34 leibovic Displaying acquired Credential.
.PP
Revision 1.8 2005/11/21 11:32:07 deniel Got ride of nfs_SetPostOpFh3 because of memory leaks
.PP
Revision 1.7 2005/11/21 09:54:55 leibovic Once for all thread's credential initialization.
.PP
Revision 1.6 2005/11/07 09:03:39 deniel Implementing access security
.PP
Revision 1.5 2005/11/04 15:12:58 deniel Added basic authentication support
.PP
Revision 1.4 2005/10/12 08:28:00 deniel Format of the errror message.
.PP
Revision 1.3 2005/08/11 12:37:28 deniel Added statistics management
.PP
Revision 1.2 2005/08/03 13:13:59 deniel memset to zero before building the filehandles
.PP
Revision 1.1 2005/08/03 06:57:54 deniel Added a libsupport for miscellaneous service functions
.PP
Revision 1.2 2005/08/02 13:49:43 deniel Ok NFSv3
.PP
Definition in file \fBnfs_export_list.c\fP.
.SH "Function Documentation"
.PP 
.SS "int nfs_build_fsal_context (struct svc_req * ptr_req, exportlist_client_entry_t * pexport_client, exportlist_t * pexport, fsal_op_context_t * pcontext)"
.PP
nfs_build_fsal_context: Builds the FSAL context according to the request and the export entry.
.PP
Builds the FSAL credentials according to the request and the export entry.
.PP
\fBParameters:\fP
.RS 4
\fIptr_req\fP [IN] incoming request. 
.br
\fIpexport_client\fP [IN] related export client 
.br
\fIpexport\fP [IN] related export entry 
.br
\fIpcred\fP [IN/OUT] initialized credential of caller thread.
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if successful, FALSE otherwise 
.RE
.PP

.PP
Definition at line 290 of file nfs_export_list.c.
.SS "int nfs_compare_clientcred (nfs_client_cred_t * pcred1, nfs_client_cred_t * pcred2)"
.PP
nfs_compare_rpc_cred: Compares two RPC creds
.PP
\fBParameters:\fP
.RS 4
\fIpcred1\fP [IN] first RPC cred 
.br
\fIpcred2\fP [IN] second RPC cred
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if same, FALSE otherwise 
.RE
.PP

.PP
Definition at line 430 of file nfs_export_list.c.
.SS "exportlist_t* nfs_Get_export_by_id (exportlist_t * exportroot, unsigned short exportid)"
.PP
nfs_Get_export_by_id: Gets an export entry from its export id.
.PP
Gets an export entry from its export id.
.PP
exportroot [IN] the root for the export list 
.PP
\fBParameters:\fP
.RS 4
\fIexportid\fP [IN] the id for the entry to be found.
.RE
.PP
\fBReturns:\fP
.RS 4
the pointer to the pointer to the export list or NULL if failed. 
.RE
.PP

.PP
Definition at line 256 of file nfs_export_list.c.
.SS "int nfs_rpc_req2client_cred (struct svc_req * reqp, nfs_client_cred_t * pcred)"
.PP
Definition at line 458 of file nfs_export_list.c.
.SH "Variable Documentation"
.PP 
.SS "const char* \fBRpc_gss_svc_name\fP[] = { 'no name', 'RPCSEC_GSS_SVC_NONE', 'RPCSEC_GSS_SVC_INTEGRITY', 'RPCSEC_GSS_SVC_PRIVACY' }"
.PP
Definition at line 195 of file nfs_export_list.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Support routines layer from the source code.
