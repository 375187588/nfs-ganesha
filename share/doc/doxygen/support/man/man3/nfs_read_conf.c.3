.TH "nfs_read_conf.c" 3 "15 Sep 2010" "Version 0.1" "Support routines layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs_read_conf.c \- 
.PP
This file that contain the routine required for parsing the NFS specific configuraion file.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <sys/file.h>\fP
.br
\fC#include <sys/socket.h>\fP
.br
\fC#include <netinet/in.h>\fP
.br
\fC#include <arpa/inet.h>\fP
.br
\fC#include <netdb.h>\fP
.br
\fC#include <ctype.h>\fP
.br
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_tools.h'\fP
.br
\fC#include 'nfs_proto_functions.h'\fP
.br
\fC#include 'nfs_dupreq.h'\fP
.br
\fC#include 'config_parsing.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBnfs_read_worker_conf\fP (config_file_t in_config, nfs_worker_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_core_conf\fP (config_file_t in_config, nfs_core_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_dupreq_hash_conf\fP (config_file_t in_config, nfs_rpc_dupreq_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_ip_name_conf\fP (config_file_t in_config, nfs_ip_name_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_client_id_conf\fP (config_file_t in_config, nfs_client_id_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_state_id_conf\fP (config_file_t in_config, nfs_state_id_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_uidmap_conf\fP (config_file_t in_config, nfs_idmap_cache_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_gidmap_conf\fP (config_file_t in_config, nfs_idmap_cache_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_krb5_conf\fP (config_file_t in_config, nfs_krb5_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_read_version4_conf\fP (config_file_t in_config, nfs_version4_parameter_t *pparam)"
.br
.ti -1c
.RI "void \fBPrint_param_worker_in_log\fP (nfs_worker_parameter_t *pparam)"
.br
.ti -1c
.RI "void \fBPrint_param_in_log\fP (nfs_parameter_t *pparam)"
.br
.ti -1c
.RI "int \fBnfs_get_fsalpathlib_conf\fP (char *configPath, char *PathLib)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file that contain the routine required for parsing the NFS specific configuraion file. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
deniel 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2005/12/07 14:28:00 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.10 
.RE
.PP
\fBnfs_read_conf.c\fP : This file that contain the routine required for parsing the NFS specific configuraion file.
.PP
\fBHeader\fP.RS 4
/cea/S/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/support/nfs_read_conf.c,v 1.10 2005/12/07 14:28:00 deniel Exp 
.RE
.PP
.PP
\fBLog\fP.RS 4
\fBnfs_read_conf.c\fP,v 
.RE
.PP
Revision 1.10 2005/12/07 14:28:00 deniel Support of stats via stats_thread was added
.PP
Revision 1.9 2005/11/30 15:41:15 deniel Added IP/stats conf
.PP
Revision 1.8 2005/11/29 13:38:18 deniel bottlenecked ip_stats
.PP
Revision 1.6 2005/11/08 15:22:24 deniel WildCard and Netgroup entry for exportlist are now supported
.PP
Revision 1.5 2005/10/10 14:27:54 deniel mnt_Mnt does not create root entries in Cache inode any more. This is done before the first request once the export list is read the first time .
.PP
Revision 1.4 2005/10/07 07:34:00 deniel Added default parameters support to be able to manage 'simplified' config file
.PP
Revision 1.3 2005/08/11 12:37:28 deniel Added statistics management
.PP
Revision 1.2 2005/08/03 13:14:00 deniel memset to zero before building the filehandles
.PP
Revision 1.1 2005/08/03 06:57:54 deniel Added a libsupport for miscellaneous service functions
.PP
Revision 1.1 2005/07/18 14:12:45 deniel Fusion of the dirrent layers in progreess via the implementation of mount protocol 
.PP
Definition in file \fBnfs_read_conf.c\fP.
.SH "Function Documentation"
.PP 
.SS "int nfs_get_fsalpathlib_conf (char * configPath, char * PathLib)"
.PP
Definition at line 1322 of file nfs_read_conf.c.
.SS "int nfs_read_client_id_conf (config_file_t in_config, nfs_client_id_parameter_t * pparam)"nfs_read_ip_name_conf: reads the configuration for the Client/ID Cache
.PP
Reads the configuration for the Client/ID Cache
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 549 of file nfs_read_conf.c.
.SS "int nfs_read_core_conf (config_file_t in_config, nfs_core_parameter_t * pparam)"nfs_read_core_conf: read the configuration ite; for the worker theads.
.PP
Reads the configuration ite; for the worker theads.
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if failed, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 226 of file nfs_read_conf.c.
.SS "int nfs_read_dupreq_hash_conf (config_file_t in_config, nfs_rpc_dupreq_parameter_t * pparam)"nfs_read_dupreq_hash_conf: reads the configuration for the hash in Duplicate Request layer.
.PP
Reads the configuration for the hash in Duplicate Request layer
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 384 of file nfs_read_conf.c.
.SS "int nfs_read_gidmap_conf (config_file_t in_config, nfs_idmap_cache_parameter_t * pparam)"nfs_read_gidmap_conf: reads the configuration for the GID_MAPPER Cache
.PP
Reads the configuration for the GID_MAPPER Cache
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 1043 of file nfs_read_conf.c.
.SS "int nfs_read_ip_name_conf (config_file_t in_config, nfs_ip_name_parameter_t * pparam)"nfs_read_ip_name_conf: reads the configuration for the IP/name.
.PP
Reads the configuration for the IP/name.
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 463 of file nfs_read_conf.c.
.SS "int nfs_read_krb5_conf (config_file_t in_config, nfs_krb5_parameter_t * pparam)"nfs_read_krb5_conf: read the configuration for krb5 stuff
.PP
Read the configuration for krb5 stuff.
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if failed,1 is stanza is not there 
.RE
.PP

.PP
Definition at line 1125 of file nfs_read_conf.c.
.SS "int nfs_read_state_id_conf (config_file_t in_config, nfs_state_id_parameter_t * pparam)"nfs_read_ip_name_conf: reads the configuration for the Client/ID Cache
.PP
Reads the configuration for the Client/ID Cache
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 622 of file nfs_read_conf.c.
.SS "int nfs_read_uidmap_conf (config_file_t in_config, nfs_idmap_cache_parameter_t * pparam)"nfs_read_uidmap_conf: reads the configuration for the UID_MAPPER Cache
.PP
Reads the configuration for the UID_MAPPER Cache
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if not, 1 is stanza is not there. 
.RE
.PP

.PP
Definition at line 961 of file nfs_read_conf.c.
.SS "int nfs_read_version4_conf (config_file_t in_config, nfs_version4_parameter_t * pparam)"nfs_read_version4_conf: read the configuration for NFSv4 stuff
.PP
Read the configuration for NFSv4 stuff.
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if failed,1 is stanza is not there 
.RE
.PP

.PP
Definition at line 1203 of file nfs_read_conf.c.
.SS "int nfs_read_worker_conf (config_file_t in_config, nfs_worker_parameter_t * pparam)"nfs_read_worker_conf: read the configuration ite; for the worker theads.
.PP
Reads the configuration ite; for the worker theads.
.PP
\fBParameters:\fP
.RS 4
\fIin_config\fP [IN] configuration file handle 
.br
\fIpparam\fP [OUT] read parameters
.RE
.PP
\fBReturns:\fP
.RS 4
0 if ok, -1 if failed,1 is stanza is not there 
.RE
.PP

.PP
Definition at line 127 of file nfs_read_conf.c.
.SS "void Print_param_in_log (nfs_parameter_t * pparam)"Print_param_in_log : prints the nfs parameter structure into the logfile
.PP
prints the nfs parameter structure into the logfile
.PP
\fBParameters:\fP
.RS 4
\fIpparam\fP Pointer to the nfs parameter
.RE
.PP
\fBReturns:\fP
.RS 4
none (void function) 
.RE
.PP

.PP
Definition at line 1316 of file nfs_read_conf.c.
.SS "void Print_param_worker_in_log (nfs_worker_parameter_t * pparam)"Print_param_in_log : prints the nfs worker parameter structure into the logfile
.PP
prints the nfs worker parameter structure into the logfile
.PP
\fBParameters:\fP
.RS 4
\fIpparam\fP Pointer to the nfs worker parameter
.RE
.PP
\fBReturns:\fP
.RS 4
none (void function) 
.RE
.PP

.PP
Definition at line 1296 of file nfs_read_conf.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Support routines layer from the source code.
