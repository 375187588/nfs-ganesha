.TH "nfs_convert.c" 3 "9 Apr 2008" "Version 0.1" "Support routines layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs_convert.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <string.h>\fP
.br
\fC#include <gssapi/gssapi.h>\fP
.br
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'nfs_tools.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBnfsstat2_to_str\fP (nfsstat2 code)"
.br
.ti -1c
.RI "char * \fBnfsstat3_to_str\fP (nfsstat3 code)"
.br
.ti -1c
.RI "char * \fBnfstype2_to_str\fP (ftype2 code)"
.br
.ti -1c
.RI "char * \fBnfstype3_to_str\fP (ftype3 code)"
.br
.ti -1c
.RI "uint64_t \fBnfs_htonl64\fP (uint64_t arg64)"
.br
.ti -1c
.RI "uint64_t \fBnfs_ntohl64\fP (uint64_t arg64)"
.br
.ti -1c
.RI "void \fBauth_stat2str\fP (enum auth_stat why, char *str)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void auth_stat2str (enum auth_stat why, char * str)"
.PP
auth_stat2str: converts a auth_stat enum to a string
.PP
\fBParameters:\fP
.RS 4
\fIwhy\fP [IN] the stat to convert 
.br
\fIout\fP [IN] output string
.RE
.PP
\fBReturns:\fP
.RS 4
nothing (void function). 
.RE
.PP

.PP
Definition at line 351 of file nfs_convert.c.
.SS "uint64_t nfs_htonl64 (uint64_t arg64)"
.PP
nfs_htonl64: Same as htonl, but on 64 bits.
.PP
\fBParameters:\fP
.RS 4
\fIarg64\fP [IN] input value
.RE
.PP
\fBReturns:\fP
.RS 4
converted value. 
.RE
.PP

.PP
Definition at line 247 of file nfs_convert.c.
.SS "uint64_t nfs_ntohl64 (uint64_t arg64)"
.PP
nfs_ntohl64: Same as ntohl, but on 64 bits.
.PP
\fBParameters:\fP
.RS 4
\fIarg64\fP [IN] input value
.RE
.PP
\fBReturns:\fP
.RS 4
converted value. 
.RE
.PP

.PP
Definition at line 275 of file nfs_convert.c.
.SS "char* nfsstat2_to_str (nfsstat2 code)"
.PP
Definition at line 122 of file nfs_convert.c.
.SS "char* nfsstat3_to_str (nfsstat3 code)"
.PP
Definition at line 153 of file nfs_convert.c.
.SS "char* nfstype2_to_str (ftype2 code)"
.PP
Definition at line 195 of file nfs_convert.c.
.SS "char* nfstype3_to_str (ftype3 code)"
.PP
Definition at line 218 of file nfs_convert.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Support routines layer from the source code.
