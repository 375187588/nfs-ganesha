.TH "exports.c" 3 "15 Sep 2010" "Version 0.1" "Support routines layer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
exports.c \- 
.PP
What is needed to parse the exports file.  

.SH SYNOPSIS
.br
.PP
\fC#include <rpc/types.h>\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/auth.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_functions.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_tools.h'\fP
.br
\fC#include 'nfs_proto_functions.h'\fP
.br
\fC#include 'nfs_dupreq.h'\fP
.br
\fC#include 'config_parsing.h'\fP
.br
\fC#include 'common_utils.h'\fP
.br
\fC#include 'nodelist.h'\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <fnmatch.h>\fP
.br
\fC#include <sys/socket.h>\fP
.br
\fC#include <netinet/in.h>\fP
.br
\fC#include <arpa/inet.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <ctype.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBSTRCMP\fP   strcasecmp"
.br
.ti -1c
.RI "#define \fBCONF_LABEL_EXPORT\fP   'EXPORT'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_ID\fP   'Export_id'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PATH\fP   'Path'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_ROOT\fP   'Root_Access'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_ACCESS\fP   'Access'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PSEUDO\fP   'Pseudo'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_ACCESSTYPE\fP   'Access_Type'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_ANON_ROOT\fP   'Anonymous_root_uid'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_NFS_PROTO\fP   'NFS_Protocols'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_TRANS_PROTO\fP   'Transport_Protocols'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_SECTYPE\fP   'SecType'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_MAX_READ\fP   'MaxRead'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_MAX_WRITE\fP   'MaxWrite'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PREF_READ\fP   'PrefRead'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PREF_WRITE\fP   'PrefWrite'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PREF_READDIR\fP   'PrefReaddir'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_FSID\fP   'Filesystem_id'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_NOSUID\fP   'NOSUID'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_NOSGID\fP   'NOSGID'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PRIVILEGED_PORT\fP   'PrivilegedPort'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_USE_DATACACHE\fP   'Cache_Data'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_FS_SPECIFIC\fP   'FS_Specific'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_FS_TAG\fP   'Tag'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_MAX_OFF_WRITE\fP   'MaxOffsetWrite'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_MAX_OFF_READ\fP   'MaxOffsetRead'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_MAX_CACHE_SIZE\fP   'MaxCacheSize'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_REFERRAL\fP   'Referral'"
.br
.ti -1c
.RI "#define \fBCONF_EXPORT_PNFS\fP   'Use_pNFS'"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_ID\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PATH\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_ROOT_OR_ACCESS\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PSEUDO\fP   0x00000010"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_ACCESSTYPE\fP   0x00000020"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_ANON_ROOT\fP   0x00000040"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_NFS_PROTO\fP   0x00000080"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_TRANS_PROTO\fP   0x00000100"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_SECTYPE\fP   0x00000200"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_MAX_READ\fP   0x00000400"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_MAX_WRITE\fP   0x00000800"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PREF_READ\fP   0x00001000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PREF_WRITE\fP   0x00002000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PREF_READDIR\fP   0x00004000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_FSID\fP   0x00008000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_NOSUID\fP   0x00010000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_NOSGID\fP   0x00020000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_PRIVILEGED_PORT\fP   0x00040000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_USE_DATACACHE\fP   0x00080000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_FS_SPECIFIC\fP   0x00100000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_FS_TAG\fP   0x00200000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_MAX_OFF_WRITE\fP   0x00400000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_MAX_OFF_READ\fP   0x00800000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_MAX_CACHE_SIZE\fP   0x01000000"
.br
.ti -1c
.RI "#define \fBFLAG_EXPORT_USE_PNFS\fP   0x02000000"
.br
.ti -1c
.RI "#define \fBDEFINED_TWICE_WARNING\fP(_str_)   LogCrit(COMPONENT_CONFIG, 'NFS READ_EXPORT: WARNING: %s defined twice !!! (ignored)', _str_ )"
.br
.ti -1c
.RI "#define \fBEXPORT_MAX_CLIENTS\fP   EXPORTS_NB_MAX_CLIENTS"
.br
.ti -1c
.RI "#define \fBEXPORT_MAX_CLIENTLEN\fP   256"
.br
.ti -1c
.RI "#define \fBMAX_NFSPROTO\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_NFSPROTO_LEN\fP   256"
.br
.ti -1c
.RI "#define \fBMAX_TRANSPROTO\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_TRANSPROTO_LEN\fP   256"
.br
.ti -1c
.RI "#define \fBMAX_SECTYPE\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_SECTYPE_LEN\fP   256"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBlocal_lru_inode_entry_to_str\fP (LRU_data_t data, char *str)"
.br
.ti -1c
.RI "int \fBlocal_lru_inode_clean_entry\fP (LRU_entry_t *entry, void *adddata)"
.br
.ti -1c
.RI "int \fBnfs_ParseConfLine\fP (char *Argv[], int nbArgv, char *line, int(*separator_function)(char), int(*endLine_func)(char))"
.br
.ti -1c
.RI "int \fBnfs_LookupNetworkAddr\fP (char *host, unsigned long *netAddr, unsigned long *netMask)"
.br
.ti -1c
.RI "exportlist_t * \fBBuildDefaultExport\fP ()"
.br
.ti -1c
.RI "int \fBReadExports\fP (config_file_t in_config, exportlist_t **ppexportlist)"
.br
.ti -1c
.RI "int \fBnfs_export_check_access\fP (struct sockaddr_storage *pssaddr, struct svc_req *ptr_req, exportlist_t *pexport, unsigned int nfs_prog, unsigned int mnt_prog, hash_table_t *ht_ip_stats, nfs_ip_stats_t *ip_stats_pool, exportlist_client_entry_t *pclient_found)"
.br
.ti -1c
.RI "int \fBnfs_export_create_root_entry\fP (exportlist_t *pexportlist, hash_table_t *ht)"
.br
.ti -1c
.RI "int \fBCleanUpExportContext\fP (fsal_export_context_t *p_export_context)"
.br
.ti -1c
.RI "exportlist_t * \fBRemoveExportEntry\fP (exportlist_t *exportEntry)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "nfs_parameter_t \fBnfs_param\fP"
.br
.ti -1c
.RI "cache_inode_client_t \fBsmall_client\fP"
.br
.ti -1c
.RI "cache_inode_client_parameter_t \fBsmall_client_param\fP"
.br
.ti -1c
.RI "cache_content_client_t \fBrecover_datacache_client\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
What is needed to parse the exports file. 

\fBAuthor:\fP
.RS 4
$Author$ 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/02/08 12:50:40 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.33 
.RE
.PP
\fBexports.c\fP : What is needed to parse the exports file.
.PP
\fBHeader\fP.RS 4
/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/support/exports.c,v 1.33 2006/02/08 12:50:40 leibovic Exp 
.RE
.PP

.PP
Definition in file \fBexports.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define CONF_EXPORT_ACCESS   'Access'"
.PP
Definition at line 102 of file exports.c.
.SS "#define CONF_EXPORT_ACCESSTYPE   'Access_Type'"
.PP
Definition at line 104 of file exports.c.
.SS "#define CONF_EXPORT_ANON_ROOT   'Anonymous_root_uid'"
.PP
Definition at line 105 of file exports.c.
.SS "#define CONF_EXPORT_FS_SPECIFIC   'FS_Specific'"
.PP
Definition at line 119 of file exports.c.
.SS "#define CONF_EXPORT_FS_TAG   'Tag'"
.PP
Definition at line 120 of file exports.c.
.SS "#define CONF_EXPORT_FSID   'Filesystem_id'"
.PP
Definition at line 114 of file exports.c.
.SS "#define CONF_EXPORT_ID   'Export_id'"
.PP
Definition at line 99 of file exports.c.
.SS "#define CONF_EXPORT_MAX_CACHE_SIZE   'MaxCacheSize'"
.PP
Definition at line 123 of file exports.c.
.SS "#define CONF_EXPORT_MAX_OFF_READ   'MaxOffsetRead'"
.PP
Definition at line 122 of file exports.c.
.SS "#define CONF_EXPORT_MAX_OFF_WRITE   'MaxOffsetWrite'"
.PP
Definition at line 121 of file exports.c.
.SS "#define CONF_EXPORT_MAX_READ   'MaxRead'"
.PP
Definition at line 109 of file exports.c.
.SS "#define CONF_EXPORT_MAX_WRITE   'MaxWrite'"
.PP
Definition at line 110 of file exports.c.
.SS "#define CONF_EXPORT_NFS_PROTO   'NFS_Protocols'"
.PP
Definition at line 106 of file exports.c.
.SS "#define CONF_EXPORT_NOSGID   'NOSGID'"
.PP
Definition at line 116 of file exports.c.
.SS "#define CONF_EXPORT_NOSUID   'NOSUID'"
.PP
Definition at line 115 of file exports.c.
.SS "#define CONF_EXPORT_PATH   'Path'"
.PP
Definition at line 100 of file exports.c.
.SS "#define CONF_EXPORT_PNFS   'Use_pNFS'"
.PP
Definition at line 125 of file exports.c.
.SS "#define CONF_EXPORT_PREF_READ   'PrefRead'"
.PP
Definition at line 111 of file exports.c.
.SS "#define CONF_EXPORT_PREF_READDIR   'PrefReaddir'"
.PP
Definition at line 113 of file exports.c.
.SS "#define CONF_EXPORT_PREF_WRITE   'PrefWrite'"
.PP
Definition at line 112 of file exports.c.
.SS "#define CONF_EXPORT_PRIVILEGED_PORT   'PrivilegedPort'"
.PP
Definition at line 117 of file exports.c.
.SS "#define CONF_EXPORT_PSEUDO   'Pseudo'"
.PP
Definition at line 103 of file exports.c.
.SS "#define CONF_EXPORT_REFERRAL   'Referral'"
.PP
Definition at line 124 of file exports.c.
.SS "#define CONF_EXPORT_ROOT   'Root_Access'"
.PP
Definition at line 101 of file exports.c.
.SS "#define CONF_EXPORT_SECTYPE   'SecType'"
.PP
Definition at line 108 of file exports.c.
.SS "#define CONF_EXPORT_TRANS_PROTO   'Transport_Protocols'"
.PP
Definition at line 107 of file exports.c.
.SS "#define CONF_EXPORT_USE_DATACACHE   'Cache_Data'"
.PP
Definition at line 118 of file exports.c.
.SS "#define CONF_LABEL_EXPORT   'EXPORT'"
.PP
Definition at line 96 of file exports.c.
.SS "#define DEFINED_TWICE_WARNING(_str_)   LogCrit(COMPONENT_CONFIG, 'NFS READ_EXPORT: WARNING: %s defined twice !!! (ignored)', _str_ )"
.PP
Definition at line 579 of file exports.c.
.SS "#define EXPORT_MAX_CLIENTLEN   256"
.SS "#define EXPORT_MAX_CLIENTS   EXPORTS_NB_MAX_CLIENTS"
.SS "#define FLAG_EXPORT_ACCESSTYPE   0x00000020"
.PP
Definition at line 136 of file exports.c.
.SS "#define FLAG_EXPORT_ANON_ROOT   0x00000040"
.PP
Definition at line 137 of file exports.c.
.SS "#define FLAG_EXPORT_FS_SPECIFIC   0x00100000"
.PP
Definition at line 151 of file exports.c.
.SS "#define FLAG_EXPORT_FS_TAG   0x00200000"
.PP
Definition at line 152 of file exports.c.
.SS "#define FLAG_EXPORT_FSID   0x00008000"
.PP
Definition at line 146 of file exports.c.
.SS "#define FLAG_EXPORT_ID   0x00000001"\fBTodo\fP
.RS 4
: add encrypt handles option 
.RE
.PP

.PP
Definition at line 130 of file exports.c.
.SS "#define FLAG_EXPORT_MAX_CACHE_SIZE   0x01000000"
.PP
Definition at line 155 of file exports.c.
.SS "#define FLAG_EXPORT_MAX_OFF_READ   0x00800000"
.PP
Definition at line 154 of file exports.c.
.SS "#define FLAG_EXPORT_MAX_OFF_WRITE   0x00400000"
.PP
Definition at line 153 of file exports.c.
.SS "#define FLAG_EXPORT_MAX_READ   0x00000400"
.PP
Definition at line 141 of file exports.c.
.SS "#define FLAG_EXPORT_MAX_WRITE   0x00000800"
.PP
Definition at line 142 of file exports.c.
.SS "#define FLAG_EXPORT_NFS_PROTO   0x00000080"
.PP
Definition at line 138 of file exports.c.
.SS "#define FLAG_EXPORT_NOSGID   0x00020000"
.PP
Definition at line 148 of file exports.c.
.SS "#define FLAG_EXPORT_NOSUID   0x00010000"
.PP
Definition at line 147 of file exports.c.
.SS "#define FLAG_EXPORT_PATH   0x00000002"
.PP
Definition at line 131 of file exports.c.
.SS "#define FLAG_EXPORT_PREF_READ   0x00001000"
.PP
Definition at line 143 of file exports.c.
.SS "#define FLAG_EXPORT_PREF_READDIR   0x00004000"
.PP
Definition at line 145 of file exports.c.
.SS "#define FLAG_EXPORT_PREF_WRITE   0x00002000"
.PP
Definition at line 144 of file exports.c.
.SS "#define FLAG_EXPORT_PRIVILEGED_PORT   0x00040000"
.PP
Definition at line 149 of file exports.c.
.SS "#define FLAG_EXPORT_PSEUDO   0x00000010"
.PP
Definition at line 135 of file exports.c.
.SS "#define FLAG_EXPORT_ROOT_OR_ACCESS   0x00000004"
.PP
Definition at line 133 of file exports.c.
.SS "#define FLAG_EXPORT_SECTYPE   0x00000200"
.PP
Definition at line 140 of file exports.c.
.SS "#define FLAG_EXPORT_TRANS_PROTO   0x00000100"
.PP
Definition at line 139 of file exports.c.
.SS "#define FLAG_EXPORT_USE_DATACACHE   0x00080000"
.PP
Definition at line 150 of file exports.c.
.SS "#define FLAG_EXPORT_USE_PNFS   0x02000000"
.PP
Definition at line 156 of file exports.c.
.SS "#define MAX_NFSPROTO   10"
.SS "#define MAX_NFSPROTO_LEN   256"
.SS "#define MAX_SECTYPE   10"
.SS "#define MAX_SECTYPE_LEN   256"
.SS "#define MAX_TRANSPROTO   10"
.SS "#define MAX_TRANSPROTO_LEN   256"
.SS "#define STRCMP   strcasecmp"
.PP
Definition at line 94 of file exports.c.
.SH "Function Documentation"
.PP 
.SS "exportlist_t* BuildDefaultExport ()"
.PP
\fBTodo\fP
.RS 4
set default values here 
.RE
.PP
.PP
Grant root access to all clients
.PP
Definition at line 1823 of file exports.c.
.SS "int CleanUpExportContext (fsal_export_context_t * p_export_context)"
.PP
Definition at line 2532 of file exports.c.
.SS "int local_lru_inode_clean_entry (LRU_entry_t * entry, void * adddata)"
.PP
Definition at line 163 of file exports.c.
.SS "int local_lru_inode_entry_to_str (LRU_data_t data, char * str)"
.PP
Definition at line 158 of file exports.c.
.SS "int nfs_export_check_access (struct sockaddr_storage * pssaddr, struct svc_req * ptr_req, exportlist_t * pexport, unsigned int nfs_prog, unsigned int mnt_prog, hash_table_t * ht_ip_stats, nfs_ip_stats_t * ip_stats_pool, exportlist_client_entry_t * pclient_found)"nfs_export_check_access: checks if a machine is authorized to access an export entry.
.PP
Checks if a machine is authorized to access an export entry.
.PP
\fBParameters:\fP
.RS 4
\fIssaddr\fP [IN] the complete remote address (as a sockaddr_storage to be IPv6 compliant) 
.br
\fIptr_req\fP [IN] pointer to the related RPC request. 
.br
\fIpexpprt\fP [IN] related export entry (if found, NULL otherwise). 
.br
\fInfs_prog\fP [IN] number for the NFS program. 
.br
\fImnt_program\fP [IN] number for the MOUNT program. 
.br
\fIht_ip_stats\fP [INOUT] IP/stats hash table 
.br
\fIip_stats_pool\fP [INOUT] IP/stats pool 
.br
\fIpclient_found\fP [OUT] pointer to client entry found in export list, NULL if nothing was found.
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if access in granted, FALSE otherwise. 
.RE
.PP

.PP
Definition at line 2195 of file exports.c.
.SS "int nfs_export_create_root_entry (exportlist_t * pexportlist, hash_table_t * ht)"nfs_export_create_root_entry: create the root entries for the cached entries.
.PP
Create the root entries for the cached entries.
.PP
\fBParameters:\fP
.RS 4
\fIpexportlist\fP [IN] the export list to be parsed 
.br
\fIht\fP [INOUT] the hash table to be used to the cache inode
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE is successfull, FALSE if something wrong occured. 
.RE
.PP

.PP
Definition at line 2343 of file exports.c.
.SS "int nfs_LookupNetworkAddr (char * host, unsigned long * netAddr, unsigned long * netMask)"nfs_LookupNetworkAddr: determine network address from string.
.PP
This routine is converting a valid host name is both literal or dotted format into a valid netdb structure. If it could not successfull, NULL is returned by the function.
.PP
Assumptions: Dotted host address are 4 hex, decimal, or octal numbers in base 256 each separated by a period
.PP
\fBParameters:\fP
.RS 4
\fIhost\fP [IN] hostname or dotted address, within a string literal. 
.br
\fInetAddr\fP [OUT] return address 
.br
\fInetMask\fP [OUT] return address mask
.RE
.PP
\fBReturns:\fP
.RS 4
0 if successfull, other values show an error
.RE
.PP
\fBSee also:\fP
.RS 4
inet_addr 
.PP
gethostbyname 
.PP
gethostbyaddr 
.RE
.PP

.PP
Definition at line 315 of file exports.c.
.SS "int nfs_ParseConfLine (char * Argv[], int nbArgv, char * line, int(*)(char) separator_function, int(*)(char) endLine_func)"nfs_ParseConfLine: parse a line with a settable separator and end of line
.PP
parse a line with a settable separator and end of line .
.PP
\fBParameters:\fP
.RS 4
\fIArgv\fP [OUT] result array 
.br
\fInbArgv\fP [IN] allocated number of entries in the Argv 
.br
\fIline\fP [IN] input line 
.br
\fIseparator_function\fP [IN] function used to identify a separator 
.br
\fIendLine_func\fP [IN] function used to identify an end of line
.RE
.PP
\fBReturns:\fP
.RS 4
the number of object found 
.RE
.PP

.PP
Definition at line 182 of file exports.c.
.SS "int ReadExports (config_file_t in_config, exportlist_t ** ppexportlist)"ReadExports: Read the export entries from the parsed configuration file. 
.PP
\fBReturns:\fP
.RS 4
A negative value on error, the number of export entries else. 
.RE
.PP

.PP
Definition at line 1900 of file exports.c.
.SS "exportlist_t* RemoveExportEntry (exportlist_t * exportEntry)"
.PP
Definition at line 2542 of file exports.c.
.SH "Variable Documentation"
.PP 
.SS "nfs_parameter_t \fBnfs_param\fP"
.SS "cache_content_client_t \fBrecover_datacache_client\fP"
.PP
Definition at line 92 of file exports.c.
.SS "cache_inode_client_t \fBsmall_client\fP"
.PP
Definition at line 90 of file exports.c.
.SS "cache_inode_client_parameter_t \fBsmall_client_param\fP"
.PP
Definition at line 91 of file exports.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Support routines layer from the source code.
