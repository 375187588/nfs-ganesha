<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs__ip__name_8c" kind="file">
    <compoundname>nfs_ip_name.c</compoundname>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="yes">log_functions.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">config_parsing.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <incdepgraph>
      <node id="154">
        <label>netinet/in.h</label>
      </node>
      <node id="155">
        <label>arpa/inet.h</label>
      </node>
      <node id="150">
        <label>config_parsing.h</label>
      </node>
      <node id="151">
        <label>stdlib.h</label>
      </node>
      <node id="143">
        <label>nfs_ip_name.c</label>
        <link refid="nfs_ip_name.c"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>log_functions.h</label>
      </node>
      <node id="152">
        <label>string.h</label>
      </node>
      <node id="145">
        <label>HashTable.h</label>
      </node>
      <node id="149">
        <label>nfs_exports.h</label>
      </node>
      <node id="148">
        <label>nfs_core.h</label>
      </node>
      <node id="153">
        <label>sys/socket.h</label>
      </node>
      <node id="147">
        <label>stuff_alloc.h</label>
      </node>
      <node id="144">
        <label>HashData.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" prot="public" static="no" mutable="no">
        <type>hash_table_t *</type>
        <definition>hash_table_t* ht_ip_name</definition>
        <argsstring></argsstring>
        <name>ht_ip_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="58" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__ip__name_8c_1aeb8fc46586993cf210777049fca03969" prot="public" static="no" mutable="no">
        <type>nfs_parameter_t</type>
        <definition>nfs_parameter_t nfs_param</definition>
        <argsstring></argsstring>
        <name>nfs_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="59"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__ip__name_8c_1a544f7c05ec828d69dab5ac370f978695" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int expiration_time</definition>
        <argsstring></argsstring>
        <name>expiration_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="60" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs__ip__name_8c_1a8ae4b30f714eb77ca1084aa6d3f778ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long int</type>
        <definition>unsigned long int ip_name_value_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>ip_name_value_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ip_name_rbt_hash_func: computes the hash value for the entry in IP/name cache.</para><para>Computes the hash value for the entry in IP/name cache. In fact, it just use addresse as value (identity function) modulo the size of the hash. This function is called internal in the HasTable_* function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] hash table parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffcleff[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the hash key buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed hash value.</para></simplesect>
<simplesect kind="see"><para>HashTable_Init </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="79" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1a07a3a37f16af2aae054a5f15ee13861f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long int</type>
        <definition>unsigned long int ip_name_rbt_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>ip_name_rbt_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ip_name_rbt_hash_func: computes the rbt value for the entry in IP/name cache.</para><para>Computes the rbt value for the entry in IP/name cache. In fact, it just use the address value itself (which is an unsigned integer) as the rbt value. This function is called internal in the HasTable_* function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] hash table parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffcleff[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the hash key buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed rbt value.</para></simplesect>
<simplesect kind="see"><para>HashTable_Init </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="101" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1afe8038be2a8dcdabfd1dc8683d094c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compare_ip_name</definition>
        <argsstring>(hash_buffer_t *buff1, hash_buffer_t *buff2)</argsstring>
        <name>compare_ip_name</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff1</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compare_ip_name: compares the ip address stored in the key buffers.</para><para>compare the ip address stored in the key buffers. This function is to be used as &apos;compare_key&apos; field in the hashtable storing the nfs duplicated requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff1</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] first key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buff2</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] second key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if keys are identifical, 1 if they are different. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="120" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1a4db54e83cedf16402b5b29d89ad5a297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_ip_name</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_ip_name</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display_ip_name: displays the ip_name stored in the buffer.</para><para>displays the ip_name stored in the buffer. This function is to be used as &apos;key_to_str&apos; field in the hashtable storing the nfs duplicated requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff1</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] buffer to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buff2</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] output string</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of character written. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="140" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="139" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1afba9cbfec188896a7353bfadd6ce6799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_ip_value</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_ip_value</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="152" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="151" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1a2dfcc5a3f453ea9e621f9f6015db9793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_ip_name_add</definition>
        <argsstring>(unsigned int ipaddr, char *hostname)</argsstring>
        <name>nfs_ip_name_add</name>
        <param>
          <type>unsigned int</type>
          <declname>ipaddr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_ip_name_add: adds an entry in the duplicate requests cache.</para><para>Adds an entry in the duplicate requests cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipaddr</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the ipaddr to be used as key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the hostname added (found by using gethostbyaddr)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IP_NAME_SUCCESS if successfull<linebreak/>
. </para><simplesectsep/><para>IP_NAME_INSERT_MALLOC_ERROR if an error occured during the insertion process <linebreak/>
 </para><simplesectsep/><para>IP_NAME_NETDB_ERROR if an error occured during the netdb query (via gethostbyaddr). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="176" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="175" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1ab1619464f771a20111dae3185f46cf03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_ip_name_get</definition>
        <argsstring>(unsigned int ipaddr, char *hostname)</argsstring>
        <name>nfs_ip_name_get</name>
        <param>
          <type>unsigned int</type>
          <declname>ipaddr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_ip_name_get: Tries to get an entry for ip_name cache.</para><para>Tries to get an entry for ip_name cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipaddr</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the ip address requested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] the hostname</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result previously set if *pstatus == IP_NAME_SUCCESS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="241" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="240" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1aecbe661c31b38258fbf5321f2fc576b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_ip_name_remove</definition>
        <argsstring>(int ipaddr)</argsstring>
        <name>nfs_ip_name_remove</name>
        <param>
          <type>int</type>
          <declname>ipaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_ip_name_remove: Tries to remove an entry for ip_name cache</para><para>Tries to remove an entry for ip_name cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipaddr</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the ip address to be uncached.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result previously set if *pstatus == IP_NAME_SUCCESS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="277" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="276" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1a612791deebb45def97a52c9f3a938435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_ip_name</definition>
        <argsstring>(nfs_ip_name_parameter_t param)</argsstring>
        <name>nfs_Init_ip_name</name>
        <param>
          <type>nfs_ip_name_parameter_t</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_ip_name: Init the hashtable for IP/name cache.</para><para>Perform all the required initialization for hashtable IP/name cache</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] parameter used to init the ip name cache</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="311" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="310" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1a2c6b07deab3557e1b1ce872631e31936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_ip_name_populate</definition>
        <argsstring>(char *path)</argsstring>
        <name>nfs_ip_name_populate</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="325" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="324" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="nfs__ip__name_8c_1ad811431e97ee867d8810380117145dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_ip_name_get_stats</definition>
        <argsstring>(hash_stat_t *phstat)</argsstring>
        <name>nfs_ip_name_get_stats</name>
        <param>
          <type>hash_stat_t *</type>
          <declname>phstat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_ip_name_get_stats: gets the hash table statistics for the IP_NAME Table.</para><para>Gets the hash table statistics for the IP_NAME Table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phstat</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] pointer to the resulting stats.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function)</para></simplesect>
<simplesect kind="see"><para>HashTable_GetStats </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_ip_name.c" line="422" bodyfile="/export/GANESHA/src/support/nfs_ip_name.c" bodystart="421" bodyend="424"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The management of the IP/name cache. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>leibovic </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2006/01/20 07:39:23 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.6 </para></simplesect>
<ref refid="nfs__ip__name_8c" kindref="compound">nfs_ip_name.c</ref> : The management of the IP/name cache. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_parsing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Hashtable<sp/>used<sp/>to<sp/>cache<sp/>the<sp/>hostname,<sp/>accessed<sp/>by<sp/>their<sp/>IP<sp/>addess<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" refkind="member"><highlight class="normal">hash_table_t<sp/>*<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_parameter_t<sp/><ref refid="exports_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>;</highlight></codeline>
<codeline lineno="60" refid="nfs__ip__name_8c_1a544f7c05ec828d69dab5ac370f978695" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a544f7c05ec828d69dab5ac370f978695" kindref="member">expiration_time</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="nfs__ip__name_8c_1a8ae4b30f714eb77ca1084aa6d3f778ac" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a8ae4b30f714eb77ca1084aa6d3f778ac" kindref="member">ip_name_value_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_buffer_t<sp/>*<sp/>buffclef)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(buffclef-&gt;pdata)<sp/>%<sp/>p_hparam-&gt;index_size;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>ip_name_value_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="nfs__ip__name_8c_1a07a3a37f16af2aae054a5f15ee13861f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a07a3a37f16af2aae054a5f15ee13861f" kindref="member">ip_name_rbt_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_buffer_t<sp/>*<sp/>buffclef)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>Xid<sp/>as<sp/>the<sp/>rbt<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(buffclef-&gt;pdata);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ip_name_rbt_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="nfs__ip__name_8c_1afe8038be2a8dcdabfd1dc8683d094c57" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1afe8038be2a8dcdabfd1dc8683d094c57" kindref="member">compare_ip_name</ref>(hash_buffer_t<sp/>*<sp/>buff1,<sp/>hash_buffer_t<sp/>*<sp/>buff2)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xid1<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int)(buff1-&gt;pdata);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xid2<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int)(buff2-&gt;pdata);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xid1<sp/>==<sp/>xid2)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare_xid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="nfs__ip__name_8c_1a4db54e83cedf16402b5b29d89ad5a297" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a4db54e83cedf16402b5b29d89ad5a297" kindref="member">display_ip_name</ref>(hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip_name<sp/>=<sp/>ntohl((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(pbuff-&gt;pdata));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%x<sp/>:<sp/>%u.%u.%u.%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ip_name,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ip_name<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ip_name<sp/>&amp;<sp/>0x00FF0000)<sp/>&gt;&gt;<sp/>16,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ip_name<sp/>&amp;<sp/>0x0000FF00)<sp/>&gt;&gt;<sp/>8,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ip_name<sp/>&amp;<sp/>0x000000FF));</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>display_ip_name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="nfs__ip__name_8c_1afba9cbfec188896a7353bfadd6ce6799" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1afba9cbfec188896a7353bfadd6ce6799" kindref="member">display_ip_value</ref>(hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>nfs_ip_name_t<sp/>*pnfs_ip_name;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>pnfs_ip_name<sp/>=<sp/>(nfs_ip_name_t<sp/>*)<sp/>(pbuff-&gt;pdata);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>pnfs_ip_name-&gt;hostname);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>display_ip_name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="nfs__ip__name_8c_1a2dfcc5a3f453ea9e621f9f6015db9793" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a2dfcc5a3f453ea9e621f9f6015db9793" kindref="member">nfs_ip_name_add</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipaddr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostname)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffdata;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>nfs_ip_name_t<sp/>*pnfs_ip_name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*hp;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(local_ipaddr);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;nfs_ip_name_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>pnfs_ip_name<sp/>=<sp/>(nfs_ip_name_t<sp/>*)<sp/>Mem_Alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nfs_ip_name_t));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnfs_ip_name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>have<sp/>to<sp/>keep<sp/>an<sp/>integer<sp/>as<sp/>key,<sp/>I<sp/>wil<sp/>use<sp/>the<sp/>pointer<sp/>buffkey-&gt;pdata<sp/>for<sp/>this,<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>also<sp/>means<sp/>that<sp/>buffkey-&gt;len<sp/>will<sp/>be<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>local_ipaddr;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ask<sp/>for<sp/>the<sp/>name<sp/>to<sp/>be<sp/>cached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((hp<sp/>=<sp/>gethostbyaddr((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;local_ipaddr,<sp/>length,<sp/>AF_INET))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pnfs_ip_name);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_NETDB_ERROR;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>build<sp/>the<sp/>data<sp/>with<sp/>the<sp/>request<sp/>pointer<sp/>that<sp/>should<sp/>be<sp/>in<sp/>state<sp/>&apos;IN<sp/>USE&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>pnfs_ip_name-&gt;ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>strncpy(pnfs_ip_name-&gt;hostname,<sp/>hp-&gt;h_name,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>pnfs_ip_name-&gt;timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>buffdata.pdata<sp/>=<sp/>(caddr_t)<sp/>pnfs_ip_name;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>buffdata.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nfs_ip_name_t);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Set(<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>,<sp/>&amp;buffkey,<sp/>&amp;buffdata)<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>value<sp/>for<sp/>the<sp/>caller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>strncpy(hostname,<sp/>pnfs_ip_name-&gt;hostname,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_SUCCESS;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_ip_name_add<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="nfs__ip__name_8c_1ab1619464f771a20111dae3185f46cf03" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1ab1619464f771a20111dae3185f46cf03" kindref="member">nfs_ip_name_get</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipaddr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostname)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffval;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>nfs_ip_name_t<sp/>*pnfs_ip_name;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>local_ipaddr;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Get(<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>,<sp/>&amp;buffkey,<sp/>&amp;buffval)<sp/>==<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pnfs_ip_name<sp/>=<sp/>(nfs_ip_name_t<sp/>*)<sp/>buffval.pdata;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(hostname,<sp/>pnfs_ip_name-&gt;hostname,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>IP_NAME_SUCCESS;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>IP_NAME_NOT_FOUND;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_ip_name_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="nfs__ip__name_8c_1aecbe661c31b38258fbf5321f2fc576b3" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1aecbe661c31b38258fbf5321f2fc576b3" kindref="member">nfs_ip_name_remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipaddr)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey,<sp/>old_value;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>IP_NAME_SUCCESS;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>nfs_ip_name_t<sp/>*pnfs_ip_name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>local_ipaddr;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Del(<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>,<sp/>&amp;buffkey,<sp/>NULL,<sp/>&amp;old_value)<sp/>==<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pnfs_ip_name<sp/>=<sp/>(nfs_ip_name_t<sp/>*)<sp/>old_value.pdata;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pnfs_ip_name);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>IP_NAME_NOT_FOUND;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_ip_name_remove<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="nfs__ip__name_8c_1a612791deebb45def97a52c9f3a938435" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a612791deebb45def97a52c9f3a938435" kindref="member">nfs_Init_ip_name</ref>(nfs_ip_name_parameter_t<sp/>param)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref><sp/>=<sp/>HashTable_Init(param.hash_param))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_INIT,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>IP_NAME:<sp/>Cannot<sp/>init<sp/>IP/name<sp/>cache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>expiration<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="nfs__ip__name_8c_1a544f7c05ec828d69dab5ac370f978695" kindref="member">expiration_time</ref><sp/>=<sp/>param.expiration_time;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_SUCCESS;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_ip_name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="nfs__ip__name_8c_1a2c6b07deab3557e1b1ce872631e31936" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1a2c6b07deab3557e1b1ce872631e31936" kindref="member">nfs_ip_name_populate</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>config_file_t<sp/>config_file;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>config_item_t<sp/>block;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_max;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_index;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_name;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_value;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>label[MAXNAMLEN];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipaddr;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>long_ipaddr;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>nfs_ip_name_t<sp/>*pnfs_ip_name;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffdata;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>config_file<sp/>=<sp/>config_ParseFile(path);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_file)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_CONFIG,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_NOT_FOUND;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>config<sp/>BLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((block<sp/>=<sp/>config_FindItemByName(config_file,<sp/>CONF_LABEL_IP_NAME_HOSTS))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_CONFIG,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>get<sp/>label<sp/>%s<sp/>in<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>CONF_LABEL_IP_NAME_HOSTS,<sp/>path);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_NOT_FOUND;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(config_ItemType(block)<sp/>!=<sp/>CONFIG_ITEM_BLOCK)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>to<sp/>be<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_NOT_FOUND;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>var_max<sp/>=<sp/>config_GetNbItems(block);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var_index<sp/>=<sp/>0;<sp/>var_index<sp/>&lt;<sp/>var_max;<sp/>var_index++)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_item_t<sp/>item;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>config_GetItemByIndex(block,<sp/>var_index);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>key&apos;s<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((err<sp/>=<sp/>config_GetKeyValue(item,<sp/>&amp;key_name,<sp/>&amp;key_value))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_CONFIG,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>key[%d]<sp/>from<sp/>section<sp/>\&quot;%s\&quot;<sp/>of<sp/>configuration<sp/>file.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_index,<sp/>label);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ID_MAPPER_NOT_FOUND;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ipaddr<sp/>=<sp/>inet_addr(key_value);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>long_ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Entry<sp/>to<sp/>be<sp/>cached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pnfs_ip_name<sp/>=<sp/>(nfs_ip_name_t<sp/>*)<sp/>Mem_Alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nfs_ip_name_t)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ID_MAPPER_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>build<sp/>the<sp/>data<sp/>with<sp/>the<sp/>request<sp/>pointer<sp/>that<sp/>should<sp/>be<sp/>in<sp/>state<sp/>&apos;IN<sp/>USE&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pnfs_ip_name-&gt;ipaddr<sp/>=<sp/>ipaddr;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(pnfs_ip_name-&gt;hostname,<sp/>key_name,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pnfs_ip_name-&gt;timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffdata.pdata<sp/>=<sp/>(caddr_t)<sp/>pnfs_ip_name;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffdata.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nfs_ip_name_t);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>have<sp/>to<sp/>keep<sp/>an<sp/>integer<sp/>as<sp/>key,<sp/>I<sp/>wil<sp/>use<sp/>the<sp/>pointer<sp/>buffkey-&gt;pdata<sp/>for<sp/>this,</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>also<sp/>means<sp/>that<sp/>buffkey-&gt;len<sp/>will<sp/>be<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>long_ipaddr;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Set(<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>,<sp/>&amp;buffkey,<sp/>&amp;buffdata)<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>HashTable_Log(<sp/>ht_ip_name<sp/>)<sp/>;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IP_NAME_SUCCESS;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_ip_name_populate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="nfs__ip__name_8c_1ad811431e97ee867d8810380117145dd9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__ip__name_8c_1ad811431e97ee867d8810380117145dd9" kindref="member">nfs_ip_name_get_stats</ref>(hash_stat_t<sp/>*<sp/>phstat)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>HashTable_GetStats(<ref refid="nfs__ip__name_8c_1a5251176180528d659fc5112ebd2ef27c" kindref="member">ht_ip_name</ref>,<sp/>phstat);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_ip_name_get_stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/support/nfs_ip_name.c"/>
  </compounddef>
</doxygen>
