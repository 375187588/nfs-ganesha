<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="test__clientid__full_8c" kind="file">
    <compoundname>test_clientid_full.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">sys/resource.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">gssapi/gssapi.h</includes>
    <includes local="no">rpc/types.h</includes>
    <includes local="no">rpc/rpc.h</includes>
    <includes local="no">rpc/auth.h</includes>
    <includes local="no">rpc/pmap_clnt.h</includes>
    <includes local="yes">log_functions.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">fsal.h</includes>
    <includes local="yes">nfs23.h</includes>
    <includes local="yes">nfs4.h</includes>
    <includes local="yes">mount.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">cache_inode.h</includes>
    <includes local="yes">cache_content.h</includes>
    <includes local="yes">nfs_file_handle.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">nfs_tools.h</includes>
    <includes local="yes">nfs_proto_functions.h</includes>
    <includes local="yes">nfs_dupreq.h</includes>
    <includes local="yes">config_parsing.h</includes>
    <includes local="yes">SemN.h</includes>
    <incdepgraph>
      <node id="332">
        <label>rpc/pmap_clnt.h</label>
      </node>
      <node id="347">
        <label>config_parsing.h</label>
      </node>
      <node id="338">
        <label>mount.h</label>
      </node>
      <node id="335">
        <label>fsal.h</label>
      </node>
      <node id="341">
        <label>cache_content.h</label>
      </node>
      <node id="324">
        <label>fcntl.h</label>
      </node>
      <node id="329">
        <label>rpc/types.h</label>
      </node>
      <node id="333">
        <label>log_functions.h</label>
      </node>
      <node id="326">
        <label>sys/resource.h</label>
      </node>
      <node id="337">
        <label>nfs4.h</label>
      </node>
      <node id="323">
        <label>pthread.h</label>
      </node>
      <node id="322">
        <label>string.h</label>
      </node>
      <node id="331">
        <label>rpc/auth.h</label>
      </node>
      <node id="327">
        <label>signal.h</label>
      </node>
      <node id="325">
        <label>sys/file.h</label>
      </node>
      <node id="330">
        <label>rpc/rpc.h</label>
      </node>
      <node id="348">
        <label>SemN.h</label>
      </node>
      <node id="343">
        <label>nfs_exports.h</label>
      </node>
      <node id="339">
        <label>nfs_core.h</label>
      </node>
      <node id="336">
        <label>nfs23.h</label>
      </node>
      <node id="345">
        <label>nfs_proto_functions.h</label>
      </node>
      <node id="320">
        <label>test_clientid_full.c</label>
        <link refid="test_clientid_full.c"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>stuff_alloc.h</label>
      </node>
      <node id="321">
        <label>stdio.h</label>
      </node>
      <node id="340">
        <label>cache_inode.h</label>
      </node>
      <node id="342">
        <label>nfs_file_handle.h</label>
      </node>
      <node id="328">
        <label>gssapi/gssapi.h</label>
      </node>
      <node id="344">
        <label>nfs_tools.h</label>
      </node>
      <node id="346">
        <label>nfs_dupreq.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__clientid__full_8c_1a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_client_id_compute</definition>
        <argsstring>(char *name, clientid4 *pclientid)</argsstring>
        <name>nfs_client_id_compute</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>clientid4 *</type>
          <declname>pclientid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/support/test_clientid_full.c" line="48" bodystart="46" bodyend="142"/>
        <references refid="nfs__state__id_8c_1a3">strnlen</references>
        <referencedby refid="nfs__client__id_8c_1a7" compoundref="nfs__client__id_8c" startline="195" endline="204">client_id_rbt_hash_func_reverse</referencedby>
        <referencedby refid="test__clientid_8c_1a1" compoundref="test__clientid_8c" startline="148" endline="167">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="test__clientid__full_8c_1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/support/test_clientid_full.c" line="145" bodystart="144" bodyend="160"/>
        <references refid="test__clientid__full_8c_1a0" compoundref="test__clientid__full_8c" startline="46" endline="142">nfs_client_id_compute</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>FNDELAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>setrlimit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>sigaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssapi/gssapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB5</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssapi/gssapi_krb5.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>krb5_gss_register_acceptor_identity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs23.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mount.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_content.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_file_handle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_proto_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_dupreq.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_parsing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SemN.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="test__clientid__full_8c_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__clientid__full_8c_1a0" kindref="member">nfs_client_id_compute</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>name,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientid4<sp/>*<sp/>pclientid<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padded_name[CLIENT_ID_MAX_LEN]<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>clientid4<sp/><sp/><sp/><sp/>computed_value<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/><sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>extract<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>sum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i1<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i2<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i3<sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i4<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i5<sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i6<sp/>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i7<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i8<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>i9<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/>l<sp/><sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name<sp/>==<sp/>NULL<sp/>||<sp/>pclientid<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CLIENT_ID_INVALID_ARGUMENT<sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>memset(<sp/>padded_name,<sp/>0,<sp/>CLIENT_ID_MAX_LEN<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>string<sp/>to<sp/>the<sp/>padded<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="nfs__state__id_8c_1a3" kindref="member">strnlen</ref>(<sp/>name,<sp/>CLIENT_ID_MAX_LEN<sp/>)<sp/>;<sp/>padded_name[i]<sp/>=<sp/>name[i],<sp/>i++<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_PRINTF_DEBUG_CLIENT_ID_COMPUTE</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>:&quot;</highlight><highlight class="normal">,<sp/>padded_name<sp/>)<sp/>;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>9<sp/>character<sp/>pack:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>keep<sp/>the<sp/>7<sp/>first<sp/>bit<sp/>(the<sp/>8th<sp/>is<sp/>often<sp/>0:<sp/>ascii<sp/>string)<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>pack<sp/>7x9<sp/>bit<sp/>to<sp/>63<sp/>bits<sp/>using<sp/>xor</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>xor<sp/>the<sp/>last<sp/>8th<sp/>bit<sp/>to<sp/>a<sp/>single<sp/>0<sp/>,<sp/>or-ed<sp/>with<sp/>the<sp/>rest</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Proceeding<sp/>with<sp/>the<sp/>next<sp/>9<sp/>bytes<sp/>pack<sp/>will<sp/>produce<sp/>a<sp/>new<sp/>value<sp/>that<sp/>is<sp/>xored<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>*<sp/>one<sp/>of<sp/>the<sp/>previous<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>offset<sp/>=<sp/>0<sp/>;<sp/>offset<sp/>&lt;<sp/>CLIENT_ID_MAX_LEN<sp/>;<sp/>offset<sp/>+=<sp/>9<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>name<sp/>is<sp/>ascii<sp/>string,<sp/>remove<sp/>8th<sp/>bit<sp/>on<sp/>each<sp/>byte,<sp/>not<sp/>significant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>padded_name[offset+0]<sp/>&amp;<sp/>0x7F<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>(<sp/>padded_name[offset+1]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>7<sp/>;<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>(<sp/>padded_name[offset+2]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>14<sp/>;<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i4<sp/>=<sp/>(<sp/>padded_name[offset+3]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>21<sp/>;<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i5<sp/>=<sp/>(<sp/>padded_name[offset+4]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>28<sp/>;<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i6<sp/>=<sp/>(<sp/>padded_name[offset+5]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>35<sp/>;<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i7<sp/>=<sp/>(<sp/>padded_name[offset+6]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>42<sp/>;<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i8<sp/>=<sp/>(<sp/>padded_name[offset+7]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>49<sp/>;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i9<sp/>=<sp/>(<sp/>padded_name[offset+8]<sp/>&amp;<sp/>0x7F<sp/>)<sp/>&lt;&lt;<sp/>56<sp/>;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>(uint64_t)padded_name[offset+0]<sp/>+</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+1]<sp/>+</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+2]<sp/>+</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+3]<sp/>+</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+4]<sp/>+</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+5]<sp/>+</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+6]<sp/>+</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+7]<sp/>+</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+8]<sp/>+</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)padded_name[offset+9]<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_PRINTF_DEBUG_CLIENT_ID_COMPUTE</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|%llx<sp/>|<sp/>=<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4,<sp/>i5,<sp/>i6,<sp/>i7,<sp/>i8,<sp/>i9<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>xor<sp/>combibation<sp/>of<sp/>all<sp/>the<sp/>8h<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<sp/>padded_name[offset+0]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+1]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+2]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+3]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+4]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+5]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+6]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+7]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+8]<sp/>&amp;<sp/>0x80<sp/>)<sp/>^</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>padded_name[offset+9]<sp/>&amp;<sp/>0x80<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extract<sp/>=<sp/>i1<sp/>^<sp/>i2<sp/>^<sp/>i3<sp/>^<sp/>i4<sp/>^<sp/>i5<sp/>^<sp/>i6<sp/>^<sp/>i7<sp/>^<sp/>i8<sp/>^<sp/>i9<sp/>|<sp/>l<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_PRINTF_DEBUG_CLIENT_ID_COMPUTE</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%llx<sp/>&quot;</highlight><highlight class="normal">,<sp/>extract<sp/>)<sp/>;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>computed_value<sp/>^=<sp/>extract<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>computed_value<sp/>^=<sp/>sum<sp/>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_PRINTF_DEBUG_CLIENT_ID_COMPUTE</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>)<sp/>;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>*pclientid<sp/>=<sp/>computed_value<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CLIENT_ID_SUCCESS<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>nfs_client_id_compute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="test__clientid__full_8c_1a1" refkind="member"><highlight class="normal"><ref refid="test__clientid__full_8c_1a1" kindref="member">main</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[CLIENT_ID_MAX_LEN]<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>clientid4<sp/>clientid<sp/>;<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>;<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>==<sp/>1<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<sp/>0<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc<sp/>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(<sp/>name,<sp/>argv[i],<sp/>CLIENT_ID_MAX_LEN<sp/>)<sp/>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__clientid__full_8c_1a0" kindref="member">nfs_client_id_compute</ref>(<sp/>name,<sp/>&amp;clientid<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;--------&gt;<sp/>#%s#<sp/><sp/>#%llx#\n&quot;</highlight><highlight class="normal">,<sp/>name,<sp/>clientid<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/support/test_clientid_full.c"/>
  </compounddef>
</doxygen>
