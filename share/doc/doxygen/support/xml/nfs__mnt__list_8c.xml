<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs__mnt__list_8c" kind="file">
    <compoundname>nfs_mnt_list.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">netdb.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">pwd.h</includes>
    <includes local="no">grp.h</includes>
    <includes local="no">rpc/types.h</includes>
    <includes local="no">rpc/rpc.h</includes>
    <includes local="no">rpc/auth.h</includes>
    <includes local="no">rpc/pmap_clnt.h</includes>
    <includes local="yes">log_functions.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">nfs23.h</includes>
    <includes local="yes">nfs4.h</includes>
    <includes local="yes">fsal.h</includes>
    <includes local="yes">nfs_tools.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">nfs_file_handle.h</includes>
    <incdepgraph>
      <node id="183">
        <label>grp.h</label>
      </node>
      <node id="176">
        <label>netinet/in.h</label>
      </node>
      <node id="177">
        <label>arpa/inet.h</label>
      </node>
      <node id="187">
        <label>rpc/pmap_clnt.h</label>
      </node>
      <node id="193">
        <label>fsal.h</label>
      </node>
      <node id="173">
        <label>stdlib.h</label>
      </node>
      <node id="180">
        <label>fcntl.h</label>
      </node>
      <node id="184">
        <label>rpc/types.h</label>
      </node>
      <node id="175">
        <label>netdb.h</label>
      </node>
      <node id="188">
        <label>log_functions.h</label>
      </node>
      <node id="192">
        <label>nfs4.h</label>
      </node>
      <node id="179">
        <label>pthread.h</label>
      </node>
      <node id="171">
        <label>sys/types.h</label>
      </node>
      <node id="178">
        <label>string.h</label>
      </node>
      <node id="186">
        <label>rpc/auth.h</label>
      </node>
      <node id="169">
        <label>nfs_mnt_list.c</label>
        <link refid="nfs_mnt_list.c"/>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>sys/file.h</label>
      </node>
      <node id="185">
        <label>rpc/rpc.h</label>
      </node>
      <node id="195">
        <label>nfs_exports.h</label>
      </node>
      <node id="190">
        <label>nfs_core.h</label>
      </node>
      <node id="191">
        <label>nfs23.h</label>
      </node>
      <node id="172">
        <label>ctype.h</label>
      </node>
      <node id="182">
        <label>pwd.h</label>
      </node>
      <node id="189">
        <label>stuff_alloc.h</label>
      </node>
      <node id="170">
        <label>stdio.h</label>
      </node>
      <node id="196">
        <label>nfs_file_handle.h</label>
      </node>
      <node id="194">
        <label>nfs_tools.h</label>
      </node>
      <node id="174">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" prot="public" static="no" mutable="no">
        <type>mountlist</type>
        <definition>mountlist MNT_List_head</definition>
        <argsstring></argsstring>
        <name>MNT_List_head</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="108" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" prot="public" static="no" mutable="no">
        <type>mountlist</type>
        <definition>mountlist MNT_List_tail</definition>
        <argsstring></argsstring>
        <name>MNT_List_tail</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="109" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs__mnt__list_8c_1a77e5b0b371fdafa06160cf5c107f2100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Add_MountList_Entry</definition>
        <argsstring>(char *hostname, char *dirpath)</argsstring>
        <name>nfs_Add_MountList_Entry</name>
        <param>
          <type>char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dirpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Add_MountList_Entry: Adds a client to the mount list.</para><para>Adds a client to the mount list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the hostname for the client </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirpath</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the mounted path</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="124" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="123" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="nfs__mnt__list_8c_1a50464acbfdc456f6606f2256a2853d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Remove_MountList_Entry</definition>
        <argsstring>(char *hostname, char *dirpath)</argsstring>
        <name>nfs_Remove_MountList_Entry</name>
        <param>
          <type>char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dirpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Remove_MountList_Entry: Removes a client to the mount list.</para><para>Removes a client to the mount list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the hostname for the client </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the mounted path</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="238" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="237" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="nfs__mnt__list_8c_1a7b7356a6a47d2cfbbb9b731e06e26c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Purge_MountList</definition>
        <argsstring>(void)</argsstring>
        <name>nfs_Purge_MountList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Purge_MountList: Purges the whole mount list.</para><para>Purges the whole mount list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para>(take no argument)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="318" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="317" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="nfs__mnt__list_8c_1a529a6ed21c6f0fcef843e6f79e513746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_MountList</definition>
        <argsstring>(void)</argsstring>
        <name>nfs_Init_MountList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_MountList: Initializes the mount list.</para><para>Initializes the mount list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para>(take no argument)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if successful, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="358" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="357" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="nfs__mnt__list_8c_1a4fca0d0f95258907595516525595df0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mountlist</type>
        <definition>mountlist nfs_Get_MountList</definition>
        <argsstring>(void)</argsstring>
        <name>nfs_Get_MountList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Get_MountList: Returns the mount list.</para><para>Returns the mount list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para>(take no argument)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the mount list (NULL if mount list is empty) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="380" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_Print_MountList</definition>
        <argsstring>(void)</argsstring>
        <name>nfs_Print_MountList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Print_MountList: Prints the mount list (for debugging purpose).</para><para>Prints the mount list (for debugging purpose).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para>(take no argument)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/support/nfs_mnt_list.c" line="399" bodyfile="/export/GANESHA/src/support/nfs_mnt_list.c" bodystart="398" bodyend="411"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>routines for managing the mount list. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>deniel </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2005/11/28 17:03:03 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.7 </para></simplesect>
<ref refid="nfs__mnt__list_8c" kindref="compound">nfs_mnt_list.c</ref> : routines for managing the mount list.</para><para><simplesect kind="rcs"><title>Header</title><para>/cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/support/nfs_mnt_list.c,v 1.7 2005/11/28 17:03:03 deniel Exp </para></simplesect>
</para><para><simplesect kind="rcs"><title>Log</title><para><ref refid="nfs__mnt__list_8c" kindref="compound">nfs_mnt_list.c</ref>,v </para></simplesect>
</para><para>Revision 1.6 2005/11/24 13:44:29 deniel ajout du remove dans ipname track list in nfs_mnt_listc.</para><para>Revision 1.5 2005/10/07 09:33:22 leibovic Correcting bug in nfs_Add_MountList_Entry function ( pnew_mnt_list_entry-&gt;ml_next not initialized ).</para><para>Revision 1.4 2005/10/05 14:03:31 deniel DEBUG ifdef are now much cleaner</para><para>Revision 1.3 2005/08/11 12:37:28 deniel Added statistics management</para><para>Revision 1.2 2005/08/03 13:13:59 deniel memset to zero before building the filehandles</para><para>Revision 1.1 2005/08/03 06:57:54 deniel Added a libsupport for miscellaneous service functions</para><para>Revision 1.1 2005/07/20 11:49:47 deniel Mount protocol V1/V3 support almost complete </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>isalnum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>atoi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>MAXNAMLEN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>FNDELAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;grp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/auth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs23.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_file_handle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>server&apos;s<sp/>mount<sp/>list<sp/>(we<sp/>use<sp/>the<sp/>native<sp/>mount<sp/>v3<sp/>structure)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" refkind="member"><highlight class="normal">mountlist<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="109" refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" refkind="member"><highlight class="normal">mountlist<sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="nfs__mnt__list_8c_1a77e5b0b371fdafa06160cf5c107f2100" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a77e5b0b371fdafa06160cf5c107f2100" kindref="member">nfs_Add_MountList_Entry</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostname,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>mountlist<sp/>pnew_mnt_list_entry;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hostname<sp/>==<sp/>NULL<sp/>||<sp/>dirpath<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;struct<sp/>mountbody&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>new<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pnew_mnt_list_entry<sp/>=<sp/>(mountlist)<sp/>Mem_Alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>mountbody)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>memset(pnew_mnt_list_entry,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>mountbody));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;ml_hostname&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pnew_mnt_list_entry-&gt;ml_hostname<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)Mem_Alloc(MAXHOSTNAMELEN))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(pnew_mnt_list_entry);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>memset(pnew_mnt_list_entry-&gt;ml_hostname,<sp/>0,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;ml_directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pnew_mnt_list_entry-&gt;ml_directory<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)Mem_Alloc(MAXPATHLEN))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(pnew_mnt_list_entry-&gt;ml_hostname);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(pnew_mnt_list_entry);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>memset(pnew_mnt_list_entry-&gt;ml_directory,<sp/>0,<sp/>MAXPATHLEN);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>strncpy(pnew_mnt_list_entry-&gt;ml_hostname,<sp/>hostname,<sp/>MAXHOSTNAMELEN);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>strncpy(pnew_mnt_list_entry-&gt;ml_directory,<sp/>dirpath,<sp/>MAXPATHLEN);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>next<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>pnew_mnt_list_entry-&gt;ml_next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>should<sp/>occur<sp/>only<sp/>for<sp/>the<sp/>first<sp/>mount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>=<sp/>pnew_mnt_list_entry;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>to<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>pnew_mnt_list_entry;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref>-&gt;ml_next<sp/>=<sp/>pnew_mnt_list_entry;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>pnew_mnt_list_entry;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_NFSPROTO))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_MEMCORRUPT))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!BuddyCheck(<ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>)<sp/>||<sp/>!BuddyCheck(<ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref>))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_MEMCORRUPT,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>corruption<sp/>in<sp/>nfs_Add_MountList_Entry.<sp/>Head<sp/>=<sp/>%p,<sp/>Tail<sp/>=<sp/>%p.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>,<sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!BuddyCheck(pnew_mnt_list_entry-&gt;ml_hostname)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!BuddyCheck(pnew_mnt_list_entry-&gt;ml_directory))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_MEMCORRUPT,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>corruption<sp/>in<sp/>nfs_Add_MountList_Entry.<sp/>Hostname<sp/>=<sp/>%p,<sp/>Directory<sp/>=<sp/>%p.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnew_mnt_list_entry-&gt;ml_hostname,<sp/>pnew_mnt_list_entry-&gt;ml_directory);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Add_MountList_Entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="nfs__mnt__list_8c_1a50464acbfdc456f6606f2256a2853d31" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a50464acbfdc456f6606f2256a2853d31" kindref="member">nfs_Remove_MountList_Entry</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostname,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>mountlist<sp/>piter_mnt_list_entry;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>mountlist<sp/>piter_mnt_list_entry_prev;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hostname<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>piter_mnt_list_entry_prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(piter_mnt_list_entry<sp/>=<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry<sp/>!=<sp/>NULL;<sp/>piter_mnt_list_entry<sp/>=<sp/>piter_mnt_list_entry-&gt;ml_next)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_MEMCORRUPT))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!BuddyCheck(piter_mnt_list_entry)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!BuddyCheck(piter_mnt_list_entry-&gt;ml_hostname)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!BuddyCheck(piter_mnt_list_entry-&gt;ml_directory))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_MEMCORRUPT,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>corruption<sp/>in<sp/>nfs_Remove_MountList_Entry.<sp/>Current<sp/>=<sp/>%p,<sp/>Head<sp/>=<sp/>%p,<sp/>Tail<sp/>=<sp/>%p.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry,<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>,<sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BUGAZOMEU:<sp/>pas<sp/>de<sp/>verif<sp/>sur<sp/>le<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strncmp(piter_mnt_list_entry-&gt;ml_hostname,<sp/>hostname,<sp/>MAXHOSTNAMELEN)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>&amp;&amp;<sp/>!strncmp(<sp/>piter_mnt_list_entry-&gt;ml_directory,<sp/>dirpath,<sp/>MAXPATHLEN<sp/>)<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry_prev<sp/>=<sp/>piter_mnt_list_entry;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>head<sp/>item<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(piter_mnt_list_entry_prev<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>=<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>-&gt;ml_next;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry_prev-&gt;ml_next<sp/>=<sp/>piter_mnt_list_entry-&gt;ml_next;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>tail<sp/>item<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>==<sp/>piter_mnt_list_entry)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>piter_mnt_list_entry_prev;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry-&gt;ml_hostname);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry-&gt;ml_directory);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_NFSPROTO))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Remove_MountList_Entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="nfs__mnt__list_8c_1a7b7356a6a47d2cfbbb9b731e06e26c2c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a7b7356a6a47d2cfbbb9b731e06e26c2c" kindref="member">nfs_Purge_MountList</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>mountlist<sp/>piter_mnt_list_entry,<sp/>piter_mnt_list_entry_next;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>piter_mnt_list_entry<sp/>=<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>piter_mnt_list_entry_next<sp/>=<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(piter_mnt_list_entry_next<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry_next<sp/>=<sp/>piter_mnt_list_entry-&gt;ml_next;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry-&gt;ml_hostname);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry-&gt;ml_directory);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(piter_mnt_list_entry);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry<sp/>=<sp/>piter_mnt_list_entry_next;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_NFSPROTO))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Purge_MountList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="nfs__mnt__list_8c_1a529a6ed21c6f0fcef843e6f79e513746" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a529a6ed21c6f0fcef843e6f79e513746" kindref="member">nfs_Init_MountList</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="nfs__mnt__list_8c_1a1aaadaa5abecc33356a81d70be0ddb99" kindref="member">MNT_List_tail</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_NFSPROTO))</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_MountList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="nfs__mnt__list_8c_1a4fca0d0f95258907595516525595df0c" refkind="member"><highlight class="normal">mountlist<sp/><ref refid="nfs__mnt__list_8c_1a4fca0d0f95258907595516525595df0c" kindref="member">nfs_Get_MountList</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFullDebug(COMPONENT_NFSPROTO))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Get_MountList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__mnt__list_8c_1a980ca0cf26ea0d7e2916334dd8fbaccc" kindref="member">nfs_Print_MountList</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>mountlist<sp/>piter_mnt_list_entry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_NFSPROTO,<sp/></highlight><highlight class="stringliteral">&quot;Mount<sp/>List<sp/>Entry<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(piter_mnt_list_entry<sp/>=<sp/><ref refid="nfs__mnt__list_8c_1a0cb1ecb6d47b828196eddc48d9621d98" kindref="member">MNT_List_head</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry<sp/>!=<sp/>NULL;<sp/>piter_mnt_list_entry<sp/>=<sp/>piter_mnt_list_entry-&gt;ml_next)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_NFSPROTO,<sp/></highlight><highlight class="stringliteral">&quot;Mount<sp/>List<sp/>Entry<sp/>:<sp/>ml_hostname=%s<sp/><sp/><sp/>ml_directory=%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piter_mnt_list_entry-&gt;ml_hostname,<sp/>piter_mnt_list_entry-&gt;ml_directory);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Print_MountList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/support/nfs_mnt_list.c"/>
  </compounddef>
</doxygen>
