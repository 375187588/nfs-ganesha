.TH "nfs_worker_thread.c" 3 "15 Sep 2010" "Version 0.1" "Daemon Main" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nfs_worker_thread.c \- 
.PP
The file that contain the 'worker_thread' routine for the nfsd.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include <fcntl.h>\fP
.br
\fC#include <sys/file.h>\fP
.br
\fC#include 'HashData.h'\fP
.br
\fC#include 'HashTable.h'\fP
.br
\fC#include <rpc/rpc.h>\fP
.br
\fC#include <rpc/svc.h>\fP
.br
\fC#include <rpc/pmap_clnt.h>\fP
.br
\fC#include 'log_macros.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'nfs23.h'\fP
.br
\fC#include 'nfs4.h'\fP
.br
\fC#include 'mount.h'\fP
.br
\fC#include 'nlm4.h'\fP
.br
\fC#include 'rquota.h'\fP
.br
\fC#include 'nfs_core.h'\fP
.br
\fC#include 'cache_inode.h'\fP
.br
\fC#include 'cache_content.h'\fP
.br
\fC#include 'nfs_exports.h'\fP
.br
\fC#include 'nfs_creds.h'\fP
.br
\fC#include 'nfs_proto_functions.h'\fP
.br
\fC#include 'nfs_dupreq.h'\fP
.br
\fC#include 'nfs_file_handle.h'\fP
.br
\fC#include 'nfs_stat.h'\fP
.br
\fC#include 'SemN.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBNULL_SVC\fP   ((struct svc_callout *)0)"
.br
.ti -1c
.RI "#define \fBSVCAUTH_PRIVATE\fP(auth)   ((struct \fBsvc_rpc_gss_data\fP *)(auth)->svc_ah_private)"
.br
.ti -1c
.RI "#define \fBnlm4_Unsupported\fP   nlm_Null"
.br
.ti -1c
.RI "#define \fBnlm4_Unsupported_Free\fP   nlm_Null_Free"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "enum auth_stat \fB_authenticate\fP (register struct svc_req *rqst, struct rpc_msg *msg)"
.br
.ti -1c
.RI "void \fBSvcudp_soft_destroy\fP (register SVCXPRT *xprt)"
.br
.ti -1c
.RI "void \fBnfs_Cleanup_request_data\fP (nfs_request_data_t *pdata)"
.br
.ti -1c
.RI "struct timeval \fBtime_diff\fP (struct timeval time_from, struct timeval time_to)"
.br
.ti -1c
.RI "int \fBnfs_Init_worker_data\fP (nfs_worker_data_t *pdata)"
.br
.ti -1c
.RI "void * \fBworker_thread\fP (void *IndexArg)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "nfs_worker_data_t * \fBworkers_data\fP"
.br
.ti -1c
.RI "nfs_parameter_t \fBnfs_param\fP"
.br
.ti -1c
.RI "SVCXPRT * \fBXports\fP [FD_SETSIZE]"
.br
.ti -1c
.RI "hash_table_t * \fBht_dupreq\fP"
.br
.ti -1c
.RI "unsigned int \fBnb_current_gc_workers\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBlock_nb_current_gc_workers\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBmutex_cond_xprt\fP [FD_SETSIZE]"
.br
.ti -1c
.RI "pthread_cond_t \fBcondvar_xprt\fP [FD_SETSIZE]"
.br
.ti -1c
.RI "int \fBetat_xprt\fP [FD_SETSIZE]"
.br
.ti -1c
.RI "int \fBnfs_do_terminate\fP = FALSE"
.br
.ti -1c
.RI "const nfs_function_desc_t \fBnfs2_func_desc\fP []"
.br
.ti -1c
.RI "const nfs_function_desc_t \fBnfs3_func_desc\fP []"
.br
.ti -1c
.RI "const nfs_function_desc_t \fBnfs4_func_desc\fP []"
.br
.ti -1c
.RI "const nfs_function_desc_t \fBmnt1_func_desc\fP []"
.br
.ti -1c
.RI "const nfs_function_desc_t \fBmnt3_func_desc\fP []"
.br
.in -1c
.SH "Detailed Description"
.PP 
The file that contain the 'worker_thread' routine for the nfsd. 

\fBAuthor:\fP
.RS 4
$Author$ 
.RE
.PP
\fBDate:\fP
.RS 4
$Date$ 
.RE
.PP
\fBVersion:\fP
.RS 4
$Revision$ \fBnfs_worker_thread.c\fP : The file that contain the 'worker_thread' routine for the nfsd (and all the related stuff). 
.RE
.PP

.PP
Definition in file \fBnfs_worker_thread.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define nlm4_Unsupported   nlm_Null"
.PP
Definition at line 245 of file nfs_worker_thread.c.
.SS "#define nlm4_Unsupported_Free   nlm_Null_Free"
.PP
Definition at line 246 of file nfs_worker_thread.c.
.SS "#define NULL_SVC   ((struct svc_callout *)0)"
.PP
Definition at line 84 of file nfs_worker_thread.c.
.SS "#define SVCAUTH_PRIVATE(auth)   ((struct \fBsvc_rpc_gss_data\fP *)(auth)->svc_ah_private)"
.PP
Definition at line 85 of file nfs_worker_thread.c.
.SH "Function Documentation"
.PP 
.SS "enum auth_stat _authenticate (register struct svc_req * rqst, struct rpc_msg * msg)"
.SS "void nfs_Cleanup_request_data (nfs_request_data_t * pdata)"nfs_Cleanup_request_data: clean the data associated with a request
.PP
This function is used to clean the nfs_request_data for a worker. These data are used by the worker for RPC processing.
.PP
\fBParameters:\fP
.RS 4
\fIparam\fP A structure of type nfs_worker_parameter_t with all the necessary information related to a worker 
.br
\fIpdata\fP Pointer to the data to be initialized.
.RE
.PP
\fBReturns:\fP
.RS 4
0 if successfull, -1 otherwise. 
.RE
.PP

.PP
Definition at line 409 of file nfs_worker_thread.c.
.SS "int nfs_Init_worker_data (nfs_worker_data_t * pdata)"nfs_Init_worker_data: Init the data associated with a worker instance.
.PP
This function is used to init the nfs_worker_data for a worker thread. These data are used by the worker for RPC processing.
.PP
\fBParameters:\fP
.RS 4
\fIparam\fP A structure of type nfs_worker_parameter_t with all the necessary information related to a worker 
.br
\fIpdata\fP Pointer to the data to be initialized.
.RE
.PP
\fBReturns:\fP
.RS 4
0 if successfull, -1 otherwise. 
.RE
.PP

.PP
Definition at line 1058 of file nfs_worker_thread.c.
.SS "void Svcudp_soft_destroy (register SVCXPRT * xprt)"
.PP
Definition at line 294 of file Svc_udp_gssrpc.c.
.SS "struct timeval time_diff (struct timeval time_from, struct timeval time_to)\fC [read]\fP"
.PP
Definition at line 417 of file nfs_worker_thread.c.
.SS "void* worker_thread (void * IndexArg)"worker_thread: The main function for a worker thread
.PP
This is the body of the worker thread. Its starting arguments are located in global array worker_data. The argument is no pointer but the worker's index. It then uses this index to address its own worker data in the array.
.PP
\fBParameters:\fP
.RS 4
\fIIndexArg\fP the index for the worker thread, in fact an integer cast as a void *
.RE
.PP
\fBReturns:\fP
.RS 4
Pointer to the result (but this function will mostly loop forever). 
.RE
.PP

.PP
Definition at line 1112 of file nfs_worker_thread.c.
.SH "Variable Documentation"
.PP 
.SS "pthread_cond_t \fBcondvar_xprt\fP[FD_SETSIZE]"
.PP
Definition at line 77 of file Svc_tcp_gssrpc.c.
.SS "int \fBetat_xprt\fP[FD_SETSIZE]"
.PP
Definition at line 78 of file Svc_tcp_gssrpc.c.
.SS "hash_table_t* \fBht_dupreq\fP"
.PP
Definition at line 97 of file nfs_dupreq.c.
.SS "pthread_mutex_t \fBlock_nb_current_gc_workers\fP"
.PP
Definition at line 130 of file nfs_rpc_dispatcher_thread.c.
.SS "const nfs_function_desc_t \fBmnt1_func_desc\fP[]"\fBInitial value:\fP
.PP
.nf
 {
  {mnt_Null, mnt_Null_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_void, 'mnt_Null',
   NOTHING_SPECIAL},
  {mnt_Mnt, mnt1_Mnt_Free, (xdrproc_t) xdr_dirpath, (xdrproc_t) xdr_fhstatus2, 'mnt_Mnt',
   NEEDS_CRED},
  {mnt_Dump, mnt_Dump_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_mountlist, 'mnt_Dump',
   NOTHING_SPECIAL},
  {mnt_Umnt, mnt_Umnt_Free, (xdrproc_t) xdr_dirpath, (xdrproc_t) xdr_void, 'mnt_Umnt',
   NOTHING_SPECIAL},
  {mnt_UmntAll, mnt_UmntAll_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_void,
   'mnt_UmntAll', NOTHING_SPECIAL},
  {mnt_Export, mnt_Export_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_exports,
   'mnt_Export', NOTHING_SPECIAL}
}
.fi
.PP
Definition at line 215 of file nfs_worker_thread.c.
.SS "const nfs_function_desc_t \fBmnt3_func_desc\fP[]"\fBInitial value:\fP
.PP
.nf
 {
  {mnt_Null, mnt_Null_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_void, 'mnt_Null',
   NOTHING_SPECIAL},
  {mnt_Mnt, mnt3_Mnt_Free, (xdrproc_t) xdr_dirpath, (xdrproc_t) xdr_mountres3, 'mnt_Mnt',
   NEEDS_CRED},
  {mnt_Dump, mnt_Dump_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_mountlist, 'mnt_Dump',
   NOTHING_SPECIAL},
  {mnt_Umnt, mnt_Umnt_Free, (xdrproc_t) xdr_dirpath, (xdrproc_t) xdr_void, 'mnt_Umnt',
   NOTHING_SPECIAL},
  {mnt_UmntAll, mnt_UmntAll_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_void,
   'mnt_UmntAll', NOTHING_SPECIAL},
  {mnt_Export, mnt_Export_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_exports,
   'mnt_Export', NOTHING_SPECIAL}
}
.fi
.PP
Definition at line 230 of file nfs_worker_thread.c.
.SS "pthread_mutex_t \fBmutex_cond_xprt\fP[FD_SETSIZE]"
.PP
Definition at line 76 of file Svc_tcp_gssrpc.c.
.SS "unsigned int \fBnb_current_gc_workers\fP"
.PP
Definition at line 129 of file nfs_rpc_dispatcher_thread.c.
.SS "const nfs_function_desc_t \fBnfs2_func_desc\fP[]"
.PP
Definition at line 119 of file nfs_worker_thread.c.
.SS "const nfs_function_desc_t \fBnfs3_func_desc\fP[]"
.PP
Definition at line 158 of file nfs_worker_thread.c.
.SS "const nfs_function_desc_t \fBnfs4_func_desc\fP[]"\fBInitial value:\fP
.PP
.nf
 {
  {nfs_Null, nfs_Null_Free, (xdrproc_t) xdr_void, (xdrproc_t) xdr_void, 'nfs_Null',
   NOTHING_SPECIAL},
  {nfs4_Compound, nfs4_Compound_Free, (xdrproc_t) xdr_COMPOUND4args,
   (xdrproc_t) xdr_COMPOUND4res, 'nfs4_Compound', NEEDS_CRED | SUPPORTS_GSS}
}
.fi
.PP
Definition at line 208 of file nfs_worker_thread.c.
.SS "int \fBnfs_do_terminate\fP = FALSE"
.PP
Definition at line 116 of file nfs_worker_thread.c.
.SS "nfs_parameter_t \fBnfs_param\fP"
.PP
Definition at line 85 of file nfs_init.c.
.SS "nfs_worker_data_t* \fBworkers_data\fP"
.PP
Definition at line 87 of file nfs_init.c.
.SS "SVCXPRT* \fBXports\fP[FD_SETSIZE]"
.PP
Definition at line 27 of file Svc_oncrpc.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Daemon Main from the source code.
