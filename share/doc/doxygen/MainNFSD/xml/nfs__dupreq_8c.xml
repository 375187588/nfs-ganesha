<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs__dupreq_8c" kind="file">
    <compoundname>nfs_dupreq.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">netdb.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">pwd.h</includes>
    <includes local="no">grp.h</includes>
    <includes local="no">rpc/rpc.h</includes>
    <includes local="no">rpc/svc.h</includes>
    <includes local="no">rpc/pmap_clnt.h</includes>
    <includes local="yes">LRU_List.h</includes>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="yes">log_macros.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">nfs23.h</includes>
    <includes local="yes">nfs4.h</includes>
    <includes local="yes">fsal.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">nfs_tools.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">nfs_file_handle.h</includes>
    <includes local="yes">nfs_dupreq.h</includes>
    <incdepgraph>
      <node id="52">
        <label>grp.h</label>
      </node>
      <node id="45">
        <label>netinet/in.h</label>
      </node>
      <node id="46">
        <label>arpa/inet.h</label>
      </node>
      <node id="55">
        <label>rpc/pmap_clnt.h</label>
      </node>
      <node id="56">
        <label>LRU_List.h</label>
      </node>
      <node id="59">
        <label>log_macros.h</label>
      </node>
      <node id="63">
        <label>fsal.h</label>
      </node>
      <node id="42">
        <label>stdlib.h</label>
      </node>
      <node id="49">
        <label>fcntl.h</label>
      </node>
      <node id="54">
        <label>rpc/svc.h</label>
      </node>
      <node id="44">
        <label>netdb.h</label>
      </node>
      <node id="62">
        <label>nfs4.h</label>
      </node>
      <node id="48">
        <label>pthread.h</label>
      </node>
      <node id="40">
        <label>sys/types.h</label>
      </node>
      <node id="47">
        <label>string.h</label>
      </node>
      <node id="58">
        <label>HashTable.h</label>
      </node>
      <node id="50">
        <label>sys/file.h</label>
      </node>
      <node id="53">
        <label>rpc/rpc.h</label>
      </node>
      <node id="66">
        <label>nfs_exports.h</label>
      </node>
      <node id="60">
        <label>nfs_core.h</label>
      </node>
      <node id="61">
        <label>nfs23.h</label>
      </node>
      <node id="41">
        <label>ctype.h</label>
      </node>
      <node id="51">
        <label>pwd.h</label>
      </node>
      <node id="64">
        <label>stuff_alloc.h</label>
      </node>
      <node id="38">
        <label>nfs_dupreq.c</label>
        <link refid="nfs_dupreq.c"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>stdio.h</label>
      </node>
      <node id="57">
        <label>HashData.h</label>
      </node>
      <node id="67">
        <label>nfs_file_handle.h</label>
      </node>
      <node id="65">
        <label>nfs_tools.h</label>
      </node>
      <node id="68">
        <label>nfs_dupreq.h</label>
      </node>
      <node id="43">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nfs__dupreq_8c_1aeb8fc46586993cf210777049fca03969" prot="public" static="no" mutable="no">
        <type>nfs_parameter_t</type>
        <definition>nfs_parameter_t nfs_param</definition>
        <argsstring></argsstring>
        <name>nfs_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="83" bodyfile="/export/GANESHA/src/MainNFSD/nfs_init.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1ad1973964670037b91a33fd6b6e4c40bc" prot="public" static="no" mutable="no">
        <type>nfs_function_desc_t</type>
        <definition>nfs_function_desc_t nfs2_func_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>nfs2_func_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="84" bodyfile="/export/GANESHA/src/MainNFSD/nfs_worker_thread.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1a177ddde86497df151d3b3ff5c876d90a" prot="public" static="no" mutable="no">
        <type>nfs_function_desc_t</type>
        <definition>nfs_function_desc_t nfs3_func_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>nfs3_func_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="85" bodyfile="/export/GANESHA/src/MainNFSD/nfs_worker_thread.c" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1ade3381a451007489495bf0b92585520f" prot="public" static="no" mutable="no">
        <type>nfs_function_desc_t</type>
        <definition>nfs_function_desc_t nfs4_func_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>nfs4_func_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="86" bodyfile="/export/GANESHA/src/MainNFSD/nfs_worker_thread.c" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1a331b43564c209696c670c70673d544e1" prot="public" static="no" mutable="no">
        <type>nfs_function_desc_t</type>
        <definition>nfs_function_desc_t mnt1_func_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>mnt1_func_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="87" bodyfile="/export/GANESHA/src/MainNFSD/nfs_worker_thread.c" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1a7bcfef9b974d9b55a0f057d959a13bb8" prot="public" static="no" mutable="no">
        <type>nfs_function_desc_t</type>
        <definition>nfs_function_desc_t mnt3_func_desc[]</definition>
        <argsstring>[]</argsstring>
        <name>mnt3_func_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="88" bodyfile="/export/GANESHA/src/MainNFSD/nfs_worker_thread.c" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" prot="public" static="no" mutable="no">
        <type>hash_table_t *</type>
        <definition>hash_table_t* ht_dupreq</definition>
        <argsstring></argsstring>
        <name>ht_dupreq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="97" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs__dupreq_8c_1ae04d38ace0d9a143801c1625135d4ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int get_rpc_xid</definition>
        <argsstring>(struct svc_req *reqp)</argsstring>
        <name>get_rpc_xid</name>
        <param>
          <type>struct svc_req *</type>
          <declname>reqp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get_rpc_xid: extract the transfer Id from a RPC request.</para><para>RPC Xid is used for RPC Reply cache. With UDP connection, the xid is in an opaque structure stored in xprt-&gt;xp_p2, but with TCP connection, the xid is in another opaque structure stored in xprt-&gt;xp_p1. xp_p2 and xp_p1 are mutually exclusive. The opaque structure are well defined in ONC RPC protocol definitions, and used internally by the ONC layers. Since I need to know the xid the structures are defined here.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reqp</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the request to be examined.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the found xid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="116" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="115" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1af812dda060fd0aa4f965adadb15dd22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int print_entry_dupreq</definition>
        <argsstring>(LRU_data_t data, char *str)</argsstring>
        <name>print_entry_dupreq</name>
        <param>
          <type>LRU_data_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>print_entry_dupreq: prints an entry in the LRU list.</para><para>prints an entry in the LRU list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] data stored in a LRU entry to be printed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] string used to store the result.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, other values mean an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="165" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a0dd9a264f91e9823e807b34e6994f777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int clean_entry_dupreq</definition>
        <argsstring>(LRU_entry_t *pentry, void *addparam)</argsstring>
        <name>clean_entry_dupreq</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean_entry_dupreq: cleans an entry in the dupreq cache.</para><para>cleans an entry in the dupreq cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be cleaned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, other values mean an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="183" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="182" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a7363cd3531f6119e8a2047a57e51e08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long dupreq_value_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>dupreq_value_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dupreq_rbt_hash_func: computes the hash value for the entry in dupreq cache.</para><para>Computes the hash value for the entry in dupreq cache. In fact, it just use the Xid modulo the hash array size. This function is called internal in the HasTable_* function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] hash table parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffcleff[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the hash key buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed hash value.</para></simplesect>
<simplesect kind="see"><para>HashTable_Init </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="310" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1acd77080a96d71b76efbdee9178171504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long dupreq_rbt_hash_func</definition>
        <argsstring>(hash_parameter_t *p_hparam, hash_buffer_t *buffclef)</argsstring>
        <name>dupreq_rbt_hash_func</name>
        <param>
          <type>hash_parameter_t *</type>
          <declname>p_hparam</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buffclef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dupreq_rbt_hash_func: computes the rbt value for the entry in dupreq cache.</para><para>Computes the rbt value for the entry in dupreq cache. In fact, it just use the Xid itself (which is an unsigned integer) as the rbt value. This function is called internal in the HasTable_* function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] hash table parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffcleff[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the hash key buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the computed rbt value.</para></simplesect>
<simplesect kind="see"><para>HashTable_Init </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="331" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="330" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a1754ccd21821c745e816f32a7a459e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compare_xid</definition>
        <argsstring>(hash_buffer_t *buff1, hash_buffer_t *buff2)</argsstring>
        <name>compare_xid</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff1</declname>
        </param>
        <param>
          <type>hash_buffer_t *</type>
          <declname>buff2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compare_xid: compares the xid stored in the key buffers.</para><para>compare the xid stored in the key buffers. This function is to be used as &apos;compare_key&apos; field in the hashtable storing the nfs duplicated requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff1</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] first key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buff2</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] second key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if keys are identifical, 1 if they are different. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="350" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="349" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a30afd5b6d3dff5d4d7d4767089d59b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int display_xid</definition>
        <argsstring>(hash_buffer_t *pbuff, char *str)</argsstring>
        <name>display_xid</name>
        <param>
          <type>hash_buffer_t *</type>
          <declname>pbuff</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display_xid: displays the xid stored in the buffer.</para><para>displays the xid stored in the buffer. This function is to be used as &apos;key_to_str&apos; field in the hashtable storing the nfs duplicated requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff1</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] buffer to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buff2</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] output string</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of character written. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="370" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a0e0c7a1fda2f7d756dd1b2f8b4f97db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_dupreq</definition>
        <argsstring>(nfs_rpc_dupreq_parameter_t param)</argsstring>
        <name>nfs_Init_dupreq</name>
        <param>
          <type>nfs_rpc_dupreq_parameter_t</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_dupreq: Init the hashtable and LRU for duplicate request cache</para><para>Perform all the required initialization for hashtable and LRU for duplicate request cache</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] parameter used to init the duplicate request cache</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="388" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="387" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a72a8bca40613bd2e5a727a7274ca8e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_dupreq_add</definition>
        <argsstring>(long xid, struct svc_req *ptr_req, nfs_res_t *p_res_nfs, LRU_list_t *lru_dupreq, dupreq_entry_t **p_dupreq_pool)</argsstring>
        <name>nfs_dupreq_add</name>
        <param>
          <type>long</type>
          <declname>xid</declname>
        </param>
        <param>
          <type>struct svc_req *</type>
          <declname>ptr_req</declname>
        </param>
        <param>
          <type>nfs_res_t *</type>
          <declname>p_res_nfs</declname>
        </param>
        <param>
          <type>LRU_list_t *</type>
          <declname>lru_dupreq</declname>
        </param>
        <param>
          <type>dupreq_entry_t **</type>
          <declname>p_dupreq_pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_dupreq_add: adds an entry in the duplicate requests cache.</para><para>Adds an entry in the duplicate requests cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xid</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the transfer id to be used as key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pnfsreq</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the request pointer to cache</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DUPREQ_SUCCESS if successfull<linebreak/>
. </para><simplesectsep/><para>DUPREQ_INSERT_MALLOC_ERROR if an error occured during the insertion process. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="416" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="412" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1af44969aca0de15c4a2079988b6e6c266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nfs_res_t</type>
        <definition>nfs_res_t nfs_dupreq_get</definition>
        <argsstring>(long xid, int *pstatus)</argsstring>
        <name>nfs_dupreq_get</name>
        <param>
          <type>long</type>
          <declname>xid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pstatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_dupreq_get: Tries to get a duplicated requests for dupreq cache</para><para>Tries to get a duplicated requests for dupreq cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xid</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] the transfer id we are looking for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pstatus</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] the pointer to the status for the operation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result previously set if *pstatus == DUPREQ_SUCCESS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="484" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="483" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1a35d644f1f1b2c333ddc223251d615205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_dupreq_gc_function</definition>
        <argsstring>(LRU_entry_t *pentry, void *addparam)</argsstring>
        <name>nfs_dupreq_gc_function</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_dupreq_gc_function: Tests is an entry in dupreq cache is to be set invalid (has expired).</para><para>Tests is an entry in dupreq cache is to be set invalid (has expired).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] pointer to the entry to test</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if entry must be set invalid, 0 if not.</para></simplesect>
<simplesect kind="see"><para>LRU_invalidate_by_function </para><simplesectsep/><para>LRU_gc_invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="523" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="522" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="nfs__dupreq_8c_1aade2ed32dcdd7eb6990c8f99f5c81370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_dupreq_get_stats</definition>
        <argsstring>(hash_stat_t *phstat)</argsstring>
        <name>nfs_dupreq_get_stats</name>
        <param>
          <type>hash_stat_t *</type>
          <declname>phstat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_dupreq_get_stats: gets the hash table statistics for the duplicate requests.</para><para>Gets the hash table statistics for the duplicate requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phstat</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] pointer to the resulting stats.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function)</para></simplesect>
<simplesect kind="see"><para>HashTable_GetStats </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" line="549" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="548" bodyend="551"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>isalnum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>atoi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>MAXNAMLEN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>FNDELAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;grp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/svc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/svc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LRU_List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs23.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_tools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_file_handle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_dupreq.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_parameter_t<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/><ref refid="nfs__dupreq_8c_1ad1973964670037b91a33fd6b6e4c40bc" kindref="member">nfs2_func_desc</ref>[];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/><ref refid="nfs__dupreq_8c_1a177ddde86497df151d3b3ff5c876d90a" kindref="member">nfs3_func_desc</ref>[];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/><ref refid="nfs__dupreq_8c_1ade3381a451007489495bf0b92585520f" kindref="member">nfs4_func_desc</ref>[];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/><ref refid="nfs__dupreq_8c_1a331b43564c209696c670c70673d544e1" kindref="member">mnt1_func_desc</ref>[];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/><ref refid="nfs__dupreq_8c_1a7bcfef9b974d9b55a0f057d959a13bb8" kindref="member">mnt3_func_desc</ref>[];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/>nlm4_func_desc[];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/>rquota1_func_desc[];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_function_desc_t<sp/>rquota2_func_desc[];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structure<sp/>used<sp/>for<sp/>duplicated<sp/>request<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="nfs__worker__thread_8c_1a3ada0731d68a5b4aab865acfd3d73290" refkind="member"><highlight class="normal">hash_table_t<sp/>*<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="nfs__dupreq_8c_1ae04d38ace0d9a143801c1625135d4ad7" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1ae04d38ace0d9a143801c1625135d4ad7" kindref="member">get_rpc_xid</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_req<sp/>*reqp)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>RPC<sp/>Xid<sp/>is<sp/>used<sp/>for<sp/>RPC<sp/>Reply<sp/>cache.<sp/>With<sp/>UDP<sp/>connection,<sp/>the<sp/>xid<sp/>is<sp/>in<sp/>an<sp/>opaque<sp/>structure</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*<sp/>stored<sp/>in<sp/>xprt-&gt;xp_p2,<sp/>but<sp/>with<sp/>TCP<sp/>connection,<sp/>the<sp/>xid<sp/>is<sp/>in<sp/>another<sp/>opaque<sp/>structure<sp/>stored</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>xprt-&gt;xp_p1.<sp/>xp_p2<sp/>and<sp/>xp_p1<sp/>are<sp/>mutually<sp/>exclusive.<sp/>The<sp/>opaque<sp/>structure<sp/>are<sp/>well<sp/>defined<sp/>in</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ONC<sp/>RPC<sp/>protocol<sp/>definitions,<sp/>and<sp/>used<sp/>internally<sp/>by<sp/>the<sp/>ONC<sp/>layers.<sp/>Since<sp/>I<sp/>need<sp/>to<sp/>know<sp/>the<sp/>xid</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>structures<sp/>are<sp/>defined<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">udp_private2__</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>kept<sp/>in<sp/>xprt-&gt;xp_p2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>up_unused;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>u_long<sp/>up_xid;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tcp_conn2__</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>kept<sp/>in<sp/>xprt-&gt;xp_p1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>xprt_stat<sp/>strm_stat;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>u_long<sp/>x_id;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>XDR<sp/>xdrs;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>verf_body[MAX_AUTH_BYTES];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Xid;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>the<sp/>xp1<sp/>and<sp/>xp2<sp/>field<sp/>to<sp/>the<sp/>udp<sp/>and<sp/>tcp<sp/>private<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tcp_conn2__<sp/>*ptcpxp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tcp_conn2__<sp/>*)(reqp-&gt;rq_xprt-&gt;xp_p1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">udp_private2__<sp/>*pudpxp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">udp_private2__<sp/>*)(reqp-&gt;rq_xprt-&gt;xp_p2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>request<sp/>is<sp/>either<sp/>UDP<sp/>or<sp/>TCP.<sp/>If<sp/>UDP<sp/>Xid<sp/>is<sp/>null,<sp/>then<sp/>look<sp/>for<sp/>TCP<sp/>xid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reqp-&gt;rq_xprt-&gt;xp_p2<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Xid<sp/>=<sp/>pudpxp-&gt;up_xid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UDP<sp/>XID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Xid<sp/>=<sp/>ptcpxp-&gt;x_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TCP<sp/>XID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xid;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get_rpc_xid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="nfs__dupreq_8c_1af812dda060fd0aa4f965adadb15dd22d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1af812dda060fd0aa4f965adadb15dd22d" kindref="member">print_entry_dupreq</ref>(LRU_data_t<sp/>data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>strcpy(str,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="nfs__dupreq_8c_1a0dd9a264f91e9823e807b34e6994f777" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a0dd9a264f91e9823e807b34e6994f777" kindref="member">clean_entry_dupreq</ref>(LRU_entry_t<sp/>*<sp/>pentry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addparam)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>nfs_function_desc_t<sp/>funcdesc;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>dupreq_entry_t<sp/>**dupreq_pool<sp/>=<sp/>(dupreq_entry_t<sp/>**)<sp/>addparam;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>dupreq_entry_t<sp/>*pdupreq<sp/>=<sp/>(dupreq_entry_t<sp/>*)<sp/>(pentry-&gt;buffdata.pdata);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Removing<sp/>entry<sp/>in<sp/>the<sp/>hash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>pdupreq-&gt;xid;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>LogDebug(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>Garbage<sp/>collection<sp/>on<sp/>xid=%u&quot;</highlight><highlight class="normal">,<sp/>pdupreq-&gt;xid);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>HashTable_Del(<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>,<sp/>&amp;buffkey,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>hashtable<sp/>no<sp/>such<sp/>key<sp/>=&gt;<sp/>dupreq<sp/>garbaged<sp/>by<sp/>another<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>!=<sp/>HASHTABLE_SUCCESS<sp/>&amp;&amp;<sp/>rc<sp/>!=<sp/>HASHTABLE_ERROR_NO_SUCH_KEY)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>while<sp/>cleaning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>HASHTABLE_ERROR_NO_SUCH_KEY)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>free<sp/>the<sp/>dupreq<sp/>twice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Locate<sp/>the<sp/>function<sp/>descriptor<sp/>associated<sp/>with<sp/>this<sp/>cached<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdupreq-&gt;rq_prog<sp/>==<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.nfs_program)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pdupreq-&gt;rq_vers)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NFS_V2:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1ad1973964670037b91a33fd6b6e4c40bc" kindref="member">nfs2_func_desc</ref>[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NFS_V3:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1a177ddde86497df151d3b3ff5c876d90a" kindref="member">nfs3_func_desc</ref>[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NFS_V4:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1ade3381a451007489495bf0b92585520f" kindref="member">nfs4_func_desc</ref>[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>should<sp/>never<sp/>go<sp/>there<sp/>(this<sp/>situation<sp/>is<sp/>filtered<sp/>in<sp/>nfs_rpc_getreq)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogMajor(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>NFS<sp/>Protocol<sp/>version<sp/>%d<sp/>unknown<sp/>in<sp/>dupreq_gc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdupreq-&gt;rq_vers);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1ad1973964670037b91a33fd6b6e4c40bc" kindref="member">nfs2_func_desc</ref>[0];<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>function<sp/>for<sp/>PROC_NULL<sp/>does<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdupreq-&gt;rq_prog<sp/>==<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.mnt_program)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pdupreq-&gt;rq_vers)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MOUNT_V1:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1a331b43564c209696c670c70673d544e1" kindref="member">mnt1_func_desc</ref>[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MOUNT_V3:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/><ref refid="nfs__dupreq_8c_1a7bcfef9b974d9b55a0f057d959a13bb8" kindref="member">mnt3_func_desc</ref>[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>should<sp/>never<sp/>go<sp/>there<sp/>(this<sp/>situation<sp/>is<sp/>filtered<sp/>in<sp/>nfs_rpc_getreq)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogMajor(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>MOUNT<sp/>Protocol<sp/>version<sp/>%d<sp/>unknown<sp/>in<sp/>dupreq_gc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdupreq-&gt;rq_vers);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch(<sp/>pdupreq-&gt;vers<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdupreq-&gt;rq_prog<sp/>==<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.nlm_program)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pdupreq-&gt;rq_vers)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NLM4_VERS:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/>nlm4_func_desc[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch(<sp/>pdupreq-&gt;vers<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdupreq-&gt;rq_prog<sp/>==<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.rquota_program)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pdupreq-&gt;rq_vers)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RQUOTAVERS:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/>rquota1_func_desc[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EXT_RQUOTAVERS:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcdesc<sp/>=<sp/>rquota2_func_desc[pdupreq-&gt;rq_proc];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch(<sp/>pdupreq-&gt;vers<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>should<sp/>never<sp/>go<sp/>there<sp/>(this<sp/>situation<sp/>is<sp/>filtered<sp/>in<sp/>nfs_rpc_getreq)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogMajor(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>protocol<sp/>%d<sp/>is<sp/>not<sp/>managed&quot;</highlight><highlight class="normal">,<sp/>pdupreq-&gt;rq_prog);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>free<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>funcdesc.free_function(&amp;(pdupreq-&gt;res_nfs));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>entry<sp/>back<sp/>to<sp/>the<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>RELEASE_PREALLOC(pdupreq,<sp/>*dupreq_pool,<sp/>next_alloc);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean_entry_dupreq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="nfs__dupreq_8c_1a7363cd3531f6119e8a2047a57e51e08f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a7363cd3531f6119e8a2047a57e51e08f" kindref="member">dupreq_value_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_buffer_t<sp/>*<sp/>buffclef)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(buffclef-&gt;pdata)<sp/>%<sp/>p_hparam-&gt;index_size;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>dupreq_value_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="nfs__dupreq_8c_1acd77080a96d71b76efbdee9178171504" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1acd77080a96d71b76efbdee9178171504" kindref="member">dupreq_rbt_hash_func</ref>(hash_parameter_t<sp/>*<sp/>p_hparam,<sp/>hash_buffer_t<sp/>*<sp/>buffclef)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>Xid<sp/>as<sp/>the<sp/>rbt<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(buffclef-&gt;pdata);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dupreq_rbt_hash_func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="nfs__dupreq_8c_1a1754ccd21821c745e816f32a7a459e24" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a1754ccd21821c745e816f32a7a459e24" kindref="member">compare_xid</ref>(hash_buffer_t<sp/>*<sp/>buff1,<sp/>hash_buffer_t<sp/>*<sp/>buff2)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xid1<sp/>=<sp/>(long)(buff1-&gt;pdata);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xid2<sp/>=<sp/>(long)(buff2-&gt;pdata);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xid1<sp/>==<sp/>xid2)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare_xid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="nfs__dupreq_8c_1a30afd5b6d3dff5d4d7d4767089d59b44" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a30afd5b6d3dff5d4d7d4767089d59b44" kindref="member">display_xid</ref>(hash_buffer_t<sp/>*<sp/>pbuff,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xid<sp/>=<sp/>(long)(pbuff-&gt;pdata);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%lX&quot;</highlight><highlight class="normal">,<sp/>xid);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="nfs__dupreq_8c_1a0e0c7a1fda2f7d756dd1b2f8b4f97db6" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a0e0c7a1fda2f7d756dd1b2f8b4f97db6" kindref="member">nfs_Init_dupreq</ref>(nfs_rpc_dupreq_parameter_t<sp/>param)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref><sp/>=<sp/>HashTable_Init(param.hash_param))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>Cannot<sp/>init<sp/>the<sp/>duplicate<sp/>request<sp/>hash<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DUPREQ_SUCCESS;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_dupreq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="nfs__dupreq_8c_1a72a8bca40613bd2e5a727a7274ca8e66" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a72a8bca40613bd2e5a727a7274ca8e66" kindref="member">nfs_dupreq_add</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xid,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_req<sp/>*ptr_req,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_res_t<sp/>*<sp/>p_res_nfs,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LRU_list_t<sp/>*<sp/>lru_dupreq,<sp/>dupreq_entry_t<sp/>**<sp/>p_dupreq_pool)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffdata;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>dupreq_entry_t<sp/>*pdupreq<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*pentry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>lru_status;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;dupreq_entry_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Entry<sp/>to<sp/>be<sp/>cached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>GET_PREALLOC(pdupreq,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*p_dupreq_pool),</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.worker_param.nb_dupreq_prealloc,<sp/>dupreq_entry_t,<sp/>next_alloc);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdupreq<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DUPREQ_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>have<sp/>to<sp/>keep<sp/>an<sp/>integer<sp/>as<sp/>key,<sp/>I<sp/>wil<sp/>use<sp/>the<sp/>pointer<sp/>buffkey-&gt;pdata<sp/>for<sp/>this,<sp/></highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>also<sp/>means<sp/>that<sp/>buffkey-&gt;len<sp/>will<sp/>be<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>xid;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>build<sp/>the<sp/>data<sp/>with<sp/>the<sp/>request<sp/>pointer<sp/>that<sp/>should<sp/>be<sp/>in<sp/>state<sp/>&apos;IN<sp/>USE&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>pdupreq-&gt;xid<sp/>=<sp/>xid;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>pdupreq-&gt;res_nfs<sp/>=<sp/>*p_res_nfs;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>pdupreq-&gt;rq_prog<sp/>=<sp/>ptr_req-&gt;rq_prog;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>pdupreq-&gt;rq_vers<sp/>=<sp/>ptr_req-&gt;rq_vers;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>pdupreq-&gt;rq_proc<sp/>=<sp/>ptr_req-&gt;rq_proc;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>pdupreq-&gt;timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>buffdata.pdata<sp/>=<sp/>(caddr_t)<sp/>pdupreq;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>buffdata.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dupreq_entry_t);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Set(<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>,<sp/>&amp;buffkey,<sp/>&amp;buffdata)<sp/>!=<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DUPREQ_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>it<sp/>to<sp/>lru<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pentry<sp/>=<sp/>LRU_new_entry(lru_dupreq,<sp/>&amp;lru_status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DUPREQ_INSERT_MALLOC_ERROR;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>xid<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>pentry-&gt;buffdata.pdata<sp/>=<sp/>(caddr_t)<sp/>pdupreq;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>pentry-&gt;buffdata.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dupreq_entry_t);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DUPREQ_SUCCESS;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_dupreq_add<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="nfs__dupreq_8c_1af44969aca0de15c4a2079988b6e6c266" refkind="member"><highlight class="normal">nfs_res_t<sp/><ref refid="nfs__dupreq_8c_1af44969aca0de15c4a2079988b6e6c266" kindref="member">nfs_dupreq_get</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pstatus)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffkey;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>hash_buffer_t<sp/>buffval;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>nfs_res_t<sp/>res_nfs;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>buffkey.pdata<sp/>=<sp/>(caddr_t)<sp/>xid;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>buffkey.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HashTable_Get(<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>,<sp/>&amp;buffkey,<sp/>&amp;buffval)<sp/>==<sp/>HASHTABLE_SUCCESS)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((dupreq_entry_t<sp/>*)<sp/>buffval.pdata)-&gt;timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pstatus<sp/>=<sp/>DUPREQ_SUCCESS;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res_nfs<sp/>=<sp/>((dupreq_entry_t<sp/>*)<sp/>buffval.pdata)-&gt;res_nfs;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogDebug(COMPONENT_DUPREQ,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DUPREQ:<sp/>Hit<sp/>in<sp/>the<sp/>dupreq<sp/>cache<sp/>for<sp/>xid=%u&quot;</highlight><highlight class="normal">,<sp/>xid);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pstatus<sp/>=<sp/>DUPREQ_NOT_FOUND;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res_nfs;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_dupreq_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="nfs__dupreq_8c_1a35d644f1f1b2c333ddc223251d615205" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1a35d644f1f1b2c333ddc223251d615205" kindref="member">nfs_dupreq_gc_function</ref>(LRU_entry_t<sp/>*<sp/>pentry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addparam)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>dupreq_entry_t<sp/>*pdupreq<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>pdupreq<sp/>=<sp/>(dupreq_entry_t<sp/>*)<sp/>(pentry-&gt;buffdata.pdata);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>if<sp/>entry<sp/>is<sp/>expired<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time(NULL)<sp/>-<sp/>pdupreq-&gt;timestamp<sp/>&gt;<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.expiration_dupreq)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LRU_LIST_SET_INVALID;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LRU_LIST_DO_NOT_SET_INVALID;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_dupreq_fc_function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="nfs__dupreq_8c_1aade2ed32dcdd7eb6990c8f99f5c81370" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__dupreq_8c_1aade2ed32dcdd7eb6990c8f99f5c81370" kindref="member">nfs_dupreq_get_stats</ref>(hash_stat_t<sp/>*<sp/>phstat)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>HashTable_GetStats(<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>,<sp/>phstat);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_dupreq_get_stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/MainNFSD/nfs_dupreq.c"/>
  </compounddef>
</doxygen>
