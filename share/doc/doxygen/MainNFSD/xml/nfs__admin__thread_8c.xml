<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs__admin__thread_8c" kind="file">
    <compoundname>nfs_admin_thread.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">log_macros.h</includes>
    <incdepgraph>
      <node id="36">
        <label>log_macros.h</label>
      </node>
      <node id="33">
        <label>pthread.h</label>
      </node>
      <node id="32">
        <label>string.h</label>
      </node>
      <node id="30">
        <label>nfs_admin_thread.c</label>
        <link refid="nfs_admin_thread.c"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>nfs_core.h</label>
      </node>
      <node id="35">
        <label>stuff_alloc.h</label>
      </node>
      <node id="31">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" prot="public" static="no" mutable="no">
        <type>nfs_parameter_t</type>
        <definition>nfs_parameter_t nfs_param</definition>
        <argsstring></argsstring>
        <name>nfs_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="53" bodyfile="/export/GANESHA/src/MainNFSD/nfs_init.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" prot="public" static="no" mutable="no">
        <type>nfs_admin_data_t *</type>
        <definition>nfs_admin_data_t* pmydata</definition>
        <argsstring></argsstring>
        <name>pmydata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="54" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs__admin__thread_8c_1a0b1626a0f73cba9090ece82d4c698c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_admin_data</definition>
        <argsstring>(nfs_admin_data_t *pdata)</argsstring>
        <name>nfs_Init_admin_data</name>
        <param>
          <type>nfs_admin_data_t *</type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="57" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="56" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1ae0da727728340716f894f7801d1d300c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void admin_replace_exports</definition>
        <argsstring>()</argsstring>
        <name>admin_replace_exports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="70" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="69" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1af17dae293060acff192b6f71cb845fc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wake_workers_for_export_reload</definition>
        <argsstring>()</argsstring>
        <name>wake_workers_for_export_reload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="79" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="78" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1ad7cde7a892e3f9308c279b886f617346" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pause_workers_for_export_reload</definition>
        <argsstring>()</argsstring>
        <name>pause_workers_for_export_reload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="93" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="92" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1aa67601023b1bdf939e0a1b7663319be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RemoveAllExportsExceptHead</definition>
        <argsstring>(exportlist_t *pexportlist)</argsstring>
        <name>RemoveAllExportsExceptHead</name>
        <param>
          <type>exportlist_t *</type>
          <declname>pexportlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="128" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="127" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1a54886627cfef46a41b3afd42e37b53ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rebuild_export_list</definition>
        <argsstring>(char *config_file)</argsstring>
        <name>rebuild_export_list</name>
        <param>
          <type>char *</type>
          <declname>config_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="151" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="150" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="nfs__admin__thread_8c_1a63f2a06b6f191a558a0c0c2946ecdf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* admin_thread</definition>
        <argsstring>(void *Arg)</argsstring>
        <name>admin_thread</name>
        <param>
          <type>void *</type>
          <declname>Arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" line="219" bodyfile="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c" bodystart="218" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The file that contain the &apos;admin_thread&apos; routine for the nfsd. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para></para></simplesect>
<simplesect kind="rcs"><title>Author</title><para>deniel </para></simplesect>
<simplesect kind="date"><para></para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2006/01/31 10:08:04 </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>1.6 </para></simplesect>
<ref refid="nfs__admin__thread_8c" kindref="compound">nfs_admin_thread.c</ref> : The file that contain the &apos;admin_thread&apos; routine for the nfsd. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_parameter_t<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>;</highlight></codeline>
<codeline lineno="54" refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" refkind="member"><highlight class="normal">nfs_admin_data_t<sp/>*<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="nfs__admin__thread_8c_1a0b1626a0f73cba9090ece82d4c698c73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__admin__thread_8c_1a0b1626a0f73cba9090ece82d4c698c73" kindref="member">nfs_Init_admin_data</ref>(nfs_admin_data_t<sp/>*pdata)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_mutex_init(&amp;(pdata-&gt;mutex_admin_condvar),<sp/>NULL)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_cond_init(&amp;(pdata-&gt;admin_condvar),<sp/>NULL)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>pdata-&gt;reload_exports<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_admin_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="nfs__admin__thread_8c_1ae0da727728340716f894f7801d1d300c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__admin__thread_8c_1ae0da727728340716f894f7801d1d300c" kindref="member">admin_replace_exports</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>P(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;mutex_admin_condvar);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;reload_exports<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_cond_signal(&amp;(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;admin_condvar))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;admin_replace_exports<sp/>-<sp/>admin<sp/>cond<sp/>signal<sp/>failed<sp/>,<sp/>errno<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>V(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;mutex_admin_condvar);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wake_workers_for_export_reload()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.nb_worker;<sp/>i++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;workers_data[i].reparse_exports_in_progress<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_cond_signal(&amp;(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;workers_data[i].export_condvar))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;replace_exports:<sp/>Export<sp/>cond<sp/>signal<sp/>failed<sp/>for<sp/>thr#%d<sp/>,<sp/>errno<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>errno);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pause_workers_for_export_reload()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>all_blocked,i;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pause<sp/>worker<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.nb_worker;<sp/>i++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;workers_data[i].reparse_exports_in_progress<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>threads<sp/>are<sp/>blocked<sp/>on<sp/>the<sp/>request<sp/>queue,<sp/>wake<sp/>them<sp/>up</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>they<sp/>are<sp/>blocked<sp/>on<sp/>the<sp/>exports<sp/>list<sp/>replacement.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_cond_signal(&amp;(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;workers_data[i].req_condvar))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;replace_exports:<sp/>Request<sp/>cond<sp/>signal<sp/>failed<sp/>for<sp/>thr#%d<sp/>,<sp/>errno<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>errno);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wake_workers_for_export_reload();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>all<sp/>worker<sp/>threads<sp/>to<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>all_blocked<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.core_param.nb_worker;<sp/>i++)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;workers_data[i].waiting_for_exports<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blocked<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_blocked)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skips<sp/>deleting<sp/>first<sp/>entry<sp/>of<sp/>export<sp/>list.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>also<sp/>frees<sp/>the<sp/>fd<sp/>in<sp/>the<sp/>head<sp/>node<sp/>of<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="nfs__admin__thread_8c_1aa67601023b1bdf939e0a1b7663319be0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__admin__thread_8c_1aa67601023b1bdf939e0a1b7663319be0" kindref="member">RemoveAllExportsExceptHead</ref>(exportlist_t<sp/>*<sp/>pexportlist)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>exportlist_t<sp/>*pcurrent;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>pcurrent<sp/>=<sp/>pexportlist-&gt;next;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pcurrent<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Leave<sp/>the<sp/>head<sp/>so<sp/>that<sp/>the<sp/>list<sp/>may<sp/>be<sp/>replaced<sp/>later<sp/>without</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>changing<sp/>the<sp/>reference<sp/>pointer<sp/>in<sp/>worker<sp/>threads.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CleanUpExportContext(&amp;pcurrent-&gt;FS_export_context);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcurrent<sp/>==<sp/>pexportlist)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pexportlist-&gt;next<sp/>=<sp/>RemoveExportEntry(pcurrent);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcurrent<sp/>=<sp/>pexportlist-&gt;next;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skips<sp/>deleting<sp/>first<sp/>entry<sp/>of<sp/>export<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="nfs__admin__thread_8c_1a54886627cfef46a41b3afd42e37b53ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__admin__thread_8c_1a54886627cfef46a41b3afd42e37b53ad" kindref="member">rebuild_export_list</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*config_file)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>exportlist_t<sp/>*<sp/>temp_pexportlist;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>config_file_t<sp/>config_struct;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>no<sp/>configuration<sp/>file<sp/>is<sp/>given,<sp/>then<sp/>the<sp/>caller<sp/>must<sp/>want<sp/>to<sp/>reparse<sp/>the</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>configuration<sp/>file<sp/>from<sp/>startup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>No<sp/>configuration<sp/>file<sp/>was<sp/>specified<sp/>for<sp/>reloading<sp/>exports.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>parse<sp/>the<sp/>new<sp/>configuration<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>config_struct<sp/>=<sp/>config_ParseFile(config_file);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_struct)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;rebuild_export_list:<sp/>Error<sp/>while<sp/>parsing<sp/>new<sp/>configuration<sp/>file<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file,<sp/>config_GetErrorMsg());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>new<sp/>exports<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>ReadExports(config_struct,<sp/>&amp;temp_pexportlist);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;rebuild_export_list:<sp/>Error<sp/>while<sp/>parsing<sp/>export<sp/>entries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;rebuild_export_list:<sp/>No<sp/>export<sp/>entries<sp/>found<sp/>in<sp/>configuration<sp/>file<sp/>!!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>least<sp/>one<sp/>worker<sp/>thread<sp/>should<sp/>exist.<sp/>Each<sp/>worker<sp/>thread<sp/>has<sp/>a<sp/>pointer<sp/>to</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>same<sp/>hash<sp/>table.<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>nfs_export_create_root_entry(temp_pexportlist,<sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;ht)<sp/>!=<sp/>TRUE)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;replace_exports:<sp/>Error<sp/>initializing<sp/>Cache<sp/>Inode<sp/>root<sp/>entries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pause_workers_for_export_reload())</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;replace_exports:<sp/>Error,<sp/>could<sp/>not<sp/>pause<sp/>all<sp/>worker<sp/>threads.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>know<sp/>that<sp/>the<sp/>configuration<sp/>was<sp/>parsed<sp/>successfully.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/>And<sp/>that<sp/>worker<sp/>threads<sp/>are<sp/>no<sp/>longer<sp/>accessing<sp/>the<sp/>export<sp/>list.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Remove<sp/>all<sp/>but<sp/>the<sp/>first<sp/>export<sp/>entry<sp/>in<sp/>the<sp/>exports<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="nfs__admin__thread_8c_1aa67601023b1bdf939e0a1b7663319be0" kindref="member">RemoveAllExportsExceptHead</ref>(<ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.pexportlist);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;rebuild_export_list:<sp/>CRITICAL<sp/>ERROR<sp/>while<sp/>removing<sp/>some<sp/>export<sp/>entries.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Changed<sp/>the<sp/>old<sp/>export<sp/>list<sp/>head<sp/>to<sp/>the<sp/>new<sp/>export<sp/>list<sp/>head.<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*<sp/>All<sp/>references<sp/>to<sp/>the<sp/>exports<sp/>list<sp/>should<sp/>be<sp/>up-to-date<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.pexportlist,<sp/>temp_pexportlist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(exportlist_t));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>no<sp/>longer<sp/>need<sp/>the<sp/>head<sp/>that<sp/>was<sp/>created<sp/>for</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>new<sp/>list<sp/>since<sp/>the<sp/>export<sp/>list<sp/>is<sp/>built<sp/>as<sp/>a<sp/>linked<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>Mem_Free(temp_pexportlist);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>wake_workers_for_export_reload();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>if<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="nfs__admin__thread_8c_1a63f2a06b6f191a558a0c0c2946ecdf29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="nfs__admin__thread_8c_1a63f2a06b6f191a558a0c0c2946ecdf29" kindref="member">admin_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Arg)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref><sp/>=<sp/>(nfs_admin_data_t<sp/>*)Arg;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>SetNameFunction(</highlight><highlight class="stringliteral">&quot;admin_thr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BUDDY_SYSTEM</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>BuddyInit(&amp;<ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>.buddy_param_admin))<sp/>!=<sp/>BUDDY_SUCCESS)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Failed<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;ADMIN<sp/>THREAD:<sp/>Memory<sp/>manager<sp/>could<sp/>not<sp/>be<sp/>initialized,<sp/>exiting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;ADMIN<sp/>THREAD:<sp/>Memory<sp/>manager<sp/>successfully<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;mutex_admin_condvar);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;reload_exports<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;admin_condvar),<sp/>&amp;(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;mutex_admin_condvar));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;reload_exports<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;mutex_admin_condvar);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="nfs__admin__thread_8c_1a54886627cfef46a41b3afd42e37b53ad" kindref="member">rebuild_export_list</ref>(<ref refid="nfs__admin__thread_8c_1af1c726c8070a9c2883c8c37d025a6421" kindref="member">pmydata</ref>-&gt;config_path))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_MAIN,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>attempt<sp/>to<sp/>reload<sp/>exports<sp/>list<sp/>from<sp/>config<sp/>file<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>admin_thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/MainNFSD/nfs_admin_thread.c"/>
  </compounddef>
</doxygen>
