<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="nfs__rpc__dispatcher__thread_8c" kind="file">
    <compoundname>nfs_rpc_dispatcher_thread.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/file.h</includes>
    <includes local="no">sys/select.h</includes>
    <includes local="yes">HashData.h</includes>
    <includes local="yes">HashTable.h</includes>
    <includes local="no">rpc/rpc.h</includes>
    <includes local="no">rpc/svc.h</includes>
    <includes local="no">rpc/pmap_clnt.h</includes>
    <includes local="yes">log_macros.h</includes>
    <includes local="yes">stuff_alloc.h</includes>
    <includes local="yes">nfs23.h</includes>
    <includes local="yes">nfs4.h</includes>
    <includes local="yes">mount.h</includes>
    <includes local="yes">nlm4.h</includes>
    <includes local="yes">rquota.h</includes>
    <includes refid="nfs__init_8h" local="yes">nfs_init.h</includes>
    <includes local="yes">nfs_core.h</includes>
    <includes local="yes">cache_inode.h</includes>
    <includes local="yes">cache_content.h</includes>
    <includes local="yes">nfs_exports.h</includes>
    <includes local="yes">nfs_creds.h</includes>
    <includes local="yes">nfs_proto_functions.h</includes>
    <includes local="yes">nfs_dupreq.h</includes>
    <includes local="yes">nfs_file_handle.h</includes>
    <includes local="yes">nfs_stat.h</includes>
    <includes local="yes">SemN.h</includes>
    <incdepgraph>
      <node id="196">
        <label>rquota.h</label>
      </node>
      <node id="184">
        <label>sys/select.h</label>
      </node>
      <node id="189">
        <label>rpc/pmap_clnt.h</label>
      </node>
      <node id="190">
        <label>log_macros.h</label>
      </node>
      <node id="194">
        <label>mount.h</label>
      </node>
      <node id="198">
        <label>cache_content.h</label>
      </node>
      <node id="182">
        <label>fcntl.h</label>
      </node>
      <node id="188">
        <label>rpc/svc.h</label>
      </node>
      <node id="178">
        <label>nfs_rpc_dispatcher_thread.c</label>
        <link refid="nfs_rpc_dispatcher_thread.c"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>nfs4.h</label>
      </node>
      <node id="181">
        <label>pthread.h</label>
      </node>
      <node id="180">
        <label>string.h</label>
      </node>
      <node id="186">
        <label>HashTable.h</label>
      </node>
      <node id="183">
        <label>sys/file.h</label>
      </node>
      <node id="187">
        <label>rpc/rpc.h</label>
      </node>
      <node id="207">
        <label>SemN.h</label>
      </node>
      <node id="201">
        <label>nfs_exports.h</label>
      </node>
      <node id="199">
        <label>nfs_core.h</label>
      </node>
      <node id="197">
        <label>nfs_init.h</label>
        <link refid="nfs__init_8h"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>nfs23.h</label>
      </node>
      <node id="203">
        <label>nfs_proto_functions.h</label>
      </node>
      <node id="195">
        <label>nlm4.h</label>
      </node>
      <node id="191">
        <label>stuff_alloc.h</label>
      </node>
      <node id="179">
        <label>stdio.h</label>
      </node>
      <node id="200">
        <label>cache_inode.h</label>
      </node>
      <node id="185">
        <label>HashData.h</label>
      </node>
      <node id="205">
        <label>nfs_file_handle.h</label>
      </node>
      <node id="202">
        <label>nfs_creds.h</label>
      </node>
      <node id="206">
        <label>nfs_stat.h</label>
      </node>
      <node id="204">
        <label>nfs_dupreq.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="nfs__rpc__dispatcher__thread_8c_1abeb67fae7e2b65e73240da098c71fc61" prot="public" static="no">
        <name>NULL_SVC</name>
        <initializer>((struct svc_callout *)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="107" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nfs__rpc__dispatcher__thread_8c_1a25424ceb074d9f56b67d1ff02ad8734d" prot="public" static="no">
        <name>NO_VALUE_CHOOSEN</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1543"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a06d155d9a3d842e8f43384d85c962c29" prot="public" static="no" mutable="no">
        <type><ref refid="struct____nfs__start__info" kindref="compound">nfs_start_info_t</ref></type>
        <definition>nfs_start_info_t nfs_start_info</definition>
        <argsstring></argsstring>
        <name>nfs_start_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="90" bodyfile="/export/GANESHA/src/MainNFSD/nfs_init.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a06cae25413d2604c529b04b9cef6c1e5" prot="public" static="no" mutable="no">
        <type>fd_set</type>
        <definition>fd_set Svc_fdset</definition>
        <argsstring></argsstring>
        <name>Svc_fdset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="109" bodyfile="/export/GANESHA/src/MainNFSD/Svc_gssrpc.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a4dfa2d28740c327f84868034c781f5d4" prot="public" static="no" mutable="no">
        <type>nfs_worker_data_t *</type>
        <definition>nfs_worker_data_t* workers_data</definition>
        <argsstring></argsstring>
        <name>workers_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="110" bodyfile="/export/GANESHA/src/MainNFSD/nfs_init.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1aeb8fc46586993cf210777049fca03969" prot="public" static="no" mutable="no">
        <type>nfs_parameter_t</type>
        <definition>nfs_parameter_t nfs_param</definition>
        <argsstring></argsstring>
        <name>nfs_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="111" bodyfile="/export/GANESHA/src/MainNFSD/nfs_init.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a9a4def18ab2df1dc6613ba45844467ae" prot="public" static="no" mutable="no">
        <type>SVCXPRT *</type>
        <definition>SVCXPRT* Xports[FD_SETSIZE]</definition>
        <argsstring>[FD_SETSIZE]</argsstring>
        <name>Xports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="112" bodyfile="/export/GANESHA/src/MainNFSD/Svc_oncrpc.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a3ada0731d68a5b4aab865acfd3d73290" prot="public" static="no" mutable="no">
        <type>hash_table_t *</type>
        <definition>hash_table_t* ht_dupreq</definition>
        <argsstring></argsstring>
        <name>ht_dupreq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="116" bodyfile="/export/GANESHA/src/MainNFSD/nfs_dupreq.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a937dea482306d8b1f0a3abeee4e1c605" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t mutex_cond_xprt[FD_SETSIZE]</definition>
        <argsstring>[FD_SETSIZE]</argsstring>
        <name>mutex_cond_xprt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="118" bodyfile="/export/GANESHA/src/MainNFSD/Svc_tcp_gssrpc.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1ade991aebf0ece16e3d3ad172220a1475" prot="public" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t condvar_xprt[FD_SETSIZE]</definition>
        <argsstring>[FD_SETSIZE]</argsstring>
        <name>condvar_xprt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="119" bodyfile="/export/GANESHA/src/MainNFSD/Svc_tcp_gssrpc.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a468f81067f0999a0c178c74e27217aef" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int etat_xprt[FD_SETSIZE]</definition>
        <argsstring>[FD_SETSIZE]</argsstring>
        <name>etat_xprt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="120" bodyfile="/export/GANESHA/src/MainNFSD/Svc_tcp_gssrpc.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1a1aaee2caa31305958d161507860bda96" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nb_current_gc_workers</definition>
        <argsstring></argsstring>
        <name>nb_current_gc_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="129" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nfs__rpc__dispatcher__thread_8c_1abe04e34ee93c05b0ef368bc7f20f5656" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t lock_nb_current_gc_workers</definition>
        <argsstring></argsstring>
        <name>lock_nb_current_gc_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="130" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1ac2a77bd4b3c540f093590ae4211f649d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SVCXPRT *</type>
        <definition>SVCXPRT* Svcfd_create</definition>
        <argsstring>(int fd, u_int sendsize, u_int recvsize)</argsstring>
        <name>Svcfd_create</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>sendsize</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>recvsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="98" bodyfile="/export/GANESHA/src/MainNFSD/Svc_tcp_gssrpc.c" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SVCXPRT *</type>
        <definition>SVCXPRT* Svctcp_create</definition>
        <argsstring>(register int sock, u_int sendsize, u_int recvsize)</argsstring>
        <name>Svctcp_create</name>
        <param>
          <type>register int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>sendsize</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>recvsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="99" bodyfile="/export/GANESHA/src/MainNFSD/Svc_tcp_gssrpc.c" bodystart="155" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SVCXPRT *</type>
        <definition>SVCXPRT* Svcudp_bufcreate</definition>
        <argsstring>(register int sock, u_int sendsz, u_int recvsz)</argsstring>
        <name>Svcudp_bufcreate</name>
        <param>
          <type>register int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>sendsz</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>recvsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="100" bodyfile="/export/GANESHA/src/MainNFSD/Svc_udp_gssrpc.c" bodystart="118" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t Svc_register</definition>
        <argsstring>(SVCXPRT *xprt, u_long prog, u_long vers, void(*dispatch)(), int protocol)</argsstring>
        <name>Svc_register</name>
        <param>
          <type>SVCXPRT *</type>
          <declname>xprt</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>prog</declname>
        </param>
        <param>
          <type>u_long</type>
          <declname>vers</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>dispatch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="102" bodyfile="/export/GANESHA/src/MainNFSD/Svc_oncrpc.c" bodystart="120" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a724cb81161f478d63c680f3e1f3f3a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void socket_setoptions</definition>
        <argsstring>(int socketFd)</argsstring>
        <name>socket_setoptions</name>
        <param>
          <type>int</type>
          <declname>socketFd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="105" bodyfile="/export/GANESHA/src/MainNFSD/nfs_tools.c" bodystart="196" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_rpc_dispatch_dummy</definition>
        <argsstring>(struct svc_req *ptr_req, SVCXPRT *ptr_svc)</argsstring>
        <name>nfs_rpc_dispatch_dummy</name>
        <param>
          <type>struct svc_req *</type>
          <declname>ptr_req</declname>
        </param>
        <param>
          <type>SVCXPRT *</type>
          <declname>ptr_svc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_rpc_dispatch_dummy: Function never called, but the symbol is necessary for Svc_register/</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr_req</parametername>
</parameternamelist>
<parameterdescription>
<para>the RPC request to be managed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr_svc</parametername>
</parameternamelist>
<parameterdescription>
<para>SVCXPRT pointer to be used for managing this request</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function) and is never called indeed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="184" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a757bd493272d902a0cdb6c565b9c6135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_svc</definition>
        <argsstring>()</argsstring>
        <name>nfs_Init_svc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_svc: Init the svc descriptors for the nfs daemon.</para><para>Perform all the required initialization for the SVCXPRT pointer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="198" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="197" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a6b2d6f51d674b8f364041ccf4b88eaa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int select_worker_queue</definition>
        <argsstring>()</argsstring>
        <name>select_worker_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selects the smallest request queue, whome the worker is ready and is not garbagging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1542" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1541" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1aa3184c183d980c407420c2157f36c390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_rpc_get_worker_index</definition>
        <argsstring>(int mount_protocol_flag)</argsstring>
        <name>nfs_rpc_get_worker_index</name>
        <param>
          <type>int</type>
          <declname>mount_protocol_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_rpc_get_worker_index: Returns the index of the worker to be used</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mount_protocol_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>a flag (TRUE of FALSE) to tell if the worker is to be used for mount protocol</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the chosen worker index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1597" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1596" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a0785e886197e39cc730793e0988d02ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfs_rpc_getreq</definition>
        <argsstring>(fd_set *readfds, nfs_parameter_t *pnfs_para)</argsstring>
        <name>nfs_rpc_getreq</name>
        <param>
          <type>fd_set *</type>
          <declname>readfds</declname>
        </param>
        <param>
          <type>nfs_parameter_t *</type>
          <declname>pnfs_para</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_rpc_getreq: Do half of the work done by svc_getreqset.</para><para>This function wait for an incoming ONC message by waiting on a &apos;select&apos; statement. Then getting a request it perform the authentication and extracts the RPC message for the related socket. It then find the less busy worker (the one with the shortest pending queue) and put the msg in this queue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>readfds</parametername>
</parameternamelist>
<parameterdescription>
<para>File Descriptor Set related to the socket used for RPC management.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing (void function), but calls svcerr_* function to notify the client when an error occures. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1626" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1625" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1af8096617fe01cfa40ad63e5c15a43983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int clean_pending_request</definition>
        <argsstring>(LRU_entry_t *pentry, void *addparam)</argsstring>
        <name>clean_pending_request</name>
        <param>
          <type>LRU_entry_t *</type>
          <declname>pentry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>addparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean_pending_request: cleans an entry in a nfs request LRU,</para><para>cleans an entry in a nfs request LRU.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>[INOUT] entry to be cleaned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addparam</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] additional parameter used for cleaning.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, other values mean an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1938" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1937" bodyend="1946"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a9c4d5812b5445e27dec115567787e7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int print_pending_request</definition>
        <argsstring>(LRU_data_t data, char *str)</argsstring>
        <name>print_pending_request</name>
        <param>
          <type>LRU_data_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>print_pending_request: prints an entry related to a pending request in the LRU list.</para><para>prints an entry related to a pending request in the LRU list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>[IN] data stored in a LRU entry to be printed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>[OUT] string used to store the result.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, other values mean an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1961" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1960" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a6eb51d2ceaa2943d99cb326f9b3d9968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rpc_dispatcher_svc_run</definition>
        <argsstring>(nfs_parameter_t *pnfs_param)</argsstring>
        <name>rpc_dispatcher_svc_run</name>
        <param>
          <type>nfs_parameter_t *</type>
          <declname>pnfs_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_rpc_dispatcher_svc_run: the same as svc_run.</para><para>The same as svc_run.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="1977" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="1976" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a9e303488e5f50b512b89ba77ef8553e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* rpc_dispatcher_thread</definition>
        <argsstring>(void *Arg)</argsstring>
        <name>rpc_dispatcher_thread</name>
        <param>
          <type>void *</type>
          <declname>Arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rpc_dispatcher_thread: thread used for RPC dispatching.</para><para>Thead used for RPC dispatching. It gets the requests and then spool it to one of the worker&apos;s LRU. The worker chosen is the one with the smaller load (its LRU is the shorter one).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>IndexArg</parametername>
</parameternamelist>
<parameterdescription>
<para>the index for the worker thread (unused)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the result (but this function will mostly loop forever). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="2045" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="2044" bodyend="2069"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1afb82d52b463ced09d03ad467d1c05dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_request_data</definition>
        <argsstring>(nfs_request_data_t *pdata)</argsstring>
        <name>nfs_Init_request_data</name>
        <param>
          <type>nfs_request_data_t *</type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_request_data: Init the data associated with a pending request</para><para>This function is used to init the nfs_request_data for a worker. These data are used by the worker for RPC processing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure of type nfs_worker_parameter_t with all the necessary information related to a worker </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be initialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successfull, -1 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="2084" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="2083" bodyend="2155"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1afffa743dbd2aef77cdc7d24ec263005f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constructor_nfs_request_data_t</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>constructor_nfs_request_data_t</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor_nfs_request_data_t: Constructor for a nfs_request_data_t structure</para><para>This function is used to init the nfs_request_data for a worker. These data are used by the worker for RPC processing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to the structure to be managed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing (void function) will exit the program if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="2170" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="2169" bodyend="2176"/>
      </memberdef>
      <memberdef kind="function" id="nfs__rpc__dispatcher__thread_8c_1a47e8bde054e96db98693ae1d2d74cd43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfs_Init_gc_counter</definition>
        <argsstring>(void)</argsstring>
        <name>nfs_Init_gc_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nfs_Init_gc_counter: Init the worker&apos;s gc counters.</para><para>This functions is used to init a mutex and a counter associated with it, to keep track of the number of worker currently performing the garbagge collection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para>No parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successfull, -1 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" line="2191" bodyfile="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c" bodystart="2190" bodyend="2203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>vim:expandtab:shiftwidth=8:tabstop=8:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2008)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Philippe<sp/>DENIEL<sp/><sp/><sp/>philippe.deniel@cea.fr</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SOLARIS</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solaris_port.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/file.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>having<sp/>FNDELAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_USE_TIRPC<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>_USE_GSSRPC<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssapi/gssapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/svc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gssrpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/rpc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/svc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rpc/pmap_clnt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stuff_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs23.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mount.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nlm4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rquota.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nfs__init_8h" kindref="compound" tooltip="NFSd initialization prototypes.">nfs_init.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_inode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cache_content.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_exports.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_creds.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_proto_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_dupreq.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_file_handle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nfs_stat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SemN.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_APPLE</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__FDS_BITS(set)<sp/>((set)-&gt;fds_bits)</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct____nfs__start__info" kindref="compound">nfs_start_info_t</ref><sp/><ref refid="nfs__file__content__flush__thread_8c_1a06d155d9a3d842e8f43384d85c962c29" kindref="member">nfs_start_info</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netconfig<sp/>*getnetconfigent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*netid);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freenetconfigent(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netconfig<sp/>*);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">SVCXPRT<sp/>*<ref refid="Svc__vc__tirpc_8c_1ac6767756d88ef7aa82207922ae92194e" kindref="member">Svc_vc_create</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>u_int,<sp/>u_int);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">SVCXPRT<sp/>*<ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>u_int,<sp/>u_int);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal">SVCXPRT<sp/>*<ref refid="nfs__rpc__dispatcher__thread_8c_1ac2a77bd4b3c540f093590ae4211f649d" kindref="member">Svcfd_create</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>u_int<sp/>sendsize,<sp/>u_int<sp/>recvsize);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">SVCXPRT<sp/>*<ref refid="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" kindref="member">Svctcp_create</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/>u_int<sp/>sendsize,<sp/>u_int<sp/>recvsize);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">SVCXPRT<sp/>*<ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/>u_int<sp/>sendsz,<sp/>u_int<sp/>recvsz);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">bool_t<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(SVCXPRT<sp/>*<sp/>xprt,<sp/>u_long<sp/>prog,<sp/>u_long<sp/>vers,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dispatch)<sp/>(),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a724cb81161f478d63c680f3e1f3f3a62" kindref="member">socket_setoptions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socketFd);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="nfs__rpc__dispatcher__thread_8c_1abeb67fae7e2b65e73240da098c71fc61" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NULL_SVC<sp/>((struct<sp/>svc_callout<sp/>*)0)</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>fd_set<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a06cae25413d2604c529b04b9cef6c1e5" kindref="member">Svc_fdset</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_worker_data_t<sp/>*<ref refid="nfs__file__content__flush__thread_8c_1a4dfa2d28740c327f84868034c781f5d4" kindref="member">workers_data</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>nfs_parameter_t<sp/><ref refid="nfs__admin__thread_8c_1aeb8fc46586993cf210777049fca03969" kindref="member">nfs_param</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*<ref refid="nfs__rpc__dispatcher__thread_8c_1a9a4def18ab2df1dc6613ba45844467ae" kindref="member">Xports</ref>[FD_SETSIZE];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>one<sp/>from<sp/>RPCSEC_GSS<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_RPCSEC_GS_64_INSTALLED</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsvc__rpc__gss__data" kindref="compound">svc_rpc_gss_data</ref><sp/>**TabGssData;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>hash_table_t<sp/>*<ref refid="nfs__dupreq_8c_1a3ada0731d68a5b4aab865acfd3d73290" kindref="member">ht_dupreq</ref>;<sp/></highlight><highlight class="comment">/*<sp/>duplicate<sp/>request<sp/>hash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>pthread_mutex_t<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a937dea482306d8b1f0a3abeee4e1c605" kindref="member">mutex_cond_xprt</ref>[FD_SETSIZE];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>pthread_cond_t<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1ade991aebf0ece16e3d3ad172220a1475" kindref="member">condvar_xprt</ref>[FD_SETSIZE];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a468f81067f0999a0c178c74e27217aef" kindref="member">etat_xprt</ref>[FD_SETSIZE];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>public<sp/>data<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">rw_lock_t<sp/><ref refid="Svc__tirpc_8c_1adeaf29ab66e7d0329e90b899242295cb" kindref="member">Svc_lock</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">rw_lock_t<sp/><ref refid="Svc__tirpc_8c_1addddfae6edf92967dec39bfdd1272104" kindref="member">Svc_fd_lock</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>two<sp/>variables<sp/>keep<sp/>state<sp/>of<sp/>the<sp/>thread<sp/>that<sp/>gc<sp/>at<sp/>this<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="nfs__worker__thread_8c_1a1aaee2caa31305958d161507860bda96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a1aaee2caa31305958d161507860bda96" kindref="member">nb_current_gc_workers</ref>;</highlight></codeline>
<codeline lineno="130" refid="nfs__worker__thread_8c_1abe04e34ee93c05b0ef368bc7f20f5656" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1abe04e34ee93c05b0ef368bc7f20f5656" kindref="member">lock_nb_current_gc_workers</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="142"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nfs_debug_debug_label_info()</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>buddy_stats_t<sp/>bstats;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>BuddyLabelsSummary();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>BuddyGetStats(&amp;bstats);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_MEMLEAKS,</highlight><highlight class="stringliteral">&quot;-------<sp/>TOTAL<sp/>SPACE<sp/>USED<sp/>FOR<sp/>WORKER<sp/>THREAD:<sp/>%12lu<sp/>(on<sp/>%2u<sp/>pages)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)bstats.StdUsedSpace,<sp/>bstats.NbStdUsed);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DisplayMemoryMap();<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_MEMLEAKS,</highlight><highlight class="stringliteral">&quot;--------------------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_debug_debug_label_info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nfs_debug_buddy_info()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>buddy_stats_t<sp/>bstats;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>BuddyLabelsSummary();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>BuddyGetStats(&amp;bstats);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_MEMLEAKS,</highlight><highlight class="stringliteral">&quot;-------<sp/>TOTAL<sp/>SPACE<sp/>USED<sp/>FOR<sp/>DISPATCHER<sp/>THREAD:<sp/>%12lu<sp/>(on<sp/>%2u<sp/>pages)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)bstats.StdUsedSpace,<sp/>bstats.NbStdUsed);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>LogFullDebug(COMPONENT_MEMLEAKS,</highlight><highlight class="stringliteral">&quot;--------------------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="183" refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>svc_req<sp/>*ptr_req,<sp/>SVCXPRT<sp/>*<sp/>ptr_svc)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>LogMajor(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCH<sp/>DUMMY:<sp/>Possible<sp/>error,<sp/>function<sp/>nfs_rpc_dispatch_dummy<sp/>should<sp/>never<sp/>be<sp/>called&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_rpc_dispatch_dummy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="nfs__rpc__dispatcher__thread_8c_1a757bd493272d902a0cdb6c565b9c6135" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a757bd493272d902a0cdb6c565b9c6135" kindref="member">nfs_Init_svc</ref>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netconfig<sp/>*netconfig_udpv4;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netconfig<sp/>*netconfig_tcpv4;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netconfig<sp/>*netconfig_udpv6;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netconfig<sp/>*netconfig_tcpv6;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>sinaddr_nfs;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>sinaddr_mnt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>sinaddr_nlm;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>sinaddr_rquota;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>sinaddr_nfs_udp6;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>sinaddr_mnt_udp6;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netbuf<sp/>netbuf_nfs_udp6;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netbuf<sp/>netbuf_mnt_udp6;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>sinaddr_nfs_tcp6;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>sinaddr_mnt_tcp6;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netbuf<sp/>netbuf_nfs_tcp6;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">netbuf<sp/>netbuf_mnt_tcp6;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">t_bind<sp/>bindaddr_nfs_udp6;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">t_bind<sp/>bindaddr_mnt_udp6;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">t_bind<sp/>bindaddr_nfs_tcp6;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">t_bind<sp/>bindaddr_mnt_tcp6;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__rpc_sockinfo<sp/>si_nfs_tcp6;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__rpc_sockinfo<sp/>si_nfs_udp6;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__rpc_sockinfo<sp/>si_mnt_tcp6;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__rpc_sockinfo<sp/>si_mnt_udp6;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_svc_nfs_ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_svc_mnt_ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_svc_nlm_ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_svc_rquota_ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>OM_uint32<sp/>maj_stat;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>OM_uint32<sp/>min_stat;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>GssError[1024];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>gss_cred_id_t<sp/>test_gss_cred<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>gss_name_t<sp/>imported_name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>FD_ZERO(&amp;Svc_fdset);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>INIT:<sp/>Using<sp/>TIRPC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>netconfig<sp/>entries<sp/>from<sp/>/etc/netconfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((netconfig_udpv4<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netconfig<sp/>*)getnetconfigent(</highlight><highlight class="stringliteral">&quot;udp&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/!\\<sp/>Cannot<sp/>get<sp/>a<sp/>entry<sp/>for<sp/>udp<sp/>in<sp/>netconfig<sp/>file.<sp/>Check<sp/>file<sp/>/etc/netconfig...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>udp<sp/>netconfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>netconfig<sp/>entries<sp/>from<sp/>/etc/netconfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((netconfig_tcpv4<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netconfig<sp/>*)getnetconfigent(</highlight><highlight class="stringliteral">&quot;tcp&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/!\\<sp/>Cannot<sp/>get<sp/>a<sp/>entry<sp/>for<sp/>tcp<sp/>in<sp/>netconfig<sp/>file.<sp/>Check<sp/>file<sp/>/etc/netconfig...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>tcp<sp/>netconfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>INIT:<sp/>Using<sp/>IPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>netconfig<sp/>entries<sp/>from<sp/>/etc/netconfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((netconfig_udpv6<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netconfig<sp/>*)getnetconfigent(</highlight><highlight class="stringliteral">&quot;udp6&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/!\\<sp/>Cannot<sp/>get<sp/>a<sp/>entry<sp/>for<sp/>udp6<sp/>in<sp/>netconfig<sp/>file.<sp/>Check<sp/>file<sp/>/etc/netconfig...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>udp6<sp/>netconfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>netconfig<sp/>entries<sp/>from<sp/>/etc/netconfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((netconfig_tcpv6<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netconfig<sp/>*)getnetconfigent(</highlight><highlight class="stringliteral">&quot;tcp6&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/!\\<sp/>Cannot<sp/>get<sp/>a<sp/>entry<sp/>for<sp/>tcp<sp/>in<sp/>netconfig<sp/>file.<sp/>Check<sp/>file<sp/>/etc/netconfig...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>tcp6<sp/>netconfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>short<sp/>message<sp/>to<sp/>show<sp/>that<sp/>/etc/netconfig<sp/>parsing<sp/>was<sp/>a<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;netconfig<sp/>found<sp/>for<sp/>UDPv4<sp/>and<sp/>TCPv4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;netconfig<sp/>found<sp/>for<sp/>UDPv6<sp/>and<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>RW_lock<sp/>need<sp/>to<sp/>be<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>rw_lock_init(&amp;Svc_lock);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>rw_lock_init(&amp;Svc_fd_lock);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>UDP<sp/>and<sp/>TCP<sp/>structure<sp/>for<sp/>the<sp/>RPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nfs_udp<sp/>=</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp<sp/>=</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_mnt_udp<sp/>=</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp<sp/>=</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nlm_udp<sp/>=</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp<sp/>=</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_rquota_udp<sp/>=</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp<sp/>=</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>UDP<sp/>and<sp/>TCP<sp/>structure<sp/>for<sp/>the<sp/>RPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nfs_udp<sp/>=</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp<sp/>=</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_mnt_udp<sp/>=</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp<sp/>=</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nlm_udp<sp/>=</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp<sp/>=</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_rquota_udp<sp/>=</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp<sp/>=</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket(AF_INET6,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SOCKET,<sp/>errno);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>a<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>SO_REUSEADDR<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>wait<sp/>the<sp/>2MSL<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>udp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>tcp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a724cb81161f478d63c680f3e1f3f3a62" kindref="member">socket_setoptions</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>udp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>tcp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>udp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>tcp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>udp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setsockopt(nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;one,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(one)))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SETSOCKOPT,<sp/>errno);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Bad<sp/>tcp<sp/>socket<sp/>options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>prefer<sp/>using<sp/>non-blocking<sp/>socket<sp/>in<sp/>the<sp/>specific<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fcntl(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,<sp/>F_SETFL,<sp/>FNDELAY)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_FCNTL,<sp/>errno);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>set<sp/>udp<sp/>socket<sp/>as<sp/>non<sp/>blocking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fcntl(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,<sp/>F_SETFL,<sp/>FNDELAY)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_FCNTL,<sp/>errno);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>set<sp/>udp<sp/>socket<sp/>as<sp/>non<sp/>blocking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fcntl(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,<sp/>F_SETFL,<sp/>FNDELAY)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_FCNTL,<sp/>errno);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>set<sp/>udp<sp/>socket<sp/>as<sp/>non<sp/>blocking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fcntl(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,<sp/>F_SETFL,<sp/>FNDELAY)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_FCNTL,<sp/>errno);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>set<sp/>udp<sp/>socket<sp/>as<sp/>non<sp/>blocking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>log<sp/>that<sp/>can<sp/>be<sp/>useful<sp/>when<sp/>debug<sp/>ONC/RPC<sp/>and<sp/>RPCSEC_GSS<sp/>matter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>numbers<sp/>are:<sp/>nfs_udp=%u<sp/><sp/>nfs_tcp=%u<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mnt_udp=%u<sp/><sp/>mnt_tcp=%u<sp/>nlm_tcp=%u<sp/>nlm_udp=%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>log<sp/>that<sp/>can<sp/>be<sp/>useful<sp/>when<sp/>debug<sp/>ONC/RPC<sp/>and<sp/>RPCSEC_GSS<sp/>matter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>numbers<sp/>are:<sp/>nfs_udp=%u<sp/><sp/>nfs_tcp=%u<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mnt_udp=%u<sp/><sp/>mnt_tcp=%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bind<sp/>the<sp/>udp<sp/>and<sp/>tcp<sp/>socket<sp/>to<sp/>port<sp/>2049/tcp<sp/>and<sp/>2049/udp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_nfs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>sinaddr_nfs.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>sinaddr_nfs.sin_addr.s_addr<sp/>=<sp/>nfs_param.core_param.bind_addr.sin_addr.s_addr;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>sinaddr_nfs.sin_port<sp/>=<sp/>htons(nfs_param.core_param.nfs_port);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>now<sp/>time<sp/>for<sp/>binding<sp/>the<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_nfs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>bind(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_nfs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs)))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,<sp/>errno);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bind<sp/>the<sp/>udp<sp/>and<sp/>tcp<sp/>socket<sp/>to<sp/>ephemeral<sp/>port<sp/>for<sp/>mountd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_mnt,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>sinaddr_mnt.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>sinaddr_mnt.sin_addr.s_addr<sp/>=<sp/>nfs_param.core_param.bind_addr.sin_addr.s_addr;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>sinaddr_mnt.sin_port<sp/>=<sp/>htons(nfs_param.core_param.mnt_port);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>now<sp/>time<sp/>for<sp/>binding<sp/>the<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_mnt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>bind(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_mnt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt)))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,<sp/>errno);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bind<sp/>the<sp/>nlm<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_nlm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nlm));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>sinaddr_nlm.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>sinaddr_nlm.sin_addr.s_addr<sp/>=<sp/>nfs_param.core_param.bind_addr.sin_addr.s_addr;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>sinaddr_nlm.sin_port<sp/>=<sp/>htons(nfs_param.core_param.nlm_port);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>now<sp/>time<sp/>for<sp/>binding<sp/>the<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_nlm,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nlm))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>bind(nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_nlm,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nlm)))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,<sp/>errno);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bind<sp/>the<sp/>rquota<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_rquota,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_rquota));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>sinaddr_rquota.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>sinaddr_rquota.sin_addr.s_addr<sp/>=<sp/>nfs_param.core_param.bind_addr.sin_addr.s_addr;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>sinaddr_rquota.sin_port<sp/>=<sp/>htons(nfs_param.core_param.rquota_port);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>now<sp/>time<sp/>for<sp/>binding<sp/>the<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_rquota,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_rquota))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>bind(nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sinaddr_rquota,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_rquota)))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,<sp/>errno);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bind<sp/>the<sp/>udp<sp/>and<sp/>tcp<sp/>socket<sp/>to<sp/>port<sp/>2049/tcp<sp/>and<sp/>2049/udp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_nfs_udp6,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_udp6));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>sinaddr_nfs_udp6.sin6_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>sinaddr_nfs_udp6.sin6_addr<sp/>=<sp/>in6addr_any;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>interfaces<sp/>on<sp/>the<sp/>machine<sp/>are<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>sinaddr_nfs_udp6.sin6_port<sp/>=<sp/>htons(nfs_param.core_param.nfs_port);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>netbuf_nfs_udp6.maxlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_udp6);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>netbuf_nfs_udp6.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_udp6);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>netbuf_nfs_udp6.buf<sp/>=<sp/>&amp;sinaddr_nfs_udp6;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>bindaddr_nfs_udp6.qlen<sp/>=<sp/>SOMAXCONN;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>bindaddr_nfs_udp6.addr<sp/>=<sp/>netbuf_nfs_udp6;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!__rpc_fd2sockinfo(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,<sp/>&amp;si_nfs_udp6))</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>socket<sp/>info<sp/>for<sp/>udp6<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_nfs_tcp6,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_tcp6));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>sinaddr_nfs_tcp6.sin6_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>sinaddr_nfs_tcp6.sin6_addr<sp/>=<sp/>in6addr_any;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>interfaces<sp/>on<sp/>the<sp/>machine<sp/>are<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>sinaddr_nfs_tcp6.sin6_port<sp/>=<sp/>htons(nfs_param.core_param.nfs_port);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>netbuf_nfs_tcp6.maxlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_tcp6);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>netbuf_nfs_tcp6.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_nfs_tcp6);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>netbuf_nfs_tcp6.buf<sp/>=<sp/>&amp;sinaddr_nfs_tcp6;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>bindaddr_nfs_tcp6.qlen<sp/>=<sp/>SOMAXCONN;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>bindaddr_nfs_tcp6.addr<sp/>=<sp/>netbuf_nfs_tcp6;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!__rpc_fd2sockinfo(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,<sp/>&amp;si_nfs_tcp6))</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>socket<sp/>info<sp/>for<sp/>tcp6<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)bindaddr_nfs_tcp6.addr.buf,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(socklen_t)<sp/>si_nfs_tcp6.si_alen)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)bindaddr_nfs_udp6.addr.buf,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(socklen_t)<sp/>si_nfs_udp6.si_alen)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_mnt_udp6,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_udp6));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>sinaddr_mnt_udp6.sin6_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>sinaddr_mnt_udp6.sin6_addr<sp/>=<sp/>in6addr_any;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>interfaces<sp/>on<sp/>the<sp/>machine<sp/>are<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>sinaddr_mnt_udp6.sin6_port<sp/>=<sp/>htons(nfs_param.core_param.mnt_port);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>netbuf_mnt_udp6.maxlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_udp6);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>netbuf_mnt_udp6.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_udp6);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>netbuf_mnt_udp6.buf<sp/>=<sp/>&amp;sinaddr_mnt_udp6;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>bindaddr_mnt_udp6.qlen<sp/>=<sp/>SOMAXCONN;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>bindaddr_mnt_udp6.addr<sp/>=<sp/>netbuf_mnt_udp6;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!__rpc_fd2sockinfo(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,<sp/>&amp;si_mnt_udp6))</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>socket<sp/>info<sp/>for<sp/>udp6<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sinaddr_mnt_tcp6,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_tcp6));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>sinaddr_mnt_tcp6.sin6_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>sinaddr_mnt_tcp6.sin6_addr<sp/>=<sp/>in6addr_any;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>interfaces<sp/>on<sp/>the<sp/>machine<sp/>are<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>sinaddr_mnt_tcp6.sin6_port<sp/>=<sp/>htons(nfs_param.core_param.mnt_port);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>netbuf_mnt_tcp6.maxlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_tcp6);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>netbuf_mnt_tcp6.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sinaddr_mnt_tcp6);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>netbuf_mnt_tcp6.buf<sp/>=<sp/>&amp;sinaddr_mnt_tcp6;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>bindaddr_mnt_tcp6.qlen<sp/>=<sp/>SOMAXCONN;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>bindaddr_mnt_tcp6.addr<sp/>=<sp/>netbuf_mnt_tcp6;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!__rpc_fd2sockinfo(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,<sp/>&amp;si_mnt_tcp6))</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>get<sp/>socket<sp/>info<sp/>for<sp/>udp6<sp/>socket<sp/>rc=%d<sp/>errno=%d&quot;</highlight><highlight class="normal">,<sp/>rc,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)bindaddr_mnt_tcp6.addr.buf,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(socklen_t)<sp/>si_mnt_tcp6.si_alen)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>tcp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)bindaddr_mnt_tcp6.addr.buf,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(socklen_t)<sp/>si_mnt_udp6.si_alen)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_BIND,<sp/>errno);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>bind<sp/>udp6<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME<sp/>do<sp/>the<sp/>nlm<sp/>part<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unset<sp/>the<sp/>former<sp/>registration<sp/>to<sp/>the<sp/>rpcbind<sp/>daemon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V2,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V3,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V4,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V1,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V3,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V2,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V3,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V4,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V1,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V3,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nlm_program,<sp/>NLM4_VERS,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>RQUOTAVERS,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>EXT_RQUOTAVERS,<sp/>netconfig_tcpv4);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>RQUOTAVERS,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>EXT_RQUOTAVERS,<sp/>netconfig_udpv4);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="800"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unset<sp/>rpcbind<sp/>registration<sp/>for<sp/>IPv6<sp/>related<sp/>protocols<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V2,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V3,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V4,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V1,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V3,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V2,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V3,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V4,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V1,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V3,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>RQUOTAVERS,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>EXT_RQUOTAVERS,<sp/>netconfig_tcpv6);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>RQUOTAVERS,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>rpcb_unset(nfs_param.core_param.rquota_program,<sp/>EXT_RQUOTAVERS,<sp/>netconfig_udpv6);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="822"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unset<sp/>the<sp/>port<sp/>mapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V2);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V3);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.nfs_program,<sp/>NFS_V4);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V1);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.mnt_program,<sp/>MOUNT_V3);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.nlm_program,<sp/>NLM4_VERS);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.rquota_program,<sp/>RQUOTAVERS);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>pmap_unset(nfs_param.core_param.rquota_program,<sp/>EXT_RQUOTAVERS);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>of<sp/>the<sp/>SVCXPRT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Allocation<sp/>of<sp/>the<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp<sp/>=</highlight></codeline>
<codeline lineno="840"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="844"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="847"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>NFS/UDP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="854"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp-&gt;xp_netid<sp/>=</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_udpv6-&gt;nc_netid);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp-&gt;xp_tp<sp/>=</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_udpv6-&gt;nc_device);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp<sp/>=</highlight></codeline>
<codeline lineno="861"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__vc__tirpc_8c_1ac6767756d88ef7aa82207922ae92194e" kindref="member">Svc_vc_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="865"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" kindref="member">Svctcp_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="868"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCTCP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>NFS/TCP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="875"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(listen</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bindaddr_nfs_tcp6.qlen)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>listen<sp/>on<sp/><sp/>NFS/TCPv6<sp/>SVCXPRT,<sp/>errno=%u&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp-&gt;xp_netid<sp/>=</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_tcpv6-&gt;nc_netid);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp-&gt;xp_tp<sp/>=</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_tcpv6-&gt;nc_device);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp<sp/>=</highlight></codeline>
<codeline lineno="890"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="897"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>MNT/UDP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp-&gt;xp_netid<sp/>=</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_udpv6-&gt;nc_netid);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp-&gt;xp_tp<sp/>=</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_udpv6-&gt;nc_device);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp<sp/>=</highlight></codeline>
<codeline lineno="911"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__vc__tirpc_8c_1ac6767756d88ef7aa82207922ae92194e" kindref="member">Svc_vc_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="915"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" kindref="member">Svctcp_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="918"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCTCP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>MNT/TCP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_nlm_udp<sp/>=</highlight></codeline>
<codeline lineno="926"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="930"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>NLM/UDP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_nlm_tcp<sp/>=</highlight></codeline>
<codeline lineno="940"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__vc__tirpc_8c_1ac6767756d88ef7aa82207922ae92194e" kindref="member">Svc_vc_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="944"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" kindref="member">Svctcp_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCTCP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>NLM/TCP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="955"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_rquota_udp<sp/>=</highlight></codeline>
<codeline lineno="956"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="960"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>RQUOTA/UDP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp<sp/>=</highlight></codeline>
<codeline lineno="970"><highlight class="normal">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__vc__tirpc_8c_1ac6767756d88ef7aa82207922ae92194e" kindref="member">Svc_vc_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="974"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aaae646ca40f41dc7188aa92019d04ecb" kindref="member">Svctcp_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCTCP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>allocate<sp/>RQUOTA/TCP<sp/>SVCXPRT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(listen</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bindaddr_mnt_tcp6.qlen)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>listen<sp/>on<sp/><sp/>MNT/TCPv6<sp/>SVCXPRT,<sp/>errno=%u&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp-&gt;xp_netid<sp/>=</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_tcpv6-&gt;nc_netid);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp-&gt;xp_tp<sp/>=</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strdup(netconfig_tcpv6-&gt;nc_device);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_GSSRPC</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acquire<sp/>RPCSEC_GSS<sp/>basis<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.krb5_param.active_krb5<sp/>==<sp/>TRUE)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="Svc__auth__gss_8c_1af66b51f6d0cc0b4638b031bbcb03e3e4" kindref="member">Svcauth_gss_import_name</ref>(nfs_param.krb5_param.principal)<sp/>!=<sp/>TRUE)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Could<sp/>not<sp/>import<sp/>principal<sp/>name<sp/>%s<sp/>into<sp/>GSSAPI&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.krb5_param.principal);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEvent(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>imported<sp/>principal<sp/>%s<sp/>into<sp/>GSSAPI&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.krb5_param.principal);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trying<sp/>to<sp/>acquire<sp/>a<sp/>credentials<sp/>for<sp/>checking<sp/>name&apos;s<sp/>validity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="Svc__auth__gss_8c_1a4db90193f7b22faf8c4077981b886b4a" kindref="member">Svcauth_gss_acquire_cred</ref>())</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>EXIT:<sp/>Cannot<sp/>acquire<sp/>credentials<sp/>for<sp/>principal<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.krb5_param.principal);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEvent(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Principal<sp/>%s<sp/>is<sp/>suitable<sp/>for<sp/>acquiring<sp/>credentials&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.krb5_param.principal);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if(<sp/>nfs_param.krb5_param.active_krb5<sp/>==<sp/>TRUE<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_GSSRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_PORTMAPPER</highlight></codeline>
<codeline lineno="1034"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>all<sp/>the<sp/>RPC<sp/>registration,<sp/>for<sp/>UDP<sp/>and<sp/>TCP,<sp/>for<sp/>NFS_V2,<sp/>NFS_V3<sp/>and<sp/>NFS_V4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Registration<sp/>to<sp/>the<sp/>portmapper<sp/>for<sp/>NFS<sp/>and<sp/>MOUNT,<sp/>on<sp/>UDP<sp/>and<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>only<sp/>NFSv4<sp/>is<sp/>supported<sp/>for<sp/>the<sp/>FSAL_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1041"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V2/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1043"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1047"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1051"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V2<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V3/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1060"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1064"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1068"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V3<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V4/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1078"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1082"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1086"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V4<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_PROXY</highlight></codeline>
<codeline lineno="1094"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="1099"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V2/UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv6))</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V2<sp/>on<sp/>UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V3/UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv6))</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V3<sp/>on<sp/>UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V4/UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_udp,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv6))</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V4<sp/>on<sp/>UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_TCP_REGISTER</highlight></codeline>
<codeline lineno="1135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>only<sp/>NFSv4<sp/>is<sp/>supported<sp/>for<sp/>the<sp/>FSAL_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V2/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1141"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1149"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V2<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V3/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1162"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V3<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V4/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1176"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1184"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V4<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_PROXY</highlight></codeline>
<codeline lineno="1192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1194"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="1197"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V2/TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V2,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv6))</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V2<sp/>on<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V3/TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv6))</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V3<sp/>on<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NFS<sp/>V4/TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nfs_program,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_V4,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv6))</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NFS<sp/>V4<sp/>on<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nfs_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC_IPV6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1233"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1235"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V1/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1237"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1241"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1245"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V1<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V3/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1254"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1258"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V3<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="1271"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V1/UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv6))</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V1<sp/>on<sp/>UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V3/UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_udp,</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv6))</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V3<sp/>on<sp/>UDPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1294"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_TCP_REGISTER</highlight></codeline>
<codeline lineno="1296"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1298"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V1/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1300"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1304"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1308"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V1<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V3/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1317"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1321"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1325"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V3<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC_IPV6</highlight></codeline>
<codeline lineno="1336"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V1/TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V1,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv6))</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V1<sp/>on<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>MOUNT<sp/>V3/TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp,</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOUNT_V3,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv6))</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>MOUNT<sp/>V3<sp/>on<sp/>TCPv6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_mnt_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1359"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="1361"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NLM<sp/>V4/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1364"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nlm_udp,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nlm_program,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nlm_udp,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nlm_program,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NLM<sp/>V4<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nlm_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1379"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_nlm_ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="1385"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1386"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>RQUOTA/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_rquota_udp,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_rquota_udp,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>RQUOTA<sp/>v1<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>RQUOTA/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1410"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>RQUOTA<sp/>v1<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>EXT_RQUOTA/UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1423"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_rquota_udp,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXT_RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_udpv4))</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1427"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_rquota_udp,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXT_RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_UDP))</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>RQUOTA<sp/>v2<sp/>on<sp/>UDP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>EXT_RQUOTA/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXT_RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1444"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXT_RQUOTAVERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>RQUOTA<sp/>v2<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1456"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_rquota_ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="1462"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NLM<sp/>V4/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1465"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_nlm_tcp,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1469"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_nlm_tcp,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.nlm_program,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NLM<sp/>V4<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_nlm_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1480"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_nlm_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1483"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_nlm_ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="1487"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(<sp/>_USE_PROXY<sp/>)<sp/>||<sp/>defined<sp/>(<sp/>_HANDLE_MAPPING<sp/>)</highlight></codeline>
<codeline lineno="1488"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>NLM<sp/>V4/TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1490"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!svc_reg(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.mnt_program,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>netconfig_tcpv4))</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1494"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="nfs__rpc__dispatcher__thread_8c_1adceb1bd7fe39115fff57535f517f5d3e" kindref="member">Svc_register</ref>(nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.core_param.rquota_program,</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NLM4_VERS,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a545ee47faf1c9d08baa979e98749ef42" kindref="member">nfs_rpc_dispatch_dummy</ref>,<sp/>IPPROTO_TCP))</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVC_REGISTER,<sp/>0);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Cannot<sp/>register<sp/>NLM<sp/>V4<sp/>on<sp/>TCP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1505"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_rquota_ok<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_PROXY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1508"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>nb_svc_rquota_ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_NO_TCP_REGISTER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Were<sp/>at<sp/>least<sp/>one<sp/>NFS/MNT<sp/>registration<sp/>ok<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nb_svc_nfs_ok<sp/>==<sp/>0<sp/>||<sp/>nb_svc_mnt_ok<sp/>==<sp/>0<sp/>||<sp/>nb_svc_nlm_ok<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>nb_svc_rquota_ok<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>enough<sp/>registration<sp/>for<sp/>servicing<sp/>clients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFS_DISPATCHER:<sp/>/!\\<sp/>|<sp/>No<sp/>registration<sp/>to<sp/>NFS<sp/>and/or<sp/>MOUNT<sp/>programs<sp/>were<sp/>done...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1522"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freenetconfigent(netconfig_udpv4);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freenetconfigent(netconfig_tcpv4);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1525"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1528"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>freenetconfigent(netconfig_udpv4);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>freenetconfigent(netconfig_tcpv4);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1531"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_NO_PORTMAPPER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_svc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>select_worker_queue()</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NO_VALUE_CHOOSEN<sp/><sp/>1000000</highlight></codeline>
<codeline lineno="1544"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worker_index<sp/>=<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a25424ceb074d9f56b67d1ff02ad8734d" kindref="member">NO_VALUE_CHOOSEN</ref>;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_number_pending<sp/>=<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a25424ceb074d9f56b67d1ff02ad8734d" kindref="member">NO_VALUE_CHOOSEN</ref>;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>chose<sp/>the<sp/>smallest<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>(last<sp/>+<sp/>1)<sp/>%<sp/>nfs_param.core_param.nb_worker,<sp/>cpt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpt<sp/>&lt;<sp/>nfs_param.core_param.nb_worker;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpt++,<sp/>i<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>%<sp/>nfs_param.core_param.nb_worker)</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Choose<sp/>only<sp/>fully<sp/>initialized<sp/>workers<sp/>and<sp/>that<sp/>does<sp/>not<sp/>gc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((workers_data[i].gc_in_progress<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(workers_data[i].is_ready<sp/>==<sp/>TRUE))</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(workers_data[i].pending_request-&gt;nb_entry<sp/>&lt;<sp/>min_number_pending)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker_index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_number_pending<sp/>=<sp/>workers_data[i].pending_request-&gt;nb_entry;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!workers_data[i].is_ready)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;worker<sp/>thread<sp/>#%u<sp/>is<sp/>not<sp/>ready&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(workers_data[i].gc_in_progress)</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;worker<sp/>thread<sp/>#%u<sp/>is<sp/>doing<sp/>garbage<sp/>collection&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(worker_index<sp/>==<sp/>NO_VALUE_CHOOSEN);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>last<sp/>=<sp/>worker_index;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>worker_index;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select_worker_queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596" refid="nfs__rpc__tcp__socket__manager__thread_8c_1aa3184c183d980c407420c2157f36c390" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aa3184c183d980c407420c2157f36c390" kindref="member">nfs_rpc_get_worker_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mount_protocol_flag)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worker_index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_MOUNT_LIST</highlight></codeline>
<codeline lineno="1601"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mount_protocol_flag<sp/>==<sp/>TRUE)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>worker_index<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>worker<sp/>#0<sp/>is<sp/>dedicated<sp/>to<sp/>mount<sp/>protocol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>worker_index<sp/>=<sp/>select_worker_queue();</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1606"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>a<sp/>worker<sp/>depending<sp/>on<sp/>its<sp/>queue<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>worker_index<sp/>=<sp/>select_worker_queue();</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1609"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>worker_index;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_rpc_get_worker_index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625" refid="nfs__rpc__dispatcher__thread_8c_1a0785e886197e39cc730793e0988d02ce" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a0785e886197e39cc730793e0988d02ce" kindref="member">nfs_rpc_getreq</ref>(fd_set<sp/>*<sp/>readfds,<sp/>nfs_parameter_t<sp/>*<sp/>pnfs_para)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>xprt_stat<sp/>stat;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rpc_msg<sp/>*pmsg;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">svc_req<sp/>*preq;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>SVCXPRT<sp/>*xprt;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask,<sp/>*maskp;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cred_area;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*pdead_caller<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dead_caller[MAXNAMLEN];</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>LRU_entry_t<sp/>*pentry<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/>LRU_status_t<sp/>status;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>nfs_request_data_t<sp/>*pnfsreq<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worker_index;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mount_flag<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>portable<sp/>access<sp/>to<sp/>fds_bits<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>maskp<sp/>=<sp/>__FDS_BITS(readfds);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(sock<sp/>=<sp/>0;<sp/>sock<sp/>&lt;<sp/>FD_SETSIZE;<sp/>sock<sp/>+=<sp/>NFDBITS)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(mask<sp/>=<sp/>*maskp++;<sp/>bit<sp/>=<sp/>ffs(mask);<sp/>mask<sp/>^=<sp/>(1<sp/>&lt;&lt;<sp/>(bit<sp/>-<sp/>1)))</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sock<sp/>has<sp/>input<sp/>waiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xprt<sp/>=<sp/>Xports[sock<sp/>+<sp/>bit<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xprt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>But<sp/>do<sp/>we<sp/>control<sp/>sock?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CRITICAL<sp/>ERROR:<sp/>Incoherency<sp/>found<sp/>in<sp/>Xports<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>thread<sp/>manage<sp/>only<sp/>mount<sp/>protocol,<sp/>check<sp/>for<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nfs_param.worker_param.nfs_svc_data.socket_mnt_udp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount_flag<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount_flag<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>worker<sp/>to<sp/>do<sp/>the<sp/>job<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((worker_index<sp/>=<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1aa3184c183d980c407420c2157f36c390" kindref="member">nfs_rpc_get_worker_index</ref>(mount_flag))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;CRITICAL<sp/>ERROR:<sp/>Couldn&apos;t<sp/>choose<sp/>a<sp/>worker<sp/>!<sp/>Exiting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_USE_TIRPC<sp/>)<sp/>||<sp/>defined(<sp/>_FREEBSD<sp/>)</highlight></codeline>
<codeline lineno="1675"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>request<sp/>from<sp/>spool<sp/>#%d,<sp/>xprt-&gt;xp_sock=%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker_index,<sp/>xprt-&gt;xp_fd);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1678"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>request<sp/>from<sp/>spool<sp/>#%d,<sp/>xprt-&gt;xp_sock=%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker_index,<sp/>xprt-&gt;xp_sock);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1681"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>pnfsreq<sp/>from<sp/>the<sp/>worker&apos;s<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="1686"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;nfs_request_data_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1689"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GET_PREALLOC_CONSTRUCT(pnfsreq,</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers_data[worker_index].request_pool,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_param.worker_param.nb_pending_prealloc,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_request_data_t,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc,<sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1afffa743dbd2aef77cdc7d24ec263005f" kindref="member">constructor_nfs_request_data_t</ref>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="1697"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging<sp/>memory<sp/>leaks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuddySetDebugLabel(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1700"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pnfsreq<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CRITICAL<sp/>ERROR:<sp/>empty<sp/>request<sp/>pool<sp/>for<sp/>the<sp/>chosen<sp/>worker<sp/>!<sp/>Exiting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cred_area<sp/>=<sp/>pnfsreq-&gt;cred_area;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preq<sp/>=<sp/>&amp;(pnfsreq-&gt;req);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmsg<sp/>=<sp/>&amp;(pnfsreq-&gt;msg);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmsg-&gt;rm_call.cb_cred.oa_base<sp/>=<sp/>cred_area;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmsg-&gt;rm_call.cb_verf.oa_base<sp/>=<sp/>&amp;(cred_area[MAX_AUTH_BYTES]);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preq-&gt;rq_clntcred<sp/>=<sp/>&amp;(cred_area[2<sp/>*<sp/>MAX_AUTH_BYTES]);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>UDP<sp/>RPCs<sp/>are<sp/>quite<sp/>simple:<sp/>everything<sp/>comes<sp/>to<sp/>the<sp/>same<sp/>socket,<sp/>so<sp/>several<sp/>SVCXPRT</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>be<sp/>defined,<sp/>one<sp/>per<sp/>tbuf<sp/>to<sp/>handle<sp/>the<sp/>stuff</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TCP<sp/>RPCs<sp/>are<sp/>more<sp/>complex:</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>a<sp/>unique<sp/>SVCXPRT<sp/>exists<sp/>that<sp/>deals<sp/>with<sp/>initial<sp/>tcp<sp/>rendez<sp/>vous.<sp/>It<sp/>does<sp/>the<sp/>accept</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>client,<sp/>but<sp/>recv<sp/>no<sp/>message<sp/>from<sp/>the<sp/>client.<sp/>But<sp/>SVC_RECV<sp/>on<sp/>it<sp/>creates</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>a<sp/>new<sp/>SVCXPRT<sp/>dedicated<sp/>to<sp/>the<sp/>client.<sp/>This<sp/>specific<sp/>SVXPRT<sp/>is<sp/>bound<sp/>on<sp/>TCPSocket</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>while<sp/>receiving<sp/>something<sp/>on<sp/>the<sp/>Svc_fdset,<sp/>I<sp/>must<sp/>know<sp/>if<sp/>this<sp/>is<sp/>a<sp/>UDP<sp/>request,</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>an<sp/>initial<sp/>TCP<sp/>request<sp/>or<sp/>a<sp/>TCP<sp/>socket<sp/>from<sp/>an<sp/>already<sp/>connected<sp/>client.</highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>how<sp/>to<sp/>distinguish<sp/>the<sp/>cases:</highlight></codeline>
<codeline lineno="1729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>UDP<sp/>connections<sp/>are<sp/>bound<sp/>to<sp/>socket<sp/>NFS_UDPSocket</highlight></codeline>
<codeline lineno="1730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TCP<sp/>initial<sp/>connections<sp/>are<sp/>bound<sp/>to<sp/>socket<sp/>NFS_TCPSocket</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>the<sp/>other<sp/>cases<sp/>are<sp/>requests<sp/>from<sp/>already<sp/>connected<sp/>TCP<sp/>Clients</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>regular<sp/>UDP<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>NFS<sp/>UDP<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>pnfsreq-&gt;nfs_udp_xprt;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_UDP;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>MOUNT<sp/>UDP<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>pnfsreq-&gt;mnt_udp_xprt;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_UDP;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="1752"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>NLM<sp/>UDP<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>pnfsreq-&gt;nlm_udp_xprt;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_UDP;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="1761"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>RQUOTA<sp/>UDP<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>pnfsreq-&gt;rquota_udp_xprt;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_UDP;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_nfs_tcp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>an<sp/>initial<sp/>tcp<sp/>connection<sp/></highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>is<sp/>no<sp/>RPC<sp/>message,<sp/>this<sp/>is<sp/>only<sp/>a<sp/>TCP<sp/>connect.</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>SVC_RECV<sp/>does<sp/>only<sp/>produces<sp/>a<sp/>new<sp/>connected<sp/>socket<sp/>(it<sp/>does</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>a<sp/>call<sp/>to<sp/>accept<sp/>and<sp/>FD_SET)</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>there<sp/>is<sp/>no<sp/>need<sp/>of<sp/>worker<sp/>thread<sp/>processing<sp/>to<sp/>be<sp/>done</highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>initial<sp/>NFS<sp/>TCP<sp/>request<sp/>from<sp/>a<sp/>new<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>nfs_param.worker_param.nfs_svc_data.xprt_nfs_tcp;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_mnt_tcp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>initial<sp/>MOUNT<sp/>TCP<sp/>request<sp/>from<sp/>a<sp/>new<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>nfs_param.worker_param.nfs_svc_data.xprt_mnt_tcp;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="1795"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_nlm_tcp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>initial<sp/>NLM<sp/>request<sp/>from<sp/>a<sp/>new<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>nfs_param.worker_param.nfs_svc_data.xprt_nlm_tcp;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="1805"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nfs_param.worker_param.nfs_svc_data.socket_rquota_tcp<sp/>==<sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;An<sp/>initial<sp/>RQUOTA<sp/>request<sp/>from<sp/>a<sp/>new<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>nfs_param.worker_param.nfs_svc_data.xprt_rquota_tcp;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>regular<sp/>tcp<sp/>request<sp/>on<sp/>an<sp/>established<sp/>connection,<sp/>should<sp/>be<sp/>handle<sp/>by<sp/>a<sp/>dedicated<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A<sp/>NFS<sp/>TCP<sp/>request<sp/>from<sp/>an<sp/>already<sp/>connected<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;tcp_xprt<sp/>=<sp/>xprt;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt<sp/>=<sp/>pnfsreq-&gt;tcp_xprt;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;ipproto<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;status<sp/>=<sp/>SVC_RECV(pnfsreq-&gt;xprt,<sp/>&amp;(pnfsreq-&gt;msg));</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Status<sp/>for<sp/>SVC_RECV<sp/>on<sp/>socket<sp/>%d<sp/>is<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock<sp/>+<sp/>bit<sp/>-<sp/>1,<sp/>pnfsreq-&gt;status);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>status<sp/>is<sp/>ok,<sp/>the<sp/>request<sp/>will<sp/>be<sp/>processed<sp/>by<sp/>the<sp/>related</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>worker,<sp/>otherwise,<sp/>it<sp/>should<sp/>be<sp/>released<sp/>by<sp/>being<sp/>tagged<sp/>as<sp/>invalid*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pnfsreq-&gt;status)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RPC<sp/>over<sp/>TCP<sp/>specific:<sp/>RPC/UDP&apos;s<sp/>xprt<sp/>know<sp/>only<sp/>one<sp/>state:<sp/>XPRT_IDLE,<sp/>because<sp/>UDP<sp/>is<sp/>mostly</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>stateless<sp/>protocol.<sp/>With<sp/>RPC/TCP,<sp/>they<sp/>can<sp/>be<sp/>XPRT_DIED<sp/>especially<sp/>when<sp/>the<sp/>client<sp/>closes</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>peer&apos;s<sp/>socket.<sp/>We<sp/>have<sp/>to<sp/>cope<sp/>with<sp/>this<sp/>aspect<sp/>in<sp/>the<sp/>next<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/>SVC_STAT(pnfsreq-&gt;xprt);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stat<sp/>==<sp/>XPRT_DIED)</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="1841"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdead_caller<sp/>=<sp/>svc_getcaller(pnfsreq-&gt;xprt))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(dead_caller,<sp/>MAXNAMLEN,<sp/></highlight><highlight class="stringliteral">&quot;0x%x=%d.%d.%d.%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntohl(pdead_caller-&gt;sin_addr.s_addr),</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ntohl(pdead_caller-&gt;sin_addr.s_addr)<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24,</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ntohl(pdead_caller-&gt;sin_addr.s_addr)<sp/>&amp;<sp/>0x00FF0000)<sp/>&gt;&gt;<sp/>16,</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ntohl(pdead_caller-&gt;sin_addr.s_addr)<sp/>&amp;<sp/>0x0000FF00)<sp/>&gt;&gt;<sp/>8,</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ntohl(pdead_caller-&gt;sin_addr.s_addr)<sp/>&amp;<sp/>0x000000FF));</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(dead_caller,<sp/></highlight><highlight class="stringliteral">&quot;unresolved&quot;</highlight><highlight class="normal">,<sp/>MAXNAMLEN);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_USE_TIRPC<sp/>)<sp/>||<sp/>defined(<sp/>_FREEBSD<sp/>)</highlight></codeline>
<codeline lineno="1855"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>client<sp/>disappeared...<sp/>socket=%d,<sp/>addr=%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt-&gt;xp_fd,<sp/>dead_caller);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Xports[pnfsreq-&gt;xprt-&gt;xp_fd]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_DESTROY(Xports[pnfsreq-&gt;xprt-&gt;xp_fd]);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1860"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>client<sp/>disappeared...<sp/>socket=%d,<sp/>addr=%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt-&gt;xp_sock,<sp/>dead_caller);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Xports[pnfsreq-&gt;xprt-&gt;xp_sock]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVC_DESTROY(Xports[pnfsreq-&gt;xprt-&gt;xp_sock]);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1865"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RELEASE_PREALLOC(pnfsreq,<sp/>workers_data[worker_index].request_pool,</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_alloc);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stat<sp/>==<sp/>XPRT_MOREREQS)</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>on<sp/>socket<sp/>%d<sp/>has<sp/>status<sp/>XPRT_MOREREQS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(<sp/>_USE_TIRPC<sp/>)<sp/>||<sp/>defined(<sp/>_FREEBSD<sp/>)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt-&gt;xp_fd);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1879"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnfsreq-&gt;xprt-&gt;xp_sock);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1881"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCH:<sp/>Invalidating<sp/>entry<sp/>with<sp/>xprt_stat=%d&quot;</highlight><highlight class="normal">,<sp/>stat);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers_data[worker_index].passcounter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>should<sp/>be<sp/>used<sp/>for<sp/>UDP<sp/>requests<sp/>only,<sp/>TCP<sp/>request<sp/>have<sp/>dedicted<sp/>management<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Awaking<sp/>thread<sp/>#%d&quot;</highlight><highlight class="normal">,<sp/>worker_index);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(workers_data[worker_index].mutex_req_condvar);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pentry<sp/>=</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LRU_new_entry(workers_data[worker_index].pending_request,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;status))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].mutex_req_condvar);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogMajor(COMPONENT_DISPATCH,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>inserting<sp/>pending<sp/>request<sp/>to<sp/>Thread<sp/>#%d...<sp/>exiting&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker_index);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pentry-&gt;buffdata.pdata<sp/>=<sp/>(caddr_t)<sp/>pnfsreq;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pentry-&gt;buffdata.len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*pnfsreq);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_cond_signal(&amp;(workers_data[worker_index].req_condvar))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].mutex_req_condvar);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCH:<sp/>Cond<sp/>signal<sp/>failed<sp/>for<sp/>thr#%d<sp/>,<sp/>errno<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker_index,<sp/>errno);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].mutex_req_condvar);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V(workers_data[worker_index].request_pool_mutex);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_rpc_getreq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937" refid="nfs__rpc__dispatcher__thread_8c_1af8096617fe01cfa40ad63e5c15a43983" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1af8096617fe01cfa40ad63e5c15a43983" kindref="member">clean_pending_request</ref>(LRU_entry_t<sp/>*<sp/>pentry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addparam)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>nfs_request_data_t<sp/>**preqnfspool<sp/>=<sp/>(nfs_request_data_t<sp/>**)<sp/>addparam;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>nfs_request_data_t<sp/>*preqnfs<sp/>=<sp/>(nfs_request_data_t<sp/>*)<sp/>(pentry-&gt;buffdata.pdata);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>entry<sp/>back<sp/>to<sp/>the<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>RELEASE_PREALLOC(preqnfs,<sp/>*preqnfspool,<sp/>next_alloc);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean_pending_request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960" refid="nfs__rpc__dispatcher__thread_8c_1a9c4d5812b5445e27dec115567787e7c9" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a9c4d5812b5445e27dec115567787e7c9" kindref="member">print_pending_request</ref>(LRU_data_t<sp/>data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snprintf(str,<sp/>LRU_DISPLAY_STRLEN,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>implemented<sp/>for<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print_pending_request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976" refid="nfs__rpc__dispatcher__thread_8c_1a6eb51d2ceaa2943d99cb326f9b3d9968" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a6eb51d2ceaa2943d99cb326f9b3d9968" kindref="member">rpc_dispatcher_svc_run</ref>(nfs_parameter_t<sp/>*<sp/>pnfs_param)</highlight></codeline>
<codeline lineno="1977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>fd_set<sp/>readfdset;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="1982"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_iter_memleaks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1984"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TRUE)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>work<sp/>on<sp/>a<sp/>copy<sp/>of<sp/>Svc_fdset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readfdset<sp/>=<sp/>Svc_fdset;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>on<sp/>a<sp/>fdset<sp/>build<sp/>with<sp/>all<sp/>socket<sp/>used<sp/>in<sp/>NFS/RPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>incoming<sp/>RPC<sp/>requests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>select<sp/>on<sp/>the<sp/>RPC<sp/>fdset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>select(FD_SETSIZE,<sp/>&amp;readfdset,<sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>incoming<sp/>RPC<sp/>requests,<sp/>after<sp/>select<sp/>rc=%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rc)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errno<sp/>==<sp/>EBADF)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_SYS,<sp/>ERR_SELECT,<sp/>errno);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogFullDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>SVC<sp/>RUN:<sp/>request(s)<sp/>received&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a0785e886197e39cc730793e0988d02ce" kindref="member">nfs_rpc_getreq</ref>(&amp;readfdset,<sp/>pnfs_param);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_MEMLEAKS</highlight></codeline>
<codeline lineno="2019"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nb_iter_memleaks<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_iter_memleaks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfs_debug_buddy_info();</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_iter_memleaks<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2027"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>while<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rpc_dispatcher_svc_run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044" refid="nfs__rpc__dispatcher__thread_8c_1a9e303488e5f50b512b89ba77ef8553e4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="nfs__rpc__dispatcher__thread_8c_1a9e303488e5f50b512b89ba77ef8553e4" kindref="member">rpc_dispatcher_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Arg)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>nfs_parameter_t<sp/>*pnfs_param<sp/>=<sp/>(nfs_parameter_t<sp/>*)<sp/>Arg;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>SetNameFunction(</highlight><highlight class="stringliteral">&quot;dispatch_thr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NO_BUDDY_SYSTEM</highlight></codeline>
<codeline lineno="2052"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>of<sp/>the<sp/>Buddy<sp/>Malloc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Initialization<sp/>of<sp/>memory<sp/>manager&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rc<sp/>=<sp/>BuddyInit(&amp;nfs_param.buddy_param_worker))<sp/>!=<sp/>BUDDY_SUCCESS)</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Failed<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Memory<sp/>manager<sp/>could<sp/>not<sp/>be<sp/>initialized,<sp/>exiting...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2061"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calling<sp/>dispatcher<sp/>main<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>LogEvent(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>Entering<sp/>nfs/rpc<sp/>dispatcher&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>LogDebug(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>DISPATCHER:<sp/>my<sp/>pthread<sp/>id<sp/>is<sp/>%p&quot;</highlight><highlight class="normal">,<sp/>(caddr_t)<sp/>pthread_self());</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a6eb51d2ceaa2943d99cb326f9b3d9968" kindref="member">rpc_dispatcher_svc_run</ref>(pnfs_param);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rpc_dispatcher_thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083" refid="nfs__rpc__dispatcher__thread_8c_1afb82d52b463ced09d03ad467d1c05dd4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1afb82d52b463ced09d03ad467d1c05dd4" kindref="member">nfs_Init_request_data</ref>(nfs_request_data_t<sp/>*<sp/>pdata)</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>pdata-&gt;ipproto<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>SVCXPRT<sp/>for<sp/>the<sp/>tcp<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>choice<sp/>of<sp/>the<sp/>fd<sp/>to<sp/>be<sp/>used<sp/>here<sp/>doesn&apos;t<sp/>really<sp/>matter,<sp/>this<sp/>fd<sp/>will<sp/>be<sp/>overwrittem<sp/>later<sp/></highlight></codeline>
<codeline lineno="2089"><highlight class="comment"><sp/><sp/><sp/>*<sp/>when<sp/>processing<sp/>the<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>pdata-&gt;tcp_xprt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="2093"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;nfs_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2097"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;nfs_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_nfs_udp,</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2101"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="2107"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;mnt_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2111"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;mnt_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_mnt_udp,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2115"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_NLM</highlight></codeline>
<codeline lineno="2121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="2122"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;nlm_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;nlm_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_nlm_udp,</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_NLM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_QUOTA</highlight></codeline>
<codeline lineno="2137"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>_USE_TIRPC</highlight></codeline>
<codeline lineno="2138"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;rquota_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Svc__dg__tirpc_8c_1a64cfc2c04faf5ad9f4ae5b74a812ae49" kindref="member">Svc_dg_create</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2142"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pdata-&gt;rquota_udp_xprt<sp/>=</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a61eb15c86f701c6dd34ef0f612a589ad" kindref="member">Svcudp_bufcreate</ref>(nfs_param.worker_param.nfs_svc_data.socket_rquota_udp,</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NFS_SEND_BUFFER_SIZE,<sp/>NFS_RECV_BUFFER_SIZE))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_TIRPC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogError(COMPONENT_DISPATCH,<sp/>ERR_RPC,<sp/>ERR_SVCUDP_CREATE,<sp/>0);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_USE_QUOTA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>pdata-&gt;xprt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_request_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169" refid="nfs__rpc__dispatcher__thread_8c_1afffa743dbd2aef77cdc7d24ec263005f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1afffa743dbd2aef77cdc7d24ec263005f" kindref="member">constructor_nfs_request_data_t</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="nfs__rpc__dispatcher__thread_8c_1afb82d52b463ced09d03ad467d1c05dd4" kindref="member">nfs_Init_request_data</ref>(ptr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LogCrit(COMPONENT_DISPATCH,<sp/></highlight><highlight class="stringliteral">&quot;NFS<sp/>INIT:<sp/>Error<sp/>initializing<sp/>request<sp/>data<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190" refid="nfs__rpc__dispatcher__thread_8c_1a47e8bde054e96db98693ae1d2d74cd43" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nfs__rpc__dispatcher__thread_8c_1a47e8bde054e96db98693ae1d2d74cd43" kindref="member">nfs_Init_gc_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>pthread_mutexattr_t<sp/>mutexattr;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_mutexattr_init(&amp;mutexattr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_mutex_init(&amp;lock_nb_current_gc_workers,<sp/>&amp;mutexattr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/>nb_current_gc_workers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nfs_Init_gc_counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/MainNFSD/nfs_rpc_dispatcher_thread.c"/>
  </compounddef>
</doxygen>
