.TH "fsal_internal.c" 3 "15 Sep 2010" "Version 0.2" "File System Abstraction Layer (HPSS) library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fsal_internal.c \- 
.PP
Defines the datas that are to be accessed as extern by the fsal modules.  

.SH SYNOPSIS
.br
.PP
\fC#include 'fsal.h'\fP
.br
\fC#include 'fsal_internal.h'\fP
.br
\fC#include 'stuff_alloc.h'\fP
.br
\fC#include 'SemN.h'\fP
.br
\fC#include <pthread.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBFSAL_INTERNAL_C\fP"
.br
.ti -1c
.RI "#define \fBSET_INTEGER_PARAM\fP(cfg, p_init_info, _field)"
.br
.ti -1c
.RI "#define \fBSET_BITMAP_PARAM\fP(cfg, p_init_info, _field)"
.br
.ti -1c
.RI "#define \fBSET_BOOLEAN_PARAM\fP(cfg, p_init_info, _field)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfsal_increment_nbcall\fP (int function_index, fsal_status_t status)"
.br
.ti -1c
.RI "void \fBfsal_internal_getstats\fP (fsal_statistics_t *output_stats)"
.br
.ti -1c
.RI "void \fBfsal_internal_SetCredentialLifetime\fP (fsal_uint_t lifetime_in)"
.br
.ti -1c
.RI "void \fBfsal_internal_SetReturnInconsistentDirent\fP (fsal_uint_t bool_in)"
.br
.ti -1c
.RI "void \fBTakeTokenFSCall\fP ()"
.br
.ti -1c
.RI "void \fBReleaseTokenFSCall\fP ()"
.br
.ti -1c
.RI "fsal_status_t \fBfsal_internal_init_global\fP (fsal_init_info_t *fsal_info, fs_common_initinfo_t *fs_common_info)"
.br
.ti -1c
.RI "fsal_boolean_t \fBfsal_do_log\fP (fsal_status_t status)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "fsal_uint_t \fBCredentialLifetime\fP = 3600"
.br
.ti -1c
.RI "fsal_uint_t \fBReturnInconsistentDirent\fP = FALSE"
.br
.ti -1c
.RI "fsal_staticfsinfo_t \fBglobal_fs_info\fP"
.br
.ti -1c
.RI "semaphore_t \fBsem_fs_calls\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines the datas that are to be accessed as extern by the fsal modules. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/02/08 12:46:59 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.25 
.RE
.PP

.PP
Definition in file \fBfsal_internal.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define SET_BITMAP_PARAM(cfg, p_init_info, _field)"\fBValue:\fP
.PP
.nf
switch( (p_init_info)->behaviors._field ){                    \
    case FSAL_INIT_FORCE_VALUE :                                  \
        /* force the value in any case */                         \
        cfg._field = (p_init_info)->values._field;                \
        break;                                                    \
    case FSAL_INIT_MAX_LIMIT :                                    \
      /* proceed a bit AND */                                     \
      cfg._field &= (p_init_info)->values._field ;                \
      break;                                                      \
    case FSAL_INIT_MIN_LIMIT :                                    \
      /* proceed a bit OR */                                      \
      cfg._field |= (p_init_info)->values._field ;                \
      break;                                                      \
    /* In the other cases, we keep the default value. */          \
    }
.fi
.PP
Definition at line 293 of file fsal_internal.c.
.SS "#define SET_BOOLEAN_PARAM(cfg, p_init_info, _field)"\fBValue:\fP
.PP
.nf
switch( (p_init_info)->behaviors._field ){                    \
    case FSAL_INIT_FORCE_VALUE :                                  \
        /* force the value in any case */                         \
        cfg._field = (p_init_info)->values._field;                \
        break;                                                    \
    case FSAL_INIT_MAX_LIMIT :                                    \
      /* proceed a boolean AND */                                 \
      cfg._field = cfg._field && (p_init_info)->values._field ;   \
      break;                                                      \
    case FSAL_INIT_MIN_LIMIT :                                    \
      /* proceed a boolean OR */                                  \
      cfg._field = cfg._field && (p_init_info)->values._field ;   \
      break;                                                      \
    /* In the other cases, we keep the default value. */          \
    }
.fi
.PP
Definition at line 310 of file fsal_internal.c.
.SS "#define SET_INTEGER_PARAM(cfg, p_init_info, _field)"\fBValue:\fP
.PP
.nf
switch( (p_init_info)->behaviors._field ){                    \
    case FSAL_INIT_FORCE_VALUE :                                  \
      /* force the value in any case */                           \
      cfg._field = (p_init_info)->values._field;                  \
      break;                                                      \
    case FSAL_INIT_MAX_LIMIT :                                    \
      /* check the higher limit */                                \
      if ( cfg._field > (p_init_info)->values._field )            \
        cfg._field = (p_init_info)->values._field ;               \
      break;                                                      \
    case FSAL_INIT_MIN_LIMIT :                                    \
      /* check the lower limit */                                 \
      if ( cfg._field < (p_init_info)->values._field )            \
        cfg._field = (p_init_info)->values._field ;               \
      break;                                                      \
    /* In the other cases, we keep the default value. */          \
    }
.fi
.PP
Definition at line 274 of file fsal_internal.c.
.SH "Function Documentation"
.PP 
.SS "fsal_boolean_t fsal_do_log (fsal_status_t status)"fsal_do_log: Indicates if an FSAL error has to be traced into its log file in the NIV_EVENT level. (in the other cases, return codes are only logged in the NIV_FULL_DEBUG logging lovel).
.PP
\fBParameters:\fP
.RS 4
\fIstatus(input),:\fP The fsal status that is to be tested.
.RE
.PP
\fBReturns:\fP
.RS 4
- TRUE if the error is to be traced.
.IP "\(bu" 2
FALSE if the error must not be traced except in NIV_FULL_DEBUG level. 
.PP
.RE
.PP

.PP
Definition at line 459 of file fsal_internal.c.
.SS "void fsal_increment_nbcall (int function_index, fsal_status_t status)"fsal_increment_nbcall: Updates fonction call statistics.
.PP
\fBParameters:\fP
.RS 4
\fIfunction_index\fP (input): Index of the function whom number of call is to be incremented. 
.br
\fIstatus\fP (input): Status the function returned.
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 98 of file fsal_internal.c.
.PP
References fsal_is_retryable().
.SS "void fsal_internal_getstats (fsal_statistics_t * output_stats)"fsal_internal_getstats: (For internal use in the FSAL). Retrieve call statistics for current thread.
.PP
\fBParameters:\fP
.RS 4
\fIoutput_stats\fP (output): Pointer to the call statistics structure.
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 175 of file fsal_internal.c.
.PP
Referenced by HPSSFSAL_get_stats().
.SS "void fsal_internal_SetCredentialLifetime (fsal_uint_t lifetime_in)"Set credential lifetime. (For internal use in the FSAL). Set the period for thread's credential renewal.
.PP
\fBParameters:\fP
.RS 4
\fIlifetime_in\fP (input): The period for thread's credential renewal.
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 230 of file fsal_internal.c.
.PP
Referenced by HPSSFSAL_Init().
.SS "void fsal_internal_SetReturnInconsistentDirent (fsal_uint_t bool_in)"Set behavior when detecting a MD inconsistency in readdir. (For internal use in the FSAL).
.PP
\fBParameters:\fP
.RS 4
\fIlifetime_in\fP (input): The period for thread's credential renewal.
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing. 
.RE
.PP

.PP
Definition at line 244 of file fsal_internal.c.
.PP
Referenced by HPSSFSAL_Init().
.SS "void TakeTokenFSCall ()"Used to limit the number of simultaneous calls to Filesystem. 
.PP
Definition at line 252 of file fsal_internal.c.
.PP
Referenced by HPSSFSAL_access(), HPSSFSAL_close(), HPSSFSAL_create(), HPSSFSAL_dynamic_fsinfo(), HPSSFSAL_getattrs(), HPSSFSAL_GetXAttrIdByName(), HPSSFSAL_GetXAttrValueById(), HPSSFSAL_link(), HPSSFSAL_ListXAttrs(), HPSSFSAL_lookup(), HPSSFSAL_lookupJunction(), HPSSFSAL_mkdir(), HPSSFSAL_open(), HPSSFSAL_read(), HPSSFSAL_readdir(), HPSSFSAL_readlink(), HPSSFSAL_rename(), HPSSFSAL_setattrs(), HPSSFSAL_symlink(), HPSSFSAL_truncate(), HPSSFSAL_unlink(), and HPSSFSAL_write().
.SH "Author"
.PP 
Generated automatically by Doxygen for File System Abstraction Layer (HPSS) library from the source code.
