.TH "fsal_lookup.c" 3 "31 Mar 2009" "Version 0.2" "File System Abstraction Layer (HPSS) library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fsal_lookup.c \- Lookup operations.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include 'fsal.h'\fP
.br
\fC#include 'fsal_internal.h'\fP
.br
\fC#include 'fsal_convert.h'\fP
.br
\fC#include 'fsal_common.h'\fP
.br
\fC#include 'HPSSclapiExt/hpssclapiext.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "fsal_status_t \fBFSAL_lookup\fP (fsal_handle_t *parent_directory_handle, fsal_name_t *p_filename, fsal_op_context_t *p_context, fsal_handle_t *object_handle, fsal_attrib_list_t *object_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBFSAL_lookupJunction\fP (fsal_handle_t *p_junction_handle, fsal_op_context_t *p_context, fsal_handle_t *p_fsoot_handle, fsal_attrib_list_t *p_fsroot_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBFSAL_lookupPath\fP (fsal_path_t *p_path, fsal_op_context_t *p_context, fsal_handle_t *object_handle, fsal_attrib_list_t *object_attributes)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Lookup operations. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/02/08 12:46:59 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.18 
.RE
.PP

.PP
Definition in file \fBfsal_lookup.c\fP.
.SH "Function Documentation"
.PP 
.SS "fsal_status_t FSAL_lookup (fsal_handle_t * parent_directory_handle, fsal_name_t * p_filename, fsal_op_context_t * p_context, fsal_handle_t * object_handle, fsal_attrib_list_t * object_attributes)"
.PP
FSAL_lookup : Looks up for an object into a directory.
.PP
Note : if parent handle and filename are NULL, this retrieves root's handle.
.PP
\fBParameters:\fP
.RS 4
\fIparent_directory_handle\fP (input) Handle of the parent directory to search the object in. 
.br
\fIfilename\fP (input) The name of the object to find. 
.br
\fIp_context\fP (input) Authentication context for the operation (user,...). 
.br
\fIobject_handle\fP (output) The handle of the object corresponding to filename. 
.br
\fIobject_attributes\fP (optional input/output) Pointer to the attributes of the object we found. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances).
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_STALE (parent_directory_handle does not address an existing object)
.IP "\(bu" 2
ERR_FSAL_NOTDIR (parent_directory_handle does not address a directory)
.IP "\(bu" 2
ERR_FSAL_NOENT (the object designated by p_filename does not exist)
.IP "\(bu" 2
ERR_FSAL_XDEV (tried to operate a lookup on a filesystem junction. Use FSAL_lookupJunction instead)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_IO, ... 
.PP
.RE
.PP

.PP
/!\\ WARNING : When the directory handle is stale, HPSS returns ENOTDIR. Thus, in this case, we must double check by checking the directory handle. 
.PP
Definition at line 59 of file fsal_lookup.c.
.PP
References FSAL_getattrs(), hpss2fsal_attributes(), hpss2fsal_error(), hpss2fsal_type(), and TakeTokenFSCall().
.PP
Referenced by FSAL_lookupPath(), FSAL_open_by_name(), and FSAL_unlink().
.SS "fsal_status_t FSAL_lookupJunction (fsal_handle_t * p_junction_handle, fsal_op_context_t * p_context, fsal_handle_t * p_fsoot_handle, fsal_attrib_list_t * p_fsroot_attributes)"
.PP
FSAL_lookupJunction : Get the fileset root for a junction.
.PP
\fBParameters:\fP
.RS 4
\fIp_junction_handle\fP (input) Handle of the junction to be looked up. 
.br
\fIcred\fP (input) Authentication context for the operation (user,...). 
.br
\fIp_fsroot_handle\fP (output) The handle of root directory of the fileset. 
.br
\fIp_fsroot_attributes\fP (optional input/output) Pointer to the attributes of the root directory for the fileset. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances).
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_STALE (p_junction_handle does not address an existing object)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_IO, ... 
.PP
.RE
.PP

.PP
Definition at line 233 of file fsal_lookup.c.
.PP
References hpss2fsal_attributes(), hpss2fsal_error(), hpss2fsal_type(), and TakeTokenFSCall().
.PP
Referenced by FSAL_lookupPath().
.SS "fsal_status_t FSAL_lookupPath (fsal_path_t * p_path, fsal_op_context_t * p_context, fsal_handle_t * object_handle, fsal_attrib_list_t * object_attributes)"
.PP
FSAL_lookupPath : Looks up for an object into the namespace.
.PP
Note : if path equals '/', this retrieves root's handle.
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP (input) The path of the object to find. 
.br
\fIp_context\fP (input) Authentication context for the operation (user,...). 
.br
\fIobject_handle\fP (output) The handle of the object corresponding to filename. 
.br
\fIobject_attributes\fP (optional input/output) Pointer to the attributes of the object we found. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances).
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
ERR_FSAL_INVAL (the path argument is not absolute)
.IP "\(bu" 2
ERR_FSAL_NOENT (an element in the path does not exist)
.IP "\(bu" 2
ERR_FSAL_NOTDIR (an element in the path is not a directory)
.IP "\(bu" 2
ERR_FSAL_XDEV (tried to cross a filesystem junction, whereas is has not been authorized in the server configuration - FSAL::auth_xdev_export parameter)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_IO, ... 
.PP
.RE
.PP

.PP
\fBTodo\fP
.RS 4
: Be carefull about junction crossing, symlinks, hardlinks,... 
.RE
.PP

.PP
Definition at line 334 of file fsal_lookup.c.
.PP
References FSAL_lookup(), and FSAL_lookupJunction().
.SH "Author"
.PP 
Generated automatically by Doxygen for File System Abstraction Layer (HPSS) library from the source code.
