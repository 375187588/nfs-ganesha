.TH "fsal_create.c" 3 "15 Sep 2010" "Version 0.2" "File System Abstraction Layer (HPSS) library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fsal_create.c \- 
.PP
Filesystem objects creation functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'fsal.h'\fP
.br
\fC#include 'fsal_internal.h'\fP
.br
\fC#include 'fsal_convert.h'\fP
.br
\fC#include 'fsal_common.h'\fP
.br
\fC#include 'HPSSclapiExt/hpssclapiext.h'\fP
.br
\fC#include <hpss_errno.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "fsal_status_t \fBHPSSFSAL_create\fP (hpssfsal_handle_t *parent_directory_handle, fsal_name_t *p_filename, hpssfsal_op_context_t *p_context, fsal_accessmode_t accessmode, hpssfsal_handle_t *object_handle, fsal_attrib_list_t *object_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBHPSSFSAL_mkdir\fP (hpssfsal_handle_t *parent_directory_handle, fsal_name_t *p_dirname, hpssfsal_op_context_t *p_context, fsal_accessmode_t accessmode, hpssfsal_handle_t *object_handle, fsal_attrib_list_t *object_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBHPSSFSAL_link\fP (hpssfsal_handle_t *target_handle, hpssfsal_handle_t *dir_handle, fsal_name_t *p_link_name, hpssfsal_op_context_t *p_context, fsal_attrib_list_t *attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBHPSSFSAL_mknode\fP (hpssfsal_handle_t *parentdir_handle, fsal_name_t *p_node_name, hpssfsal_op_context_t *p_context, fsal_accessmode_t accessmode, fsal_nodetype_t nodetype, fsal_dev_t *dev, hpssfsal_handle_t *p_object_handle, fsal_attrib_list_t *node_attributes)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Filesystem objects creation functions. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/01/24 13:45:36 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.18 
.RE
.PP

.PP
Definition in file \fBfsal_create.c\fP.
.SH "Function Documentation"
.PP 
.SS "fsal_status_t HPSSFSAL_create (hpssfsal_handle_t * parent_directory_handle, fsal_name_t * p_filename, hpssfsal_op_context_t * p_context, fsal_accessmode_t accessmode, hpssfsal_handle_t * object_handle, fsal_attrib_list_t * object_attributes)"FSAL_create: Create a regular file.
.PP
\fBParameters:\fP
.RS 4
\fIparent_directory_handle\fP (input): Handle of the parent directory where the file is to be created. 
.br
\fIp_filename\fP (input): Pointer to the name of the file to be created. 
.br
\fIcred\fP (input): Authentication context for the operation (user, export...). 
.br
\fIaccessmode\fP (input): Mode for the file to be created. (the umask defined into the FSAL configuration file will be applied on it). 
.br
\fIobject_handle\fP (output): Pointer to the handle of the created file. 
.br
\fIobject_attributes\fP (optionnal input/output): The postop attributes of the created file. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). Can be NULL.
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_STALE (parent_directory_handle does not address an existing object)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_EXIST, ERR_FSAL_IO, ...
.PP
.RE
.PP
NB: if getting postop attributes failed, the function does not return an error but the FSAL_ATTR_RDATTR_ERR bit is set in the object_attributes->asked_attributes field. 
.PP
Definition at line 62 of file fsal_create.c.
.PP
References hpss2fsal_attributes(), hpss2fsal_error(), and TakeTokenFSCall().
.SS "fsal_status_t HPSSFSAL_link (hpssfsal_handle_t * target_handle, hpssfsal_handle_t * dir_handle, fsal_name_t * p_link_name, hpssfsal_op_context_t * p_context, fsal_attrib_list_t * attributes)"FSAL_link: Create a hardlink.
.PP
\fBParameters:\fP
.RS 4
\fItarget_handle\fP (input): Handle of the target object. 
.br
\fIdir_handle\fP (input): Pointer to the directory handle where the hardlink is to be created. 
.br
\fIp_link_name\fP (input): Pointer to the name of the hardlink to be created. 
.br
\fIcred\fP (input): Authentication context for the operation (user,...). 
.br
\fIaccessmode\fP (input): Mode for the directory to be created. (the umask defined into the FSAL configuration file will be applied on it). 
.br
\fIattributes\fP (optionnal input/output): The post_operation attributes of the linked object. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). May be NULL.
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_STALE (target_handle or dir_handle does not address an existing object)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_EXIST, ERR_FSAL_IO, ...
.PP
.RE
.PP
NB: if getting postop attributes failed, the function does not return an error but the FSAL_ATTR_RDATTR_ERR bit is set in the attributes->asked_attributes field. 
.PP
Definition at line 333 of file fsal_create.c.
.PP
References hpss2fsal_error(), HPSSFSAL_getattrs(), and TakeTokenFSCall().
.SS "fsal_status_t HPSSFSAL_mkdir (hpssfsal_handle_t * parent_directory_handle, fsal_name_t * p_dirname, hpssfsal_op_context_t * p_context, fsal_accessmode_t accessmode, hpssfsal_handle_t * object_handle, fsal_attrib_list_t * object_attributes)"FSAL_mkdir: Create a directory.
.PP
\fBParameters:\fP
.RS 4
\fIparent_directory_handle\fP (input): Handle of the parent directory where the subdirectory is to be created. 
.br
\fIp_dirname\fP (input): Pointer to the name of the directory to be created. 
.br
\fIcred\fP (input): Authentication context for the operation (user,...). 
.br
\fIaccessmode\fP (input): Mode for the directory to be created. (the umask defined into the FSAL configuration file will be applied on it). 
.br
\fIobject_handle\fP (output): Pointer to the handle of the created directory. 
.br
\fIobject_attributes\fP (optionnal input/output): The attributes of the created directory. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). May be NULL.
.RE
.PP
\fBReturns:\fP
.RS 4
Major error codes :
.IP "\(bu" 2
ERR_FSAL_NO_ERROR (no error)
.IP "\(bu" 2
ERR_FSAL_STALE (parent_directory_handle does not address an existing object)
.IP "\(bu" 2
ERR_FSAL_FAULT (a NULL pointer was passed as mandatory argument)
.IP "\(bu" 2
Other error codes can be returned : ERR_FSAL_ACCESS, ERR_FSAL_EXIST, ERR_FSAL_IO, ...
.PP
.RE
.PP
NB: if getting postop attributes failed, the function does not return an error but the FSAL_ATTR_RDATTR_ERR bit is set in the object_attributes->asked_attributes field. 
.PP
Definition at line 216 of file fsal_create.c.
.PP
References hpss2fsal_attributes(), hpss2fsal_error(), and TakeTokenFSCall().
.SS "fsal_status_t HPSSFSAL_mknode (hpssfsal_handle_t * parentdir_handle, fsal_name_t * p_node_name, hpssfsal_op_context_t * p_context, fsal_accessmode_t accessmode, fsal_nodetype_t nodetype, fsal_dev_t * dev, hpssfsal_handle_t * p_object_handle, fsal_attrib_list_t * node_attributes)"FSAL_mknode: Create a special object in the filesystem. Not supported upon HPSS.
.PP
\fBReturns:\fP
.RS 4
ERR_FSAL_NOTSUPP. 
.RE
.PP

.PP
Definition at line 416 of file fsal_create.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for File System Abstraction Layer (HPSS) library from the source code.
