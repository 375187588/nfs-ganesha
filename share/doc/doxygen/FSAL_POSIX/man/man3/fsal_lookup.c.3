.TH "fsal_lookup.c" 3 "31 Mar 2009" "Version 0.1" "File System Abstraction Layer (POSIX) library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fsal_lookup.c \- Lookup operations.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <string.h>\fP
.br
\fC#include 'fsal.h'\fP
.br
\fC#include 'fsal_internal.h'\fP
.br
\fC#include 'fsal_convert.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "fsal_status_t \fBFSAL_lookup\fP (fsal_handle_t *p_parent_directory_handle, fsal_name_t *p_filename, fsal_op_context_t *p_context, fsal_handle_t *p_object_handle, fsal_attrib_list_t *p_object_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBFSAL_lookupPath\fP (fsal_path_t *p_path, fsal_op_context_t *p_context, fsal_handle_t *object_handle, fsal_attrib_list_t *object_attributes)"
.br
.ti -1c
.RI "fsal_status_t \fBFSAL_lookupJunction\fP (fsal_handle_t *p_junction_handle, fsal_op_context_t *p_context, fsal_handle_t *p_fsoot_handle, fsal_attrib_list_t *p_fsroot_attributes)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Lookup operations. 

\fBAuthor:\fP
.RS 4
.RE
.PP
\fBAuthor\fP.RS 4
leibovic 
.RE
.PP
\fBDate:\fP
.RS 4
.RE
.PP
\fBDate\fP.RS 4
2006/01/24 13:45:37 
.RE
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision\fP.RS 4
1.17 
.RE
.PP

.PP
Definition in file \fBfsal_lookup.c\fP.
.SH "Function Documentation"
.PP 
.SS "fsal_status_t FSAL_lookup (fsal_handle_t * p_parent_directory_handle, fsal_name_t * p_filename, fsal_op_context_t * p_context, fsal_handle_t * p_object_handle, fsal_attrib_list_t * p_object_attributes)"
.PP
FSAL_lookup : Looks up for an object into a directory.
.PP
Note : if parent handle and filename are NULL, this retrieves root's handle.
.PP
\fBParameters:\fP
.RS 4
\fIparent_directory_handle\fP (input) Handle of the parent directory to search the object in. 
.br
\fIfilename\fP (input) The name of the object to find. 
.br
\fIp_context\fP (input) Authentication context for the operation (user,...). 
.br
\fIobject_handle\fP (output) The handle of the object corresponding to filename. 
.br
\fIobject_attributes\fP (optional input/output) Pointer to the attributes of the object we found. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances).
.RE
.PP
\fBReturns:\fP
.RS 4
- ERR_FSAL_NO_ERROR, if no error.
.IP "\(bu" 2
Another error code else. 
.PP
.RE
.PP

.PP
Definition at line 50 of file fsal_lookup.c.
.PP
References fsal_internal_appendFSALNameToFSALPath(), fsal_internal_getInfoFromName(), fsal_internal_getPathFromHandle(), fsal_internal_posix2posixdb_fileinfo(), FSAL_namecmp(), posix2fsal_error(), posix2fsal_type(), and TakeTokenFSCall().
.PP
Referenced by FSAL_lookupPath(), and FSAL_open_by_name().
.SS "fsal_status_t FSAL_lookupJunction (fsal_handle_t * p_junction_handle, fsal_op_context_t * p_context, fsal_handle_t * p_fsoot_handle, fsal_attrib_list_t * p_fsroot_attributes)"
.PP
FSAL_lookupJunction : Get the fileset root for a junction.
.PP
\fBParameters:\fP
.RS 4
\fIp_junction_handle\fP (input) Handle of the junction to be looked up. 
.br
\fIp_context\fP (input) Authentication context for the operation (user,...). 
.br
\fIp_fsroot_handle\fP (output) The handle of root directory of the fileset. 
.br
\fIp_fsroot_attributes\fP (optional input/output) Pointer to the attributes of the root directory for the fileset. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances).
.RE
.PP
\fBReturns:\fP
.RS 4
- ERR_FSAL_NO_ERROR, if no error.
.IP "\(bu" 2
Another error code else. 
.PP
.RE
.PP

.PP
Definition at line 343 of file fsal_lookup.c.
.SS "fsal_status_t FSAL_lookupPath (fsal_path_t * p_path, fsal_op_context_t * p_context, fsal_handle_t * object_handle, fsal_attrib_list_t * object_attributes)"
.PP
FSAL_lookupPath : Looks up for an object into the namespace.
.PP
Note : if path equals '/', this retrieves root's handle.
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP (input) The path of the object to find. 
.br
\fIp_context\fP (input) Authentication context for the operation (user,...). 
.br
\fIobject_handle\fP (output) The handle of the object corresponding to filename. 
.br
\fIobject_attributes\fP (optional input/output) Pointer to the attributes of the object we found. As input, it defines the attributes that the caller wants to retrieve (by positioning flags into this structure) and the output is built considering this input (it fills the structure according to the flags it contains). It can be NULL (increases performances). 
.RE
.PP

.PP
\fBTodo\fP
.RS 4
: Be carefull about junction crossing, symlinks, hardlinks,... 
.RE
.PP

.PP
Definition at line 210 of file fsal_lookup.c.
.PP
References FSAL_lookup().
.PP
Referenced by fsal_internal_getPathFromHandle().
.SH "Author"
.PP 
Generated automatically by Doxygen for File System Abstraction Layer (POSIX) library from the source code.
