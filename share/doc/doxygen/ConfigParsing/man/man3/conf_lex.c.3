.TH "conf_lex.c" 3 "15 Sep 2010" "Version 0.1" "ConfigParsing" \" -*- nroff -*-
.ad l
.nh
.SH NAME
conf_lex.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include 'config.h'\fP
.br
\fC#include 'analyse.h'\fP
.br
\fC#include 'conf_yacc.h'\fP
.br
\fC#include <libgen.h>\fP
.br
\fC#include <unistd.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fByy_buffer_state\fP"
.br
.ti -1c
.RI "struct \fByy_trans_info\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBYY_INT_ALIGNED\fP   short int"
.br
.ti -1c
.RI "#define \fByy_create_buffer\fP   ganesha_yy_create_buffer"
.br
.ti -1c
.RI "#define \fByy_delete_buffer\fP   ganesha_yy_delete_buffer"
.br
.ti -1c
.RI "#define \fByy_flex_debug\fP   \fBganesha_yy_flex_debug\fP"
.br
.ti -1c
.RI "#define \fByy_init_buffer\fP   ganesha_yy_init_buffer"
.br
.ti -1c
.RI "#define \fByy_flush_buffer\fP   ganesha_yy_flush_buffer"
.br
.ti -1c
.RI "#define \fByy_load_buffer_state\fP   ganesha_yy_load_buffer_state"
.br
.ti -1c
.RI "#define \fByy_switch_to_buffer\fP   ganesha_yy_switch_to_buffer"
.br
.ti -1c
.RI "#define \fByyin\fP   \fBganesha_yyin\fP"
.br
.ti -1c
.RI "#define \fByyleng\fP   \fBganesha_yyleng\fP"
.br
.ti -1c
.RI "#define \fByylex\fP   ganesha_yylex"
.br
.ti -1c
.RI "#define \fByylineno\fP   \fBganesha_yylineno\fP"
.br
.ti -1c
.RI "#define \fByyout\fP   \fBganesha_yyout\fP"
.br
.ti -1c
.RI "#define \fByyrestart\fP   ganesha_yyrestart"
.br
.ti -1c
.RI "#define \fByytext\fP   \fBganesha_yytext\fP"
.br
.ti -1c
.RI "#define \fByywrap\fP   ganesha_yywrap"
.br
.ti -1c
.RI "#define \fByyalloc\fP   ganesha_yyalloc"
.br
.ti -1c
.RI "#define \fByyrealloc\fP   ganesha_yyrealloc"
.br
.ti -1c
.RI "#define \fByyfree\fP   ganesha_yyfree"
.br
.ti -1c
.RI "#define \fBFLEX_SCANNER\fP"
.br
.ti -1c
.RI "#define \fBYY_FLEX_MAJOR_VERSION\fP   2"
.br
.ti -1c
.RI "#define \fBYY_FLEX_MINOR_VERSION\fP   5"
.br
.ti -1c
.RI "#define \fBYY_FLEX_SUBMINOR_VERSION\fP   35"
.br
.ti -1c
.RI "#define \fBFLEX_BETA\fP"
.br
.ti -1c
.RI "#define \fBINT8_MIN\fP   (-128)"
.br
.ti -1c
.RI "#define \fBINT16_MIN\fP   (-32767-1)"
.br
.ti -1c
.RI "#define \fBINT32_MIN\fP   (-2147483647-1)"
.br
.ti -1c
.RI "#define \fBINT8_MAX\fP   (127)"
.br
.ti -1c
.RI "#define \fBINT16_MAX\fP   (32767)"
.br
.ti -1c
.RI "#define \fBINT32_MAX\fP   (2147483647)"
.br
.ti -1c
.RI "#define \fBUINT8_MAX\fP   (255U)"
.br
.ti -1c
.RI "#define \fBUINT16_MAX\fP   (65535U)"
.br
.ti -1c
.RI "#define \fBUINT32_MAX\fP   (4294967295U)"
.br
.ti -1c
.RI "#define \fByyconst\fP"
.br
.ti -1c
.RI "#define \fBYY_NULL\fP   0"
.br
.ti -1c
.RI "#define \fBYY_SC_TO_UI\fP(c)   ((unsigned int) (unsigned char) c)"
.br
.ti -1c
.RI "#define \fBBEGIN\fP   (yy_start) = 1 + 2 *"
.br
.ti -1c
.RI "#define \fBYY_START\fP   (((yy_start) - 1) / 2)"
.br
.ti -1c
.RI "#define \fBYYSTATE\fP   YY_START"
.br
.ti -1c
.RI "#define \fBYY_STATE_EOF\fP(state)   (YY_END_OF_BUFFER + state + 1)"
.br
.ti -1c
.RI "#define \fBYY_NEW_FILE\fP   ganesha_yyrestart(\fBganesha_yyin\fP  )"
.br
.ti -1c
.RI "#define \fBYY_END_OF_BUFFER_CHAR\fP   0"
.br
.ti -1c
.RI "#define \fBYY_BUF_SIZE\fP   16384"
.br
.ti -1c
.RI "#define \fBYY_STATE_BUF_SIZE\fP   ((YY_BUF_SIZE + 2) * sizeof(\fByy_state_type\fP))"
.br
.ti -1c
.RI "#define \fBEOB_ACT_CONTINUE_SCAN\fP   0"
.br
.ti -1c
.RI "#define \fBEOB_ACT_END_OF_FILE\fP   1"
.br
.ti -1c
.RI "#define \fBEOB_ACT_LAST_MATCH\fP   2"
.br
.ti -1c
.RI "#define \fBYY_LESS_LINENO\fP(n)"
.br
.ti -1c
.RI "#define \fByyless\fP(n)"
.br
.ti -1c
.RI "#define \fBunput\fP(c)   yyunput( c, (yytext_ptr)  )"
.br
.ti -1c
.RI "#define \fBYY_BUFFER_NEW\fP   0"
.br
.ti -1c
.RI "#define \fBYY_BUFFER_NORMAL\fP   1"
.br
.ti -1c
.RI "#define \fBYY_BUFFER_EOF_PENDING\fP   2"
.br
.ti -1c
.RI "#define \fBYY_CURRENT_BUFFER\fP"
.br
.ti -1c
.RI "#define \fBYY_CURRENT_BUFFER_LVALUE\fP   (yy_buffer_stack)[(yy_buffer_stack_top)]"
.br
.ti -1c
.RI "#define \fBYY_FLUSH_BUFFER\fP   ganesha_yy_flush_buffer(YY_CURRENT_BUFFER )"
.br
.ti -1c
.RI "#define \fByy_new_buffer\fP   ganesha_yy_create_buffer"
.br
.ti -1c
.RI "#define \fByy_set_interactive\fP(is_interactive)"
.br
.ti -1c
.RI "#define \fByy_set_bol\fP(at_bol)"
.br
.ti -1c
.RI "#define \fBYY_AT_BOL\fP()   (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)"
.br
.ti -1c
.RI "#define \fByytext_ptr\fP   \fBganesha_yytext\fP"
.br
.ti -1c
.RI "#define \fBYY_DO_BEFORE_ACTION\fP"
.br
.ti -1c
.RI "#define \fBYY_NUM_RULES\fP   32"
.br
.ti -1c
.RI "#define \fBYY_END_OF_BUFFER\fP   33"
.br
.ti -1c
.RI "#define \fBREJECT\fP   reject_used_but_not_detected"
.br
.ti -1c
.RI "#define \fByymore\fP()   yymore_used_but_not_detected"
.br
.ti -1c
.RI "#define \fBYY_MORE_ADJ\fP   0"
.br
.ti -1c
.RI "#define \fBYY_RESTORE_YY_MORE_OFFSET\fP"
.br
.ti -1c
.RI "#define \fBERRLEN\fP   1024"
.br
.ti -1c
.RI "#define \fBFILE_LEN\fP   1024"
.br
.ti -1c
.RI "#define \fBMAX_INCLUDE_DEPTH\fP   10"
.br
.ti -1c
.RI "#define \fBYY_USER_INIT\fP"
.br
.ti -1c
.RI "#define \fBDEBUG_LEX\fP"
.br
.ti -1c
.RI "#define \fBINITIAL\fP   0"
.br
.ti -1c
.RI "#define \fBYY_INIT\fP   1"
.br
.ti -1c
.RI "#define \fBBLOC\fP   2"
.br
.ti -1c
.RI "#define \fBINBLOC\fP   3"
.br
.ti -1c
.RI "#define \fBAFFECT_OR_SUB_BLOCK\fP   4"
.br
.ti -1c
.RI "#define \fBVALUE\fP   5"
.br
.ti -1c
.RI "#define \fBENDVALUE\fP   6"
.br
.ti -1c
.RI "#define \fBSTRING1\fP   7"
.br
.ti -1c
.RI "#define \fBSTRING2\fP   8"
.br
.ti -1c
.RI "#define \fBESC1\fP   9"
.br
.ti -1c
.RI "#define \fBINCLUDE\fP   10"
.br
.ti -1c
.RI "#define \fBINCL_STRING\fP   11"
.br
.ti -1c
.RI "#define \fBINCL_ESC\fP   12"
.br
.ti -1c
.RI "#define \fBYY_EXTRA_TYPE\fP   void *"
.br
.ti -1c
.RI "#define \fBYY_READ_BUF_SIZE\fP   8192"
.br
.ti -1c
.RI "#define \fBECHO\fP   do { if (fwrite( \fBganesha_yytext\fP, \fBganesha_yyleng\fP, 1, \fBganesha_yyout\fP )) {} } while (0)"
.br
.ti -1c
.RI "#define \fBYY_INPUT\fP(buf, result, max_size)"
.br
.ti -1c
.RI "#define \fByyterminate\fP()   return YY_NULL"
.br
.ti -1c
.RI "#define \fBYY_START_STACK_INCR\fP   25"
.br
.ti -1c
.RI "#define \fBYY_FATAL_ERROR\fP(msg)   yy_fatal_error( msg )"
.br
.ti -1c
.RI "#define \fBYY_DECL_IS_OURS\fP   1"
.br
.ti -1c
.RI "#define \fBYY_DECL\fP   int ganesha_yylex (void)"
.br
.ti -1c
.RI "#define \fBYY_BREAK\fP   break;"
.br
.ti -1c
.RI "#define \fBYY_RULE_SETUP\fP   YY_USER_ACTION"
.br
.ti -1c
.RI "#define \fBYY_EXIT_FAILURE\fP   2"
.br
.ti -1c
.RI "#define \fByyless\fP(n)"
.br
.ti -1c
.RI "#define \fBYYTABLES_NAME\fP   'yytables'"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef signed char \fBflex_int8_t\fP"
.br
.ti -1c
.RI "typedef short int \fBflex_int16_t\fP"
.br
.ti -1c
.RI "typedef int \fBflex_int32_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBflex_uint8_t\fP"
.br
.ti -1c
.RI "typedef unsigned short int \fBflex_uint16_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBflex_uint32_t\fP"
.br
.ti -1c
.RI "typedef struct \fByy_buffer_state\fP * \fBYY_BUFFER_STATE\fP"
.br
.ti -1c
.RI "typedef size_t \fByy_size_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBYY_CHAR\fP"
.br
.ti -1c
.RI "typedef int \fByy_state_type\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBganesha_yyrestart\fP (FILE *input_file)"
.br
.ti -1c
.RI "void \fBganesha_yy_switch_to_buffer\fP (\fBYY_BUFFER_STATE\fP new_buffer)"
.br
.ti -1c
.RI "\fBYY_BUFFER_STATE\fP \fBganesha_yy_create_buffer\fP (FILE *file, int size)"
.br
.ti -1c
.RI "void \fBganesha_yy_delete_buffer\fP (\fBYY_BUFFER_STATE\fP b)"
.br
.ti -1c
.RI "void \fBganesha_yy_flush_buffer\fP (\fBYY_BUFFER_STATE\fP b)"
.br
.ti -1c
.RI "void \fBganesha_yypush_buffer_state\fP (\fBYY_BUFFER_STATE\fP new_buffer)"
.br
.ti -1c
.RI "void \fBganesha_yypop_buffer_state\fP (void)"
.br
.ti -1c
.RI "\fBYY_BUFFER_STATE\fP \fBganesha_yy_scan_buffer\fP (char *base, \fByy_size_t\fP size)"
.br
.ti -1c
.RI "\fBYY_BUFFER_STATE\fP \fBganesha_yy_scan_string\fP (yyconst char *yy_str)"
.br
.ti -1c
.RI "\fBYY_BUFFER_STATE\fP \fBganesha_yy_scan_bytes\fP (yyconst char *bytes, int len)"
.br
.ti -1c
.RI "void * \fBganesha_yyalloc\fP (\fByy_size_t\fP)"
.br
.ti -1c
.RI "void * \fBganesha_yyrealloc\fP (void *, \fByy_size_t\fP)"
.br
.ti -1c
.RI "void \fBganesha_yyfree\fP (void *)"
.br
.ti -1c
.RI "void \fBset_error\fP (char *s)"
.br
.ti -1c
.RI "void \fBYY_BUFFER_APPEND\fP (char *s)"
.br
.ti -1c
.RI "void \fBYY_BUFFER_RESET\fP (void)"
.br
.ti -1c
.RI "int \fBganesha_yylex_destroy\fP (void)"
.br
.ti -1c
.RI "int \fBganesha_yyget_debug\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyset_debug\fP (int debug_flag)"
.br
.ti -1c
.RI "YY_EXTRA_TYPE \fBganesha_yyget_extra\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyset_extra\fP (YY_EXTRA_TYPE user_defined)"
.br
.ti -1c
.RI "FILE * \fBganesha_yyget_in\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyset_in\fP (FILE *in_str)"
.br
.ti -1c
.RI "FILE * \fBganesha_yyget_out\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyset_out\fP (FILE *out_str)"
.br
.ti -1c
.RI "int \fBganesha_yyget_leng\fP (void)"
.br
.ti -1c
.RI "char * \fBganesha_yyget_text\fP (void)"
.br
.ti -1c
.RI "int \fBganesha_yyget_lineno\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyset_lineno\fP (int line_number)"
.br
.ti -1c
.RI "int \fBganesha_yywrap\fP (void)"
.br
.ti -1c
.RI "int \fBganesha_yylex\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yyreset\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yy_set_current_file\fP (char *file)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBganesha_yyleng\fP"
.br
.ti -1c
.RI "FILE * \fBganesha_yyin\fP = (FILE *) 0"
.br
.ti -1c
.RI "FILE * \fBganesha_yyout\fP = (FILE *) 0"
.br
.ti -1c
.RI "int \fBganesha_yylineno\fP = 1"
.br
.ti -1c
.RI "char * \fBganesha_yytext\fP"
.br
.ti -1c
.RI "int \fBganesha_yy_flex_debug\fP = 0"
.br
.ti -1c
.RI "int \fBaccolades\fP"
.br
.ti -1c
.RI "char \fBerr_str\fP [ERRLEN] = ''"
.br
.ti -1c
.RI "char \fBYY_PARSED_STRING\fP [MAXSTRLEN]"
.br
.ti -1c
.RI "char \fBcurrent_file\fP [FILE_LEN] = ''"
.br
.ti -1c
.RI "\fBYY_BUFFER_STATE\fP \fBinclude_stack\fP [MAX_INCLUDE_DEPTH]"
.br
.ti -1c
.RI "unsigned int \fBlines_stack\fP [MAX_INCLUDE_DEPTH]"
.br
.ti -1c
.RI "char \fBfiles_stack\fP [MAX_INCLUDE_DEPTH][FILE_LEN]"
.br
.ti -1c
.RI "int \fBinclude_stack_index\fP = 0"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define AFFECT_OR_SUB_BLOCK   4"
.PP
Definition at line 633 of file conf_lex.c.
.SS "#define BEGIN   (yy_start) = 1 + 2 *"
.PP
Definition at line 144 of file conf_lex.c.
.SS "#define BLOC   2"
.PP
Definition at line 631 of file conf_lex.c.
.SS "#define DEBUG_LEX"
.PP
Definition at line 618 of file conf_lex.c.
.SS "#define ECHO   do { if (fwrite( \fBganesha_yytext\fP, \fBganesha_yyleng\fP, 1, \fBganesha_yyout\fP )) {} } while (0)"
.PP
Definition at line 728 of file conf_lex.c.
.SS "#define ENDVALUE   6"
.PP
Definition at line 635 of file conf_lex.c.
.SS "#define EOB_ACT_CONTINUE_SCAN   0"
.PP
Definition at line 179 of file conf_lex.c.
.SS "#define EOB_ACT_END_OF_FILE   1"
.PP
Definition at line 180 of file conf_lex.c.
.SS "#define EOB_ACT_LAST_MATCH   2"
.PP
Definition at line 181 of file conf_lex.c.
.SS "#define ERRLEN   1024"
.PP
Definition at line 569 of file conf_lex.c.
.SS "#define ESC1   9"
.PP
Definition at line 638 of file conf_lex.c.
.SS "#define FILE_LEN   1024"
.PP
Definition at line 588 of file conf_lex.c.
.SS "#define FLEX_BETA"
.PP
Definition at line 33 of file conf_lex.c.
.SS "#define FLEX_SCANNER"
.PP
Definition at line 28 of file conf_lex.c.
.SS "#define INBLOC   3"
.PP
Definition at line 632 of file conf_lex.c.
.SS "#define INCL_ESC   12"
.PP
Definition at line 641 of file conf_lex.c.
.SS "#define INCL_STRING   11"
.PP
Definition at line 640 of file conf_lex.c.
.SS "#define INCLUDE   10"
.PP
Definition at line 639 of file conf_lex.c.
.SS "#define INITIAL   0"
.PP
Definition at line 629 of file conf_lex.c.
.SS "#define INT16_MAX   (32767)"
.PP
Definition at line 92 of file conf_lex.c.
.SS "#define INT16_MIN   (-32767-1)"
.PP
Definition at line 83 of file conf_lex.c.
.SS "#define INT32_MAX   (2147483647)"
.PP
Definition at line 95 of file conf_lex.c.
.SS "#define INT32_MIN   (-2147483647-1)"
.PP
Definition at line 86 of file conf_lex.c.
.SS "#define INT8_MAX   (127)"
.PP
Definition at line 89 of file conf_lex.c.
.SS "#define INT8_MIN   (-128)"
.PP
Definition at line 80 of file conf_lex.c.
.SS "#define MAX_INCLUDE_DEPTH   10"
.PP
Definition at line 591 of file conf_lex.c.
.SS "#define REJECT   reject_used_but_not_detected"
.PP
Definition at line 540 of file conf_lex.c.
.SS "#define STRING1   7"
.PP
Definition at line 636 of file conf_lex.c.
.SS "#define STRING2   8"
.PP
Definition at line 637 of file conf_lex.c.
.SS "#define UINT16_MAX   (65535U)"
.PP
Definition at line 101 of file conf_lex.c.
.SS "#define UINT32_MAX   (4294967295U)"
.PP
Definition at line 104 of file conf_lex.c.
.SS "#define UINT8_MAX   (255U)"
.PP
Definition at line 98 of file conf_lex.c.
.SS "#define unput(c)   yyunput( c, (yytext_ptr)  )"
.PP
Definition at line 199 of file conf_lex.c.
.SS "#define VALUE   5"
.PP
Definition at line 634 of file conf_lex.c.
.SS "#define YY_AT_BOL()   (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)"
.PP
Definition at line 350 of file conf_lex.c.
.SS "#define YY_BREAK   break;"
.PP
Definition at line 807 of file conf_lex.c.
.SS "#define YY_BUF_SIZE   16384"
.PP
Definition at line 163 of file conf_lex.c.
.SS "#define YY_BUFFER_EOF_PENDING   2"
.PP
Definition at line 266 of file conf_lex.c.
.SS "#define YY_BUFFER_NEW   0"
.PP
Definition at line 254 of file conf_lex.c.
.SS "#define YY_BUFFER_NORMAL   1"
.PP
Definition at line 255 of file conf_lex.c.
.SS "#define yy_create_buffer   ganesha_yy_create_buffer"
.PP
Definition at line 9 of file conf_lex.c.
.SS "#define YY_CURRENT_BUFFER"\fBValue:\fP
.PP
.nf
( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
.fi
.PP
Definition at line 282 of file conf_lex.c.
.SS "#define YY_CURRENT_BUFFER_LVALUE   (yy_buffer_stack)[(yy_buffer_stack_top)]"
.PP
Definition at line 289 of file conf_lex.c.
.SS "#define YY_DECL   int ganesha_yylex (void)"
.PP
Definition at line 795 of file conf_lex.c.
.SS "#define YY_DECL_IS_OURS   1"
.PP
Definition at line 791 of file conf_lex.c.
.SS "#define yy_delete_buffer   ganesha_yy_delete_buffer"
.PP
Definition at line 10 of file conf_lex.c.
.SS "#define YY_DO_BEFORE_ACTION"\fBValue:\fP
.PP
.nf
(yytext_ptr) = yy_bp; \
        ganesha_yyleng = (size_t) (yy_cp - yy_bp); \
        (yy_hold_char) = *yy_cp; \
        *yy_cp = '\0'; \
        (yy_c_buf_p) = yy_cp;
.fi
.PP
Definition at line 375 of file conf_lex.c.
.SS "#define YY_END_OF_BUFFER   33"
.PP
Definition at line 383 of file conf_lex.c.
.SS "#define YY_END_OF_BUFFER_CHAR   0"
.PP
Definition at line 159 of file conf_lex.c.
.SS "#define YY_EXIT_FAILURE   2"
.PP
Definition at line 2048 of file conf_lex.c.
.SS "#define YY_EXTRA_TYPE   void *"
.PP
Definition at line 652 of file conf_lex.c.
.SS "#define YY_FATAL_ERROR(msg)   yy_fatal_error( msg )"
.PP
Definition at line 782 of file conf_lex.c.
.SS "#define yy_flex_debug   \fBganesha_yy_flex_debug\fP"
.PP
Definition at line 11 of file conf_lex.c.
.SS "#define YY_FLEX_MAJOR_VERSION   2"
.PP
Definition at line 29 of file conf_lex.c.
.SS "#define YY_FLEX_MINOR_VERSION   5"
.PP
Definition at line 30 of file conf_lex.c.
.SS "#define YY_FLEX_SUBMINOR_VERSION   35"
.PP
Definition at line 31 of file conf_lex.c.
.SS "#define YY_FLUSH_BUFFER   ganesha_yy_flush_buffer(YY_CURRENT_BUFFER )"
.PP
Definition at line 318 of file conf_lex.c.
.SS "#define yy_flush_buffer   ganesha_yy_flush_buffer"
.PP
Definition at line 13 of file conf_lex.c.
.SS "#define YY_INIT   1"
.PP
Definition at line 630 of file conf_lex.c.
.SS "#define yy_init_buffer   ganesha_yy_init_buffer"
.PP
Definition at line 12 of file conf_lex.c.
.SS "#define YY_INPUT(buf, result, max_size)"\fBValue:\fP
.PP
.nf
if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
                { \
                int c = '*'; \
                unsigned n; \
                for ( n = 0; n < max_size && \
                             (c = getc( ganesha_yyin )) != EOF && c != '\n'; ++n ) \
                        buf[n] = (char) c; \
                if ( c == '\n' ) \
                        buf[n++] = (char) c; \
                if ( c == EOF && ferror( ganesha_yyin ) ) \
                        YY_FATAL_ERROR( 'input in flex scanner failed' ); \
                result = n; \
                } \
        else \
                { \
                errno=0; \
                while ( (result = fread(buf, 1, max_size, ganesha_yyin))==0 && ferror(ganesha_yyin)) \
                        { \
                        if( errno != EINTR) \
                                { \
                                YY_FATAL_ERROR( 'input in flex scanner failed' ); \
                                break; \
                                } \
                        errno=0; \
                        clearerr(ganesha_yyin); \
                        } \
                }\
\
.fi
.PP
Definition at line 735 of file conf_lex.c.
.SS "#define YY_INT_ALIGNED   short int"
.PP
Definition at line 5 of file conf_lex.c.
.SS "#define YY_LESS_LINENO(n)"
.PP
Definition at line 183 of file conf_lex.c.
.SS "#define yy_load_buffer_state   ganesha_yy_load_buffer_state"
.PP
Definition at line 14 of file conf_lex.c.
.SS "#define YY_MORE_ADJ   0"
.PP
Definition at line 542 of file conf_lex.c.
.SS "#define yy_new_buffer   ganesha_yy_create_buffer"
.PP
Definition at line 328 of file conf_lex.c.
.SS "#define YY_NEW_FILE   ganesha_yyrestart(\fBganesha_yyin\fP  )"
.PP
Definition at line 157 of file conf_lex.c.
.SS "#define YY_NULL   0"
.PP
Definition at line 131 of file conf_lex.c.
.SS "#define YY_NUM_RULES   32"
.PP
Definition at line 382 of file conf_lex.c.
.SS "#define YY_READ_BUF_SIZE   8192"
.PP
Definition at line 720 of file conf_lex.c.
.SS "#define YY_RESTORE_YY_MORE_OFFSET"
.PP
Definition at line 543 of file conf_lex.c.
.SS "#define YY_RULE_SETUP   YY_USER_ACTION"
.PP
Definition at line 810 of file conf_lex.c.
.SS "#define YY_SC_TO_UI(c)   ((unsigned int) (unsigned char) c)"
.PP
Definition at line 138 of file conf_lex.c.
.SS "#define yy_set_bol(at_bol)"\fBValue:\fP
.PP
.nf
{ \
        if ( ! YY_CURRENT_BUFFER ){\
        ganesha_yyensure_buffer_stack (); \
                YY_CURRENT_BUFFER_LVALUE =    \
            ganesha_yy_create_buffer(ganesha_yyin,YY_BUF_SIZE ); \
        } \
        YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
        }
.fi
.PP
Definition at line 340 of file conf_lex.c.
.SS "#define yy_set_interactive(is_interactive)"\fBValue:\fP
.PP
.nf
{ \
        if ( ! YY_CURRENT_BUFFER ){ \
        ganesha_yyensure_buffer_stack (); \
                YY_CURRENT_BUFFER_LVALUE =    \
            ganesha_yy_create_buffer(ganesha_yyin,YY_BUF_SIZE ); \
        } \
        YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
        }
.fi
.PP
Definition at line 330 of file conf_lex.c.
.SS "#define YY_START   (((yy_start) - 1) / 2)"
.PP
Definition at line 150 of file conf_lex.c.
.SS "#define YY_START_STACK_INCR   25"
.PP
Definition at line 777 of file conf_lex.c.
.SS "#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(\fByy_state_type\fP))"
.PP
Definition at line 168 of file conf_lex.c.
.SS "#define YY_STATE_EOF(state)   (YY_END_OF_BUFFER + state + 1)"
.PP
Definition at line 154 of file conf_lex.c.
.SS "#define yy_switch_to_buffer   ganesha_yy_switch_to_buffer"
.PP
Definition at line 15 of file conf_lex.c.
.SS "#define YY_USER_INIT"\fBValue:\fP
.PP
.nf
{          \
    unsigned int i;             \
    ganesha_yylineno = 1;               \
    accolades = 0;              \
    include_stack_index = 0;    \
    for ( i=0; i<MAX_INCLUDE_DEPTH; i++) {\
        lines_stack[i]=0;       \
        files_stack[i][0]='\0'; \
    }\
    BEGIN YY_INIT;\
}
.fi
.PP
Definition at line 603 of file conf_lex.c.
.SS "#define \fByyalloc\fP   ganesha_yyalloc"
.PP
Definition at line 24 of file conf_lex.c.
.SS "#define yyconst"
.PP
Definition at line 127 of file conf_lex.c.
.SS "#define yyfree   ganesha_yyfree"
.PP
Definition at line 26 of file conf_lex.c.
.SS "#define yyin   \fBganesha_yyin\fP"
.PP
Definition at line 16 of file conf_lex.c.
.SS "#define yyleng   \fBganesha_yyleng\fP"
.PP
Definition at line 17 of file conf_lex.c.
.SS "#define yyless(n)"\fBValue:\fP
.PP
.nf
do \
                { \
                /* Undo effects of setting up ganesha_yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
                ganesha_yytext[ganesha_yyleng] = (yy_hold_char); \
                (yy_c_buf_p) = ganesha_yytext + yyless_macro_arg; \
                (yy_hold_char) = *(yy_c_buf_p); \
                *(yy_c_buf_p) = '\0'; \
                ganesha_yyleng = yyless_macro_arg; \
                } \
        while ( 0 )
.fi
.PP
Definition at line 2060 of file conf_lex.c.
.SS "#define yyless(n)"\fBValue:\fP
.PP
.nf
do \
                { \
                /* Undo effects of setting up ganesha_yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
                *yy_cp = (yy_hold_char); \
                YY_RESTORE_YY_MORE_OFFSET \
                (yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
                YY_DO_BEFORE_ACTION; /* set up ganesha_yytext again */ \
                } \
        while ( 0 )
.fi
.PP
Definition at line 2060 of file conf_lex.c.
.SS "#define yylex   ganesha_yylex"
.PP
Definition at line 18 of file conf_lex.c.
.SS "#define yylineno   \fBganesha_yylineno\fP"
.PP
Definition at line 19 of file conf_lex.c.
.SS "#define yymore()   yymore_used_but_not_detected"
.PP
Definition at line 541 of file conf_lex.c.
.SS "#define yyout   \fBganesha_yyout\fP"
.PP
Definition at line 20 of file conf_lex.c.
.SS "#define yyrealloc   ganesha_yyrealloc"
.PP
Definition at line 25 of file conf_lex.c.
.SS "#define yyrestart   ganesha_yyrestart"
.PP
Definition at line 21 of file conf_lex.c.
.SS "#define YYSTATE   YY_START"
.PP
Definition at line 151 of file conf_lex.c.
.SS "#define YYTABLES_NAME   'yytables'"
.PP
Definition at line 2250 of file conf_lex.c.
.SS "#define yyterminate()   return YY_NULL"
.PP
Definition at line 772 of file conf_lex.c.
.SS "#define yytext   \fBganesha_yytext\fP"
.PP
Definition at line 22 of file conf_lex.c.
.SS "#define yytext_ptr   \fBganesha_yytext\fP"
.PP
Definition at line 365 of file conf_lex.c.
.SS "#define yywrap   ganesha_yywrap"
.PP
Definition at line 23 of file conf_lex.c.
.SH "Typedef Documentation"
.PP 
.SS "typedef short int \fBflex_int16_t\fP"
.PP
Definition at line 71 of file conf_lex.c.
.SS "typedef int \fBflex_int32_t\fP"
.PP
Definition at line 72 of file conf_lex.c.
.SS "typedef signed char \fBflex_int8_t\fP"
.PP
Definition at line 70 of file conf_lex.c.
.SS "typedef unsigned short int \fBflex_uint16_t\fP"
.PP
Definition at line 74 of file conf_lex.c.
.SS "typedef unsigned int \fBflex_uint32_t\fP"
.PP
Definition at line 75 of file conf_lex.c.
.SS "typedef unsigned char \fBflex_uint8_t\fP"
.PP
Definition at line 73 of file conf_lex.c.
.SS "typedef struct \fByy_buffer_state\fP* \fBYY_BUFFER_STATE\fP"
.PP
Definition at line 172 of file conf_lex.c.
.SS "typedef unsigned char \fBYY_CHAR\fP"
.PP
Definition at line 354 of file conf_lex.c.
.SS "typedef size_t \fByy_size_t\fP"
.PP
Definition at line 203 of file conf_lex.c.
.SS "typedef int \fByy_state_type\fP"
.PP
Definition at line 358 of file conf_lex.c.
.SH "Function Documentation"
.PP 
.SS "\fBYY_BUFFER_STATE\fP ganesha_yy_create_buffer (FILE * file, int size)"
.SS "void ganesha_yy_delete_buffer (\fBYY_BUFFER_STATE\fP b)"
.SS "void ganesha_yy_flush_buffer (\fBYY_BUFFER_STATE\fP b)"Discard all buffered characters. On the next scan, YY_INPUT will be called. 
.PP
\fBParameters:\fP
.RS 4
\fIb\fP the buffer state to be flushed, usually \fCYY_CURRENT_BUFFER\fP. 
.RE
.PP

.PP
Definition at line 1840 of file conf_lex.c.
.SS "\fBYY_BUFFER_STATE\fP ganesha_yy_scan_buffer (char * base, \fByy_size_t\fP size)"Setup the input buffer state to scan directly from a user-specified character buffer. 
.PP
\fBParameters:\fP
.RS 4
\fIbase\fP the character buffer 
.br
\fIsize\fP the size in bytes of the character buffer
.RE
.PP
\fBReturns:\fP
.RS 4
the newly allocated buffer state object. 
.RE
.PP

.PP
Definition at line 1967 of file conf_lex.c.
.SS "\fBYY_BUFFER_STATE\fP ganesha_yy_scan_bytes (yyconst char * yybytes, int _yybytes_len)"Setup the input buffer state to scan the given bytes. The next call to \fBganesha_yylex()\fP will scan from a \fIcopy\fP of \fIbytes\fP. 
.PP
\fBParameters:\fP
.RS 4
\fIbytes\fP the byte buffer to scan 
.br
\fIlen\fP the number of bytes in the buffer pointed to by \fIbytes\fP.
.RE
.PP
\fBReturns:\fP
.RS 4
the newly allocated buffer state object. 
.RE
.PP

.PP
Definition at line 2017 of file conf_lex.c.
.SS "\fBYY_BUFFER_STATE\fP ganesha_yy_scan_string (yyconst char * yystr)"Setup the input buffer state to scan a string. The next call to \fBganesha_yylex()\fP will scan from a \fIcopy\fP of \fIstr\fP. 
.PP
\fBParameters:\fP
.RS 4
\fIyystr\fP a NUL-terminated string to scan
.RE
.PP
\fBReturns:\fP
.RS 4
the newly allocated buffer state object. 
.RE
.PP
\fBNote:\fP
.RS 4
If you want to scan bytes that may contain NUL values, then use \fBganesha_yy_scan_bytes()\fP instead. 
.RE
.PP

.PP
Definition at line 2004 of file conf_lex.c.
.SS "void ganesha_yy_set_current_file (char * file)"
.PP
Definition at line 2265 of file conf_lex.c.
.SS "void ganesha_yy_switch_to_buffer (\fBYY_BUFFER_STATE\fP new_buffer)"
.SS "void * ganesha_yyalloc (\fByy_size_t\fP size)"
.PP
Definition at line 2228 of file conf_lex.c.
.SS "void ganesha_yyfree (void * ptr)"
.PP
Definition at line 2245 of file conf_lex.c.
.SS "int ganesha_yyget_debug (void)"
.PP
Definition at line 2144 of file conf_lex.c.
.SS "YY_EXTRA_TYPE ganesha_yyget_extra (void)"
.SS "FILE * ganesha_yyget_in (void)"Get the input stream. 
.PP
Definition at line 2088 of file conf_lex.c.
.SS "int ganesha_yyget_leng (void)"Get the length of the current token. 
.PP
Definition at line 2104 of file conf_lex.c.
.SS "int ganesha_yyget_lineno (void)"Get the current line number. 
.PP
Definition at line 2079 of file conf_lex.c.
.SS "FILE * ganesha_yyget_out (void)"Get the output stream. 
.PP
Definition at line 2096 of file conf_lex.c.
.SS "char * ganesha_yyget_text (void)"Get the current token. 
.PP
Definition at line 2113 of file conf_lex.c.
.SS "int ganesha_yylex (void)"
.SS "int ganesha_yylex_destroy (void)"
.PP
Definition at line 2183 of file conf_lex.c.
.SS "void ganesha_yypop_buffer_state (void)"Removes and deletes the top of the stack, if present. The next element becomes the new top. 
.PP
Definition at line 1899 of file conf_lex.c.
.SS "void ganesha_yypush_buffer_state (\fBYY_BUFFER_STATE\fP new_buffer)"Pushes the new state onto the stack. The new state becomes the current state. This function will allocate the stack if necessary. 
.PP
\fBParameters:\fP
.RS 4
\fInew_buffer\fP The new state. 
.RE
.PP

.PP
Definition at line 1869 of file conf_lex.c.
.SS "void * ganesha_yyrealloc (void * ptr, \fByy_size_t\fP size)"
.PP
Definition at line 2233 of file conf_lex.c.
.SS "void ganesha_yyreset (void)"
.PP
Definition at line 2260 of file conf_lex.c.
.SS "void ganesha_yyrestart (FILE * input_file)"
.SS "void ganesha_yyset_debug (int debug_flag)"
.PP
Definition at line 2149 of file conf_lex.c.
.SS "void ganesha_yyset_extra (YY_EXTRA_TYPE user_defined)"
.SS "void ganesha_yyset_in (FILE * in_str)"Set the input stream. This does not discard the current input buffer. 
.PP
\fBParameters:\fP
.RS 4
\fIin_str\fP A readable stream.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBganesha_yy_switch_to_buffer\fP 
.RE
.PP

.PP
Definition at line 2134 of file conf_lex.c.
.SS "void ganesha_yyset_lineno (int line_number)"Set the current line number. 
.PP
\fBParameters:\fP
.RS 4
\fIline_number\fP 
.RE
.PP

.PP
Definition at line 2122 of file conf_lex.c.
.SS "void ganesha_yyset_out (FILE * out_str)"
.PP
Definition at line 2139 of file conf_lex.c.
.SS "int ganesha_yywrap (void)"
.PP
Definition at line 2256 of file conf_lex.c.
.SS "void set_error (char * s)"
.PP
Definition at line 1665 of file conf_yacc.c.
.SS "void YY_BUFFER_APPEND (char * s)"
.PP
Definition at line 576 of file conf_lex.c.
.SS "void YY_BUFFER_RESET (void)"
.PP
Definition at line 580 of file conf_lex.c.
.SH "Variable Documentation"
.PP 
.SS "int \fBaccolades\fP"
.PP
Definition at line 564 of file conf_lex.c.
.SS "char \fBcurrent_file\fP[FILE_LEN] = ''"
.PP
Definition at line 589 of file conf_lex.c.
.SS "char \fBerr_str\fP[ERRLEN] = ''"
.PP
Definition at line 570 of file conf_lex.c.
.SS "char \fBfiles_stack\fP[MAX_INCLUDE_DEPTH][FILE_LEN]"
.PP
Definition at line 596 of file conf_lex.c.
.SS "int \fBganesha_yy_flex_debug\fP = 0"
.PP
Definition at line 535 of file conf_lex.c.
.SS "FILE * \fBganesha_yyin\fP = (FILE *) 0"
.PP
Definition at line 356 of file conf_lex.c.
.SS "int \fBganesha_yyleng\fP"
.PP
Definition at line 294 of file conf_lex.c.
.SS "int \fBganesha_yylineno\fP = 1"
.PP
Definition at line 362 of file conf_lex.c.
.SS "FILE * \fBganesha_yyout\fP = (FILE *) 0"
.PP
Definition at line 356 of file conf_lex.c.
.SS "char * \fBganesha_yytext\fP"
.PP
Definition at line 544 of file conf_lex.c.
.SS "\fBYY_BUFFER_STATE\fP \fBinclude_stack\fP[MAX_INCLUDE_DEPTH]"
.PP
Definition at line 592 of file conf_lex.c.
.SS "int \fBinclude_stack_index\fP = 0"
.PP
Definition at line 598 of file conf_lex.c.
.SS "unsigned int \fBlines_stack\fP[MAX_INCLUDE_DEPTH]"
.PP
Definition at line 595 of file conf_lex.c.
.SS "char \fBYY_PARSED_STRING\fP[MAXSTRLEN]"
.PP
Definition at line 574 of file conf_lex.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for ConfigParsing from the source code.
