.TH "config_parsing.c" 3 "31 Mar 2009" "Version 0.1" "ConfigParsing" \" -*- nroff -*-
.ad l
.nh
.SH NAME
config_parsing.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'config.h'\fP
.br
\fC#include 'config_parsing.h'\fP
.br
\fC#include 'analyse.h'\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <errno.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBconfig_struct_t\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBSTRNCMP\fP   strncasecmp"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBganesha_yyparse\fP ()"
.br
.ti -1c
.RI "void \fBganesha_yyreset\fP (void)"
.br
.ti -1c
.RI "void \fBganesha_yy_set_current_file\fP (char *file)"
.br
.ti -1c
.RI "config_file_t \fBconfig_ParseFile\fP (char *file_path)"
.br
.ti -1c
.RI "char * \fBconfig_GetErrorMsg\fP ()"
.br
.ti -1c
.RI "void \fBconfig_Print\fP (FILE *output, config_file_t config)"
.br
.ti -1c
.RI "void \fBconfig_Free\fP (config_file_t config)"
.br
.ti -1c
.RI "int \fBconfig_GetNbBlocks\fP (config_file_t config)"
.br
.ti -1c
.RI "config_item_t \fBconfig_GetBlockByIndex\fP (config_file_t config, unsigned int block_no)"
.br
.ti -1c
.RI "char * \fBconfig_GetBlockName\fP (config_item_t block)"
.br
.ti -1c
.RI "int \fBconfig_GetNbItems\fP (config_item_t block)"
.br
.ti -1c
.RI "config_item_t \fBconfig_GetItemByIndex\fP (config_item_t block, unsigned int item_no)"
.br
.ti -1c
.RI "config_item_type \fBconfig_ItemType\fP (config_item_t item)"
.br
.ti -1c
.RI "int \fBconfig_GetKeyValue\fP (config_item_t item, char **var_name, char **var_value)"
.br
.ti -1c
.RI "config_item_t \fBconfig_FindItemByName\fP (config_file_t config, const char *name)"
.br
.ti -1c
.RI "char * \fBconfig_FindKeyValueByName\fP (config_file_t config, const char *key_name)"
.br
.ti -1c
.RI "config_item_t \fBconfig_GetItemByName\fP (config_item_t block, const char *name)"
.br
.ti -1c
.RI "char * \fBconfig_GetKeyValueByName\fP (config_item_t block, const char *key_name)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "FILE * \fBganesha_yyin\fP"
.br
.ti -1c
.RI "\fBlist_items\fP * \fBprogram_result\fP"
.br
.ti -1c
.RI "char \fBextern_errormsg\fP [1024]"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define STRNCMP   strncasecmp"
.PP
Definition at line 75 of file config_parsing.c.
.SH "Function Documentation"
.PP 
.SS "config_item_t config_FindItemByName (config_file_t config, const char * name)"
.PP
Definition at line 405 of file config_parsing.c.
.SS "char* config_FindKeyValueByName (config_file_t config, const char * key_name)"
.PP
Definition at line 464 of file config_parsing.c.
.SS "void config_Free (config_file_t config)"
.PP
config_Free: Free the memory structure that store the configuration. 
.PP
Definition at line 220 of file config_parsing.c.
.SS "config_item_t config_GetBlockByIndex (config_file_t config, unsigned int block_no)"
.PP
Definition at line 267 of file config_parsing.c.
.SS "char* config_GetBlockName (config_item_t block)"
.PP
Definition at line 290 of file config_parsing.c.
.SS "char* config_GetErrorMsg ()"
.PP
Definition at line 186 of file config_parsing.c.
.SS "config_item_t config_GetItemByIndex (config_item_t block, unsigned int item_no)"
.PP
Definition at line 330 of file config_parsing.c.
.SS "config_item_t config_GetItemByName (config_item_t block, const char * name)"
.PP
Definition at line 482 of file config_parsing.c.
.SS "int config_GetKeyValue (config_item_t item, char ** var_name, char ** var_value)"
.PP
Definition at line 368 of file config_parsing.c.
.SS "char* config_GetKeyValueByName (config_item_t block, const char * key_name)"
.PP
Definition at line 539 of file config_parsing.c.
.SS "int config_GetNbBlocks (config_file_t config)"
.PP
config_GetNbBlocks: Indicates how many blocks are defined into the config file. 
.PP
Definition at line 241 of file config_parsing.c.
.SS "int config_GetNbItems (config_item_t block)"
.PP
Definition at line 302 of file config_parsing.c.
.SS "config_item_type config_ItemType (config_item_t item)"
.PP
Definition at line 354 of file config_parsing.c.
.SS "config_file_t config_ParseFile (char * file_path)"
.PP

.PP
\fBTodo\fP
.RS 4
: ganesha_yyparse fait exit en cas d'erreur. Remedier au probleme. 
.RE
.PP

.PP
Definition at line 116 of file config_parsing.c.
.SS "void config_Print (FILE * output, config_file_t config)"
.PP
config_Print: Print the content of the syntax tree to a file. 
.PP
Definition at line 200 of file config_parsing.c.
.SS "void ganesha_yy_set_current_file (char * file)"
.PP
Definition at line 2265 of file conf_lex.c.
.SS "int ganesha_yyparse ()"
.PP
.SS "void ganesha_yyreset (void)"
.PP
Definition at line 2260 of file conf_lex.c.
.SH "Variable Documentation"
.PP 
.SS "char \fBextern_errormsg\fP[1024]"
.PP
Definition at line 125 of file conf_yacc.c.
.SS "FILE* \fBganesha_yyin\fP"
.PP
.SS "\fBlist_items\fP* \fBprogram_result\fP"
.PP
Definition at line 119 of file conf_yacc.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for ConfigParsing from the source code.
