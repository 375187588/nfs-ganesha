<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="config__parsing_8c" kind="file">
    <compoundname>config_parsing.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="yes">config_parsing.h</includes>
    <includes refid="analyse_8h" local="yes">analyse.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="34">
        <label>config_parsing.h</label>
      </node>
      <node id="37">
        <label>errno.h</label>
      </node>
      <node id="35">
        <label>analyse.h</label>
        <link refid="analyse_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>config_parsing.c</label>
        <link refid="config_parsing.c"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>config.h</label>
      </node>
      <node id="36">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structconfig__struct__t" prot="public">config_struct_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="config__parsing_8c_1a83ae0cfa84a083508398239ded7c284d" prot="public" static="no">
        <name>STRNCMP</name>
        <initializer>strncasecmp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="32" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="config__parsing_8c_1a8ae4cb07af2045d48170185996af8c46" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ganesha_yyin</definition>
        <argsstring></argsstring>
        <name>ganesha_yyin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="48"/>
      </memberdef>
      <memberdef kind="variable" id="config__parsing_8c_1a538cfb02bc69bba6c1b09fd1eadbe58b" prot="public" static="no" mutable="no">
        <type><ref refid="struct__generic__item__" kindref="compound">list_items</ref> *</type>
        <definition>list_items* program_result</definition>
        <argsstring></argsstring>
        <name>program_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="60" bodyfile="/export/GANESHA/src/ConfigParsing/conf_yacc.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="config__parsing_8c_1ac80358e39707c0c4c3f489380b86e4fb" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char extern_errormsg[1024]</definition>
        <argsstring>[1024]</argsstring>
        <name>extern_errormsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="63" bodyfile="/export/GANESHA/src/ConfigParsing/conf_yacc.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="config__parsing_8c_1a4edadf1190387c8f45d970067dcd41a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ganesha_yyparse</definition>
        <argsstring>()</argsstring>
        <name>ganesha_yyparse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="51"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1ae3a69a7654fd47eec60f20f48860edd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ganesha_yyreset</definition>
        <argsstring>(void)</argsstring>
        <name>ganesha_yyreset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="54" bodyfile="/export/GANESHA/src/ConfigParsing/conf_lex.c" bodystart="2260" bodyend="2263"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a241dd44a224c242b3bc3fd52122d2537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ganesha_yy_set_current_file</definition>
        <argsstring>(char *file)</argsstring>
        <name>ganesha_yy_set_current_file</name>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="57" bodyfile="/export/GANESHA/src/ConfigParsing/conf_lex.c" bodystart="2265" bodyend="2268"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a27122b19350d87c1c46d4c3630a80826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_file_t</type>
        <definition>config_file_t config_ParseFile</definition>
        <argsstring>(char *file_path)</argsstring>
        <name>config_ParseFile</name>
        <param>
          <type>char *</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: ganesha_yyparse fait exit en cas d&apos;erreur. Remedier au probleme. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="70" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="69" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1aab9a6d7b5f77cb7b0da504e52ba61adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* config_GetErrorMsg</definition>
        <argsstring>()</argsstring>
        <name>config_GetErrorMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="137" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1aff7eca609d048b1c63fb5dbe460cbff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void config_Print</definition>
        <argsstring>(FILE *output, config_file_t config)</argsstring>
        <name>config_Print</name>
        <param>
          <type>FILE *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>config_Print: Print the content of the syntax tree to a file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="149" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="148" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a21ff635ca4517f5da8111d943372e423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void config_Free</definition>
        <argsstring>(config_file_t config)</argsstring>
        <name>config_Free</name>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>config_Free: Free the memory structure that store the configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="165" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="164" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a1ad32491496feb6301ee1f4e8d9b72a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int config_GetNbBlocks</definition>
        <argsstring>(config_file_t config)</argsstring>
        <name>config_GetNbBlocks</name>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>config_GetNbBlocks: Indicates how many blocks are defined into the config file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="185" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="184" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a87362059b4e1951b3f1054e7c5a6fc9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_item_t</type>
        <definition>config_item_t config_GetBlockByIndex</definition>
        <argsstring>(config_file_t config, unsigned int block_no)</argsstring>
        <name>config_GetBlockByIndex</name>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>block_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="215" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="214" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a075c7715682347ce04b089758e7aedab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* config_GetBlockName</definition>
        <argsstring>(config_item_t block)</argsstring>
        <name>config_GetBlockName</name>
        <param>
          <type>config_item_t</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="236" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="235" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a098e7a2614baf20bb96f612c3d7b8d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int config_GetNbItems</definition>
        <argsstring>(config_item_t block)</argsstring>
        <name>config_GetNbItems</name>
        <param>
          <type>config_item_t</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="247" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="246" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1aa6232f17aec5d583443924e79b536002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_item_t</type>
        <definition>config_item_t config_GetItemByIndex</definition>
        <argsstring>(config_item_t block, unsigned int item_no)</argsstring>
        <name>config_GetItemByIndex</name>
        <param>
          <type>config_item_t</type>
          <declname>block</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>item_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="277" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="276" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a447e838f4a3252ddabd4dc0be3bb6cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_item_type</type>
        <definition>config_item_type config_ItemType</definition>
        <argsstring>(config_item_t item)</argsstring>
        <name>config_ItemType</name>
        <param>
          <type>config_item_t</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="298" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="297" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1aff2105a8be08ca4687d93ae8f1db2fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int config_GetKeyValue</definition>
        <argsstring>(config_item_t item, char **var_name, char **var_value)</argsstring>
        <name>config_GetKeyValue</name>
        <param>
          <type>config_item_t</type>
          <declname>item</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>var_name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>var_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="311" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1af8f479dc1b680a7a538039374f19889a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__generic__item__" kindref="compound">generic_item</ref> *</type>
        <definition>static generic_item* GetItemFromList</definition>
        <argsstring>(generic_item *list, const char *name)</argsstring>
        <name>GetItemFromList</name>
        <param>
          <type><ref refid="struct__generic__item__" kindref="compound">generic_item</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="325" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="324" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1a124c884106272c278b7380b2ea98248d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_item_t</type>
        <definition>config_item_t config_FindItemByName</definition>
        <argsstring>(config_file_t config, const char *name)</argsstring>
        <name>config_FindItemByName</name>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="347" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="346" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1aba7f16a9ea9f6710f6a7f569848780ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* config_FindKeyValueByName</definition>
        <argsstring>(config_file_t config, const char *key_name)</argsstring>
        <name>config_FindKeyValueByName</name>
        <param>
          <type>config_file_t</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="404" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="403" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1adac5bbcc24cd2a61cc5b5490b2db24f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>config_item_t</type>
        <definition>config_item_t config_GetItemByName</definition>
        <argsstring>(config_item_t block, const char *name)</argsstring>
        <name>config_GetItemByName</name>
        <param>
          <type>config_item_t</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="418" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="417" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="config__parsing_8c_1ad6f35ab17c0c80a1a63d1f495db136fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* config_GetKeyValueByName</definition>
        <argsstring>(config_item_t block, const char *key_name)</argsstring>
        <name>config_GetKeyValueByName</name>
        <param>
          <type>config_item_t</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c" line="474" bodyfile="/export/GANESHA/src/ConfigParsing/config_parsing.c" bodystart="473" bodyend="484"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>CEA/DAM/DIF<sp/><sp/>(2007)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>contributeur<sp/>:<sp/>Thomas<sp/>LEIBOVICI<sp/><sp/>thomas.leibovici@cea.fr</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>---------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_parsing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="analyse_8h" kindref="compound">analyse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_STRING_H</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>case<sp/>unsensitivity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="config__parsing_8c_1a83ae0cfa84a083508398239ded7c284d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRNCMP<sp/><sp/><sp/>strncasecmp</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structconfig__struct__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Syntax<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">list_items</ref><sp/>*<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/***************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>ACCES<sp/>AUX<sp/>VARIABLES<sp/>EXTERNES</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>***************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fichier<sp/>d&apos;entree<sp/>du<sp/>lexer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FILE<sp/>*<ref refid="conf__lex_8c_1a301ad30eea69568eada9b31e91e0817f" kindref="member">ganesha_yyin</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>routine<sp/>de<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1a4edadf1190387c8f45d970067dcd41a9" kindref="member">ganesha_yyparse</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>routine<sp/>de<sp/>reinitialization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1ae3a69a7654fd47eec60f20f48860edd0" kindref="member">ganesha_yyreset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>indique<sp/>le<sp/>fichier<sp/>parse<sp/>(pour<sp/>la<sp/>trace<sp/>en<sp/>cas<sp/>d&apos;erreur)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a241dd44a224c242b3bc3fd52122d2537" kindref="member">ganesha_yy_set_current_file</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>variable<sp/>renseignee<sp/>lors<sp/>du<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct__generic__item__" kindref="compound">list_items</ref><sp/>*<ref refid="conf__yacc_8c_1a538cfb02bc69bba6c1b09fd1eadbe58b" kindref="member">program_result</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>message<sp/>d&apos;erreur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>[1024];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>config_ParseFile:</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Reads<sp/>the<sp/>content<sp/>of<sp/>a<sp/>configuration<sp/>file<sp/>and</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>stores<sp/>it<sp/>in<sp/>a<sp/>memory<sp/>structure.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="config__parsing_8c_1a27122b19350d87c1c46d4c3630a80826" refkind="member"><highlight class="normal">config_file_t<sp/><ref refid="config__parsing_8c_1a27122b19350d87c1c46d4c3630a80826" kindref="member">config_ParseFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_path)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>FILE<sp/>*configuration_file;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*output_struct;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inits<sp/>error<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!file_path<sp/>||<sp/>!file_path[0])</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>opens<sp/>the<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>configuration_file<sp/>=<sp/>fopen(file_path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!configuration_file)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Then,<sp/>parse<sp/>the<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>program_result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="conf__lex_8c_1ae3a69a7654fd47eec60f20f48860edd0" kindref="member">ganesha_yyreset</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="conf__lex_8c_1a241dd44a224c242b3bc3fd52122d2537" kindref="member">ganesha_yy_set_current_file</ref>(file_path);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="conf__lex_8c_1a301ad30eea69568eada9b31e91e0817f" kindref="member">ganesha_yyin</ref><sp/>=<sp/>configuration_file;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="config__parsing_8c_1a4edadf1190387c8f45d970067dcd41a9" kindref="member">ganesha_yyparse</ref>())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(configuration_file);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finally,<sp/>build<sp/>the<sp/>output<sp/>struct.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>output_struct<sp/>=<sp/>(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref>));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!output_struct)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(configuration_file);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>output_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref><sp/>=<sp/>program_result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>converts<sp/>pointer<sp/>to<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>fclose(configuration_file);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(config_file_t)<sp/>output_struct;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>config_ParseFile<sp/>returns<sp/>a<sp/>NULL<sp/>pointer,</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>config_GetErrorMsg<sp/>returns<sp/>a<sp/>detailled<sp/>message</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>to<sp/>indicate<sp/>the<sp/>reason<sp/>for<sp/>this<sp/>error.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="config__parsing_8c_1aab9a6d7b5f77cb7b0da504e52ba61adf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="config__parsing_8c_1aab9a6d7b5f77cb7b0da504e52ba61adf" kindref="member">config_GetErrorMsg</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="conf__yacc_8c_1ac80358e39707c0c4c3f489380b86e4fb" kindref="member">extern_errormsg</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="config__parsing_8c_1aff7eca609d048b1c63fb5dbe460cbff9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1aff7eca609d048b1c63fb5dbe460cbff9" kindref="member">config_Print</ref>(FILE<sp/>*<sp/>output,<sp/>config_file_t<sp/>config)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="analyse_8c_1a11266361714a3c55a0d585dd118aaec5" kindref="member">config_print_list</ref>(output,<sp/>((<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>config)-&gt;syntax_tree);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="config__parsing_8c_1a21ff635ca4517f5da8111d943372e423" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1a21ff635ca4517f5da8111d943372e423" kindref="member">config_Free</ref>(config_file_t<sp/>config)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*config_struct<sp/>=<sp/>(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>config;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_struct)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="analyse_8c_1adc8ddb7f244c0bb2aeb9af15ebd3545c" kindref="member">config_free_list</ref>(config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>free(config_struct);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="config__parsing_8c_1a1ad32491496feb6301ee1f4e8d9b72a0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1a1ad32491496feb6301ee1f4e8d9b72a0" kindref="member">config_GetNbBlocks</ref>(config_file_t<sp/>config)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*config_struct<sp/>=<sp/>(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>config;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_struct)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EFAULT;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>on<sp/>regarde<sp/>si<sp/>la<sp/>liste<sp/>est<sp/>vide<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>on<sp/>compte<sp/>le<sp/>nombre<sp/>d&apos;elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>il<sp/>y<sp/>a<sp/>au<sp/>moins<sp/>un<sp/>element<sp/>:<sp/>le<sp/>premier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_block<sp/>=<sp/>(*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((curr_block<sp/>=<sp/>curr_block-&gt;<ref refid="struct__generic__item___1aae5f4337bdd37d93c1569998f229eb87" kindref="member">next</ref>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb++;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>retrieves<sp/>a<sp/>given<sp/>block<sp/>from<sp/>the<sp/>config<sp/>file,<sp/>from<sp/>its<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="config__parsing_8c_1a87362059b4e1951b3f1054e7c5a6fc9f" refkind="member"><highlight class="normal">config_item_t<sp/><ref refid="config__parsing_8c_1a87362059b4e1951b3f1054e7c5a6fc9f" kindref="member">config_GetBlockByIndex</ref>(config_file_t<sp/>config,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_no)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*config_struct<sp/>=<sp/>(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>config;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_block;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref><sp/>||<sp/>!(*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>curr_block<sp/>=<sp/>(*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curr_block<sp/>!=<sp/>NULL;<sp/>curr_block<sp/>=<sp/>curr_block-&gt;<ref refid="struct__generic__item___1aae5f4337bdd37d93c1569998f229eb87" kindref="member">next</ref>,<sp/>i++)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>block_no)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(config_item_t)<sp/>curr_block;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="config__parsing_8c_1a075c7715682347ce04b089758e7aedab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="config__parsing_8c_1a075c7715682347ce04b089758e7aedab" kindref="member">config_GetBlockName</ref>(config_item_t<sp/>block)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_block<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>block;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!curr_block<sp/>||<sp/>(curr_block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curr_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a2cedecc4602de156f0226057a759d038" kindref="member">block_name</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Indicates<sp/>how<sp/>many<sp/>items<sp/>are<sp/>defines<sp/>in<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="config__parsing_8c_1a098e7a2614baf20bb96f612c3d7b8d69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1a098e7a2614baf20bb96f612c3d7b8d69" kindref="member">config_GetNbItems</ref>(config_item_t<sp/>block)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*the_block<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>block;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!the_block<sp/>||<sp/>(the_block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>on<sp/>regarde<sp/>si<sp/>la<sp/>liste<sp/>est<sp/>vide<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(the_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>on<sp/>compte<sp/>le<sp/>nombre<sp/>d&apos;elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>il<sp/>y<sp/>a<sp/>au<sp/>moins<sp/>un<sp/>element<sp/>:<sp/>le<sp/>premier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_block<sp/>=<sp/>the_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((curr_block<sp/>=<sp/>curr_block-&gt;<ref refid="struct__generic__item___1aae5f4337bdd37d93c1569998f229eb87" kindref="member">next</ref>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb++;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>retrieves<sp/>a<sp/>given<sp/>block<sp/>from<sp/>the<sp/>config<sp/>file,<sp/>from<sp/>its<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="config__parsing_8c_1aa6232f17aec5d583443924e79b536002" refkind="member"><highlight class="normal">config_item_t<sp/><ref refid="config__parsing_8c_1aa6232f17aec5d583443924e79b536002" kindref="member">config_GetItemByIndex</ref>(config_item_t<sp/>block,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_no)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*the_block<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>block;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_item;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!the_block<sp/>||<sp/>(the_block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>curr_item<sp/>=<sp/>the_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curr_item<sp/>!=<sp/>NULL;<sp/>curr_item<sp/>=<sp/>curr_item-&gt;<ref refid="struct__generic__item___1aae5f4337bdd37d93c1569998f229eb87" kindref="member">next</ref>,<sp/>i++)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>item_no)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(config_item_t)<sp/>curr_item;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>indicates<sp/>which<sp/>type<sp/>of<sp/>item<sp/>it<sp/>is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="config__parsing_8c_1a447e838f4a3252ddabd4dc0be3bb6cdb" refkind="member"><highlight class="normal">config_item_type<sp/><ref refid="config__parsing_8c_1a447e838f4a3252ddabd4dc0be3bb6cdb" kindref="member">config_ItemType</ref>(config_item_t<sp/>item)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*the_item<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>item;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(the_item-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>==<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONFIG_ITEM_BLOCK;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(the_item-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>==<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613a9ad7ba0457adc1e31ac27dc2f00311f7" kindref="member">TYPE_AFFECT</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONFIG_ITEM_VAR;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Retrieves<sp/>a<sp/>key-value<sp/>peer<sp/>from<sp/>a<sp/>CONFIG_ITEM_VAR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="config__parsing_8c_1aff2105a8be08ca4687d93ae8f1db2fde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="config__parsing_8c_1aff2105a8be08ca4687d93ae8f1db2fde" kindref="member">config_GetKeyValue</ref>(config_item_t<sp/>item,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**var_name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**var_value)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*var<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>item;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!var<sp/>||<sp/>(var-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613a9ad7ba0457adc1e31ac27dc2f00311f7" kindref="member">TYPE_AFFECT</ref>))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>*var_name<sp/>=<sp/>var-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1a8a3ba24ac9e41658530491c5c3913cc9" kindref="member">affect</ref>.<ref refid="struct__type__affect___1a1edec9e19577f677c93b01add5342530" kindref="member">varname</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>*var_value<sp/>=<sp/>var-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1a8a3ba24ac9e41658530491c5c3913cc9" kindref="member">affect</ref>.<ref refid="struct__type__affect___1ac29b2106e4535a40d6008dfefc4ccce3" kindref="member">varvalue</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get<sp/>an<sp/>item<sp/>from<sp/>a<sp/>list<sp/>with<sp/>the<sp/>given<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*GetItemFromList(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*<sp/>list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!list)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(curr<sp/>=<sp/>list;<sp/>curr<sp/>!=<sp/>NULL;<sp/>curr<sp/>=<sp/>curr-&gt;<ref refid="struct__generic__item___1aae5f4337bdd37d93c1569998f229eb87" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((curr-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>==<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<ref refid="config__parsing_8c_1a83ae0cfa84a083508398239ded7c284d" kindref="member">STRNCMP</ref>(curr-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a2cedecc4602de156f0226057a759d038" kindref="member">block_name</ref>,<sp/>name,<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curr;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((curr-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>==<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613a9ad7ba0457adc1e31ac27dc2f00311f7" kindref="member">TYPE_AFFECT</ref>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<ref refid="config__parsing_8c_1a83ae0cfa84a083508398239ded7c284d" kindref="member">STRNCMP</ref>(curr-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1a8a3ba24ac9e41658530491c5c3913cc9" kindref="member">affect</ref>.<ref refid="struct__type__affect___1a1edec9e19577f677c93b01add5342530" kindref="member">varname</ref>,<sp/>name,<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curr;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>the<sp/>block<sp/>with<sp/>the<sp/>specified<sp/>name.<sp/>This<sp/>name<sp/>can<sp/>be<sp/>&quot;BLOCK::SUBBLOCK::SUBBLOCK&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="config__parsing_8c_1a124c884106272c278b7380b2ea98248d" refkind="member"><highlight class="normal">config_item_t<sp/><ref refid="config__parsing_8c_1a124c884106272c278b7380b2ea98248d" kindref="member">config_FindItemByName</ref>(config_file_t<sp/>config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*config_struct<sp/>=<sp/>(<ref refid="structconfig__struct__t" kindref="compound">config_struct_t</ref><sp/>*)<sp/>config;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*block;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*list;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*separ;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*current;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp_name[<ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>connot<sp/>be<sp/>found<sp/>if<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref><sp/>||<sp/>!(*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>))</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>list<sp/>=<sp/>*config_struct-&gt;<ref refid="structconfig__struct__t_1a2fb873f65294aa91fe5a3481dda831df" kindref="member">syntax_tree</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>strncpy(tmp_name,<sp/>name,<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>current<sp/>=<sp/>tmp_name;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>split<sp/>the<sp/>name<sp/>into<sp/>BLOCK/SUBBLOC/SUBBLOC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>separ<sp/>=<sp/>strstr(current,<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>a<sp/>whole<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!separ)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(config_item_t)<sp/>GetItemFromList(list,<sp/>current);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*separ<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((separ<sp/>-<sp/>tmp_name)<sp/>&lt;<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref><sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separ<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>GetItemFromList(list,<sp/>current);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>or<sp/>not<sp/>a<sp/>block<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!block<sp/>||<sp/>(block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;::&quot;<sp/>was<sp/>found,<sp/>must<sp/>have<sp/>something<sp/>after<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>separ;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Directly<sp/>returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>key<sp/>with<sp/>the<sp/>specified<sp/>name.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>This<sp/>name<sp/>can<sp/>be<sp/>&quot;BLOCK::SUBBLOCK::SUBBLOCK::VARNAME&quot;</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="config__parsing_8c_1aba7f16a9ea9f6710f6a7f569848780ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="config__parsing_8c_1aba7f16a9ea9f6710f6a7f569848780ad" kindref="member">config_FindKeyValueByName</ref>(config_file_t<sp/>config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_name)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*var;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>var<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/><ref refid="config__parsing_8c_1a124c884106272c278b7380b2ea98248d" kindref="member">config_FindItemByName</ref>(config,<sp/>key_name);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!var<sp/>||<sp/>(var-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613a9ad7ba0457adc1e31ac27dc2f00311f7" kindref="member">TYPE_AFFECT</ref>))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1a8a3ba24ac9e41658530491c5c3913cc9" kindref="member">affect</ref>.<ref refid="struct__type__affect___1ac29b2106e4535a40d6008dfefc4ccce3" kindref="member">varvalue</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>a<sp/>block<sp/>or<sp/>variable<sp/>with<sp/>the<sp/>specified<sp/>name<sp/>from<sp/>the<sp/>given<sp/>block&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="config__parsing_8c_1adac5bbcc24cd2a61cc5b5490b2db24f9" refkind="member"><highlight class="normal">config_item_t<sp/><ref refid="config__parsing_8c_1adac5bbcc24cd2a61cc5b5490b2db24f9" kindref="member">config_GetItemByName</ref>(config_item_t<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*curr_block<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/>block;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*list;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*separ;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*current;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp_name[<ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>cannot<sp/>be<sp/>found<sp/>if<sp/>empty<sp/>or<sp/>non<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!curr_block<sp/>||<sp/>(curr_block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>list<sp/>=<sp/>curr_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>strncpy(tmp_name,<sp/>name,<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>current<sp/>=<sp/>tmp_name;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>split<sp/>the<sp/>name<sp/>into<sp/>BLOCK/SUBBLOC/SUBBLOC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>separ<sp/>=<sp/>strstr(current,<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>a<sp/>whole<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!separ)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(config_item_t)<sp/>GetItemFromList(list,<sp/>current);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*separ<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((separ<sp/>-<sp/>tmp_name)<sp/>&lt;<sp/><ref refid="analyse_8h_1ab64c24e21a46ddfe0f4168c16b882846" kindref="member">MAXSTRLEN</ref><sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separ<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_block<sp/>=<sp/>GetItemFromList(list,<sp/>current);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>or<sp/>not<sp/>a<sp/>block<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!curr_block<sp/>||<sp/>(curr_block-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613abd5d7984039c921fb93343162a574853" kindref="member">TYPE_BLOCK</ref>))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>curr_block-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1ac1d9ff084323836b445e4bb10eb43b3e" kindref="member">block</ref>.<ref refid="struct__type__block___1a85da2291e1fe11627ceeb2eede0501a3" kindref="member">block_content</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;::&quot;<sp/>was<sp/>found,<sp/>must<sp/>have<sp/>something<sp/>after<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>separ;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Directly<sp/>returns<sp/>the<sp/>value<sp/>of<sp/>the<sp/>key<sp/>with<sp/>the<sp/>specified<sp/>name</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>relative<sp/>to<sp/>the<sp/>given<sp/>block.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="config__parsing_8c_1ad6f35ab17c0c80a1a63d1f495db136fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="config__parsing_8c_1ad6f35ab17c0c80a1a63d1f495db136fd" kindref="member">config_GetKeyValueByName</ref>(config_item_t<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_name)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*var;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>var<sp/>=<sp/>(<ref refid="struct__generic__item__" kindref="compound">generic_item</ref><sp/>*)<sp/><ref refid="config__parsing_8c_1adac5bbcc24cd2a61cc5b5490b2db24f9" kindref="member">config_GetItemByName</ref>(block,<sp/>key_name);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!var<sp/>||<sp/>(var-&gt;<ref refid="struct__generic__item___1af77ca55baaf1e7a9d534c941f9d2f812" kindref="member">type</ref><sp/>!=<sp/><ref refid="analyse_8h_1a6f3f9bfbd10818ff5891c0f505f79613a9ad7ba0457adc1e31ac27dc2f00311f7" kindref="member">TYPE_AFFECT</ref>))</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var-&gt;<ref refid="struct__generic__item___1ad6aca6fd07547ee3bbd586ce8be70b0a" kindref="member">item</ref>.<ref refid="struct__generic__item___1a8a3ba24ac9e41658530491c5c3913cc9" kindref="member">affect</ref>.<ref refid="struct__type__affect___1ac29b2106e4535a40d6008dfefc4ccce3" kindref="member">varvalue</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/export/GANESHA/src/ConfigParsing/config_parsing.c"/>
  </compounddef>
</doxygen>
