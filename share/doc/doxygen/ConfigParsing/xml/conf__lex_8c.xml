<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.3.9.1">
  <compounddef id="conf__lex_8c" kind="file">
    <compoundname>conf_lex.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="analyse_8h" local="yes">analyse.h</includes>
    <includes refid="conf__yacc_8h" local="yes">conf_yacc.h</includes>
    <incdepgraph>
      <node id="19">
        <label>conf_yacc.h</label>
        <link refid="conf__yacc_8h"/>
      </node>
      <node id="16">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>analyse.h</label>
        <link refid="analyse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>conf_lex.c</label>
        <link refid="conf_lex.c"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structyy__buffer__state">yy_buffer_state</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="conf__lex_8c_1a0" prot="public" static="no">
        <name>FLEX_SCANNER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="7" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a1" prot="public" static="no">
        <name>YY_FLEX_MAJOR_VERSION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="8" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a2" prot="public" static="no">
        <name>YY_FLEX_MINOR_VERSION</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="9" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a3" prot="public" static="no">
        <name>yyconst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="55" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a4" prot="public" static="no">
        <name>YY_PROTO</name>
        <param><defname>proto</defname></param>
        <initializer>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="62" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a5" prot="public" static="no">
        <name>YY_NULL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="66" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a6" prot="public" static="no">
        <name>YY_SC_TO_UI</name>
        <param><defname>c</defname></param>
        <initializer>((unsigned int) (unsigned char) c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="73" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a7" prot="public" static="no">
        <name>BEGIN</name>
        <initializer>yy_start = 1 + 2 *</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="79" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a8" prot="public" static="no">
        <name>YY_START</name>
        <initializer>((yy_start - 1) / 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="85" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a9" prot="public" static="no">
        <name>YYSTATE</name>
        <initializer>YY_START</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="86" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a10" prot="public" static="no">
        <name>YY_STATE_EOF</name>
        <param><defname>state</defname></param>
        <initializer>(YY_END_OF_BUFFER + state + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="89" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a11" prot="public" static="no">
        <name>YY_NEW_FILE</name>
        <initializer>yyrestart( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref> )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="92" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a12" prot="public" static="no">
        <name>YY_END_OF_BUFFER_CHAR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="94" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a13" prot="public" static="no">
        <name>YY_BUF_SIZE</name>
        <initializer>16384</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="97" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a14" prot="public" static="no">
        <name>EOB_ACT_CONTINUE_SCAN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="104" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a15" prot="public" static="no">
        <name>EOB_ACT_END_OF_FILE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="105" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a16" prot="public" static="no">
        <name>EOB_ACT_LAST_MATCH</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="106" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a17" prot="public" static="no">
        <name>yyless</name>
        <param><defname>n</defname></param>
        <initializer>do \
		{ \
		/* Undo effects of setting up <ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = <ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref> + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up <ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref> again */ \
		} \
	while ( 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="133" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a18" prot="public" static="no">
        <name>unput</name>
        <param><defname>c</defname></param>
        <initializer>yyunput( c, yytext_ptr )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="135" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a19" prot="public" static="no">
        <name>YY_BUFFER_NEW</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="186" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a20" prot="public" static="no">
        <name>YY_BUFFER_NORMAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="187" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a21" prot="public" static="no">
        <name>YY_BUFFER_EOF_PENDING</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="198" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a22" prot="public" static="no">
        <name>YY_CURRENT_BUFFER</name>
        <initializer>yy_current_buffer</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="207" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a23" prot="public" static="no">
        <name>YY_FLUSH_BUFFER</name>
        <initializer>yy_flush_buffer( yy_current_buffer )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="236" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a24" prot="public" static="no">
        <name>yy_new_buffer</name>
        <initializer>yy_create_buffer</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="246" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a25" prot="public" static="no">
        <name>yy_set_interactive</name>
        <param><defname>is_interactive</defname></param>
        <initializer>{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref>, YY_BUF_SIZE ); \
	yy_current_buffer-&gt;yy_is_interactive = is_interactive; \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="253" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a26" prot="public" static="no">
        <name>yy_set_bol</name>
        <param><defname>at_bol</defname></param>
        <initializer>{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref>, YY_BUF_SIZE ); \
	yy_current_buffer-&gt;yy_at_bol = at_bol; \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="260" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a27" prot="public" static="no">
        <name>YY_AT_BOL</name>
        <initializer>(yy_current_buffer-&gt;yy_at_bol)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="262" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a28" prot="public" static="no">
        <name>yytext_ptr</name>
        <initializer><ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="268" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a29" prot="public" static="no">
        <name>YY_DO_BEFORE_ACTION</name>
        <initializer>yytext_ptr = <ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref>; \
	<ref refid="conf__lex_8c_1a64" kindref="member">yyleng</ref> = (int) (yy_cp - <ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref>); \
	yy_hold_char = *yy_cp; \
	*yy_cp = &apos;\0&apos;; \
	yy_c_buf_p = yy_cp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="283" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a30" prot="public" static="no">
        <name>YY_NUM_RULES</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="285" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a31" prot="public" static="no">
        <name>YY_END_OF_BUFFER</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="286" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a32" prot="public" static="no">
        <name>REJECT</name>
        <initializer>reject_used_but_not_detected</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="395" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a33" prot="public" static="no">
        <name>yymore</name>
        <initializer>yymore_used_but_not_detected</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="396" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a34" prot="public" static="no">
        <name>YY_MORE_ADJ</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="397" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a35" prot="public" static="no">
        <name>YY_RESTORE_YY_MORE_OFFSET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="398" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a36" prot="public" static="no">
        <name>INITIAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="401" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a37" prot="public" static="no">
        <name>ERRLEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="415" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a38" prot="public" static="no">
        <name>YY_USER_INIT</name>
        <initializer>{\
    <ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>=1;\
    BEGIN YY_INIT;\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="437" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a39" prot="public" static="no">
        <name>DEBUG_LEX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="442" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a40" prot="public" static="no">
        <name>YY_INIT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="448" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a41" prot="public" static="no">
        <name>BLOC</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="449" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a42" prot="public" static="no">
        <name>INBLOC</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="450" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a43" prot="public" static="no">
        <name>AFFECT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="451" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a44" prot="public" static="no">
        <name>VALUE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="452" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a45" prot="public" static="no">
        <name>ENDVALUE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="453" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a46" prot="public" static="no">
        <name>STRING1</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="454" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a47" prot="public" static="no">
        <name>STRING2</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="455" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a48" prot="public" static="no">
        <name>ESC1</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="456" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a49" prot="public" static="no">
        <name>YY_NO_PUSH_STATE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="507" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a50" prot="public" static="no">
        <name>YY_NO_POP_STATE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="508" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a51" prot="public" static="no">
        <name>YY_NO_TOP_STATE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="509" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a52" prot="public" static="no">
        <name>YY_READ_BUF_SIZE</name>
        <initializer>8192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="529" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a53" prot="public" static="no">
        <name>ECHO</name>
        <initializer>(void) fwrite( <ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>, <ref refid="conf__lex_8c_1a64" kindref="member">yyleng</ref>, 1, <ref refid="conf__lex_8c_1a66" kindref="member">yyout</ref> )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="538" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a54" prot="public" static="no">
        <name>YY_INPUT</name>
        <param><defname>buf</defname></param>
        <param><defname>result</defname></param>
        <param><defname>max_size</defname></param>
        <initializer>if ( yy_current_buffer-&gt;yy_is_interactive ) \
		{ \
		int c = &apos;*&apos;, n; \
		for ( n = 0; n &lt; max_size &amp;&amp; \
			     (c = getc( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref> )) != EOF &amp;&amp; c != &apos;\n&apos;; ++n ) \
			buf[n] = (char) c; \
		if ( c == &apos;\n&apos; ) \
			buf[n++] = (char) c; \
		if ( c == EOF &amp;&amp; ferror( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref> ) ) \
			YY_FATAL_ERROR( &quot;input in flex scanner failed&quot; ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref> )) == 0) \
		  &amp;&amp; ferror( <ref refid="config__parsing_8c_1a2" kindref="member">yyin</ref> ) ) \
		YY_FATAL_ERROR( &quot;input in flex scanner failed&quot; );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="560" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a55" prot="public" static="no">
        <name>yyterminate</name>
        <initializer>return YY_NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="568" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a56" prot="public" static="no">
        <name>YY_START_STACK_INCR</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="573" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a57" prot="public" static="no">
        <name>YY_FATAL_ERROR</name>
        <param><defname>msg</defname></param>
        <initializer>yy_fatal_error( msg )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="578" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a58" prot="public" static="no">
        <name>YY_DECL</name>
        <initializer>int yylex YY_PROTO(( void ))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="585" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a59" prot="public" static="no">
        <name>YY_BREAK</name>
        <initializer>break;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="597" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a60" prot="public" static="no">
        <name>YY_RULE_SETUP</name>
        <initializer>YY_USER_ACTION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="601" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a61" prot="public" static="no">
        <name>YY_EXIT_FAILURE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1594"/>
      </memberdef>
      <memberdef kind="define" id="conf__lex_8c_1a62" prot="public" static="no">
        <name>yyless</name>
        <param><defname>n</defname></param>
        <initializer>do \
		{ \
		/* Undo effects of setting up <ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>. */ \
		<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>[<ref refid="conf__lex_8c_1a64" kindref="member">yyleng</ref>] = yy_hold_char; \
		yy_c_buf_p = <ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref> + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = &apos;\0&apos;; \
		<ref refid="conf__lex_8c_1a64" kindref="member">yyleng</ref> = n; \
		} \
	while ( 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1623" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="conf__lex_8c_1a63" prot="public" static="no">
        <type><ref refid="structyy__buffer__state" kindref="compound">yy_buffer_state</ref> *</type>
        <definition>typedef struct yy_buffer_state* YY_BUFFER_STATE</definition>
        <argsstring></argsstring>
        <name>YY_BUFFER_STATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="99" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf__lex_8c_1a67" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int yy_size_t</definition>
        <argsstring></argsstring>
        <name>yy_size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="141" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf__lex_8c_1a75" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char YY_CHAR</definition>
        <argsstring></argsstring>
        <name>YY_CHAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="264" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="conf__lex_8c_1a76" prot="public" static="no">
        <type>int</type>
        <definition>typedef int yy_state_type</definition>
        <argsstring></argsstring>
        <name>yy_state_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="266" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="conf__lex_8c_1a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yyrestart</type>
        <definition>void yyrestart YY_PROTO</definition>
        <argsstring>((FILE *input_file))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(FILE *input_file)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="228"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_switch_to_buffer</type>
        <definition>void yy_switch_to_buffer YY_PROTO</definition>
        <argsstring>((YY_BUFFER_STATE new_buffer))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(<ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> new_buffer)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="230"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_load_buffer_state</type>
        <definition>int input YY_PROTO</definition>
        <argsstring>((void))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(void)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="231"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> yy_create_buffer</type>
        <definition>YY_BUFFER_STATE yy_create_buffer YY_PROTO</definition>
        <argsstring>((FILE *file, int size))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(FILE *<ref refid="conf__lex_8c_1a92" kindref="member">file</ref>, int <ref refid="conf__lex_8c_1a91" kindref="member">size</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="232"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_delete_buffer</type>
        <definition>void yy_flush_buffer YY_PROTO</definition>
        <argsstring>((YY_BUFFER_STATE b))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(<ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> b)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="233"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_init_buffer</type>
        <definition>void yy_init_buffer YY_PROTO</definition>
        <argsstring>((YY_BUFFER_STATE b, FILE *file))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(<ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> b, FILE *<ref refid="conf__lex_8c_1a92" kindref="member">file</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="234"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> yy_scan_buffer</type>
        <definition>YY_BUFFER_STATE yy_scan_buffer YY_PROTO</definition>
        <argsstring>((char *base, yy_size_t size))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(char *base, <ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref> <ref refid="conf__lex_8c_1a91" kindref="member">size</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="238"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> yy_scan_string</type>
        <definition>YY_BUFFER_STATE yy_scan_string YY_PROTO</definition>
        <argsstring>((yyconst char *yy_str))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(yyconst char *yy_str)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="239"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref> yy_scan_bytes</type>
        <definition>YY_BUFFER_STATE yy_scan_bytes YY_PROTO</definition>
        <argsstring>((yyconst char *bytes, int len))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(yyconst char *bytes, int <ref refid="conf__lex_8c_1a93" kindref="member">len</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="240"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a103" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *yy_flex_alloc</type>
        <definition>void* yy_flex_alloc YY_PROTO</definition>
        <argsstring>((yy_size_t))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(<ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="242"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a104" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *yy_flex_realloc</type>
        <definition>void* yy_flex_realloc YY_PROTO</definition>
        <argsstring>((void *, yy_size_t))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(void *, <ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="243"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a105" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_flex_free</type>
        <definition>void yy_flex_free YY_PROTO</definition>
        <argsstring>((void *))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(void *)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="244"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref> yy_try_NUL_trans</type>
        <definition>yy_state_type yy_try_NUL_trans YY_PROTO</definition>
        <argsstring>((yy_state_type current_state))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(<ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref> current_state)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="271"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a107" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yy_fatal_error</type>
        <definition>void yy_fatal_error YY_PROTO</definition>
        <argsstring>((yyconst char msg[]))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(yyconst char msg[])</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="273"/>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_error</definition>
        <argsstring>(char *s)</argsstring>
        <name>set_error</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="413" bodystart="1287" bodyend="1289"/>
        <references refid="conf__yacc_8c_1a60" compoundref="conf__yacc_8c" startline="91">local_errormsg</references>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void YY_BUFFER_APPEND</definition>
        <argsstring>(char *s)</argsstring>
        <name>YY_BUFFER_APPEND</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="421" bodystart="421" bodyend="423"/>
        <references refid="analyse_8h_1a0" compoundref="analyse_8h" startline="33">MAXSTRLEN</references>
        <references refid="conf__lex_8c_1a89" compoundref="conf__lex_8c" startline="419">YY_PARSED_STRING</references>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void YY_BUFFER_RESET</definition>
        <argsstring>(void)</argsstring>
        <name>YY_BUFFER_RESET</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="425" bodystart="425" bodyend="430"/>
        <references refid="conf__lex_8c_1a89" compoundref="conf__lex_8c" startline="419">YY_PARSED_STRING</references>
      </memberdef>
      <memberdef kind="function" id="conf__lex_8c_1a111" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void yyunput</type>
        <definition>void yyunput YY_PROTO</definition>
        <argsstring>((int c, char *buf_ptr))</argsstring>
        <name>YY_PROTO</name>
        <param>
          <type>(int c, char *buf_ptr)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="473"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="conf__lex_8c_1a64" prot="public" static="no" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yyleng</definition>
        <argsstring></argsstring>
        <name>yyleng</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="101" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a65" prot="public" static="no" volatile="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE * yyin</definition>
        <argsstring></argsstring>
        <name>yyin</name>
        <initializer> (FILE *) 0 *<ref refid="conf__lex_8c_1a66" kindref="member">yyout</ref> = (FILE *) 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="102" bodystart="265" bodyend="-1"/>
        <referencedby refid="config__parsing_8c_1a6" compoundref="config__parsing_8c" startline="136" endline="195">config_ParseFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a66" prot="public" static="no" volatile="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE * yyout</definition>
        <argsstring></argsstring>
        <name>yyout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="102"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a68" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref></type>
        <definition>YY_BUFFER_STATE yy_current_buffer</definition>
        <argsstring></argsstring>
        <name>yy_current_buffer</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="201" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a69" prot="public" static="yes" volatile="no" mutable="no">
        <type>char</type>
        <definition>char yy_hold_char</definition>
        <argsstring></argsstring>
        <name>yy_hold_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="211" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a70" prot="public" static="yes" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yy_n_chars</definition>
        <argsstring></argsstring>
        <name>yy_n_chars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="213" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a71" prot="public" static="yes" volatile="no" mutable="no">
        <type>char *</type>
        <definition>char* yy_c_buf_p</definition>
        <argsstring></argsstring>
        <name>yy_c_buf_p</name>
        <initializer> (char *) 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="219" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a72" prot="public" static="yes" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yy_init</definition>
        <argsstring></argsstring>
        <name>yy_init</name>
        <initializer> 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="220" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a73" prot="public" static="yes" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yy_start</definition>
        <argsstring></argsstring>
        <name>yy_start</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="221" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a74" prot="public" static="yes" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yy_did_buffer_switch_on_eof</definition>
        <argsstring></argsstring>
        <name>yy_did_buffer_switch_on_eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="226" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a77" prot="public" static="no" volatile="no" mutable="no">
        <type>char *</type>
        <definition>char * yytext</definition>
        <argsstring></argsstring>
        <name>yytext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="267" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a78" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst short int</type>
        <definition>yyconst short int yy_accept[56]</definition>
        <argsstring>[56]</argsstring>
        <name>yy_accept</name>
        <initializer>
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       24,   22,   20,   21,   22,    1,    2,    3,    4,    5,
        8,    6,    7,    9,   13,   13,   12,   11,   13,   10,
       18,   18,   17,   18,   16,   15,   15,   14,   15,    0,
       19,    1,    3,    8,    0
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="295" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a79" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst int</type>
        <definition>yyconst int yy_ec[256]</definition>
        <argsstring>[256]</argsstring>
        <name>yy_ec</name>
        <initializer>
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    2,    2,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    6,    1,
        1,    1,    1,    1,    7,    8,    1,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    9,    1,
       10,    1,    1,    1,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        1,   11,    1,    1,    8,    1,    8,    8,    8,    8,

        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,   12,    1,   13,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="327" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a80" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst int</type>
        <definition>yyconst int yy_meta[14]</definition>
        <argsstring>[14]</argsstring>
        <name>yy_meta</name>
        <initializer>
    {   0,
        1,    2,    2,    2,    2,    2,    3,    3,    2,    1,
        1,    1,    1
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="333" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a81" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst short int</type>
        <definition>yyconst short int yy_base[64]</definition>
        <argsstring>[64]</argsstring>
        <name>yy_base</name>
        <initializer>
    {   0,
        0,    4,   41,   35,   30,   29,    2,    8,   30,   29,
       21,    0,   11,   10,   33,   43,   53,   58,   63,   67,
       18,   91,   91,   91,   14,    0,   91,    0,   91,   91,
        0,   91,   91,   91,   91,   91,   91,   91,   11,   91,
       91,   91,   91,   10,   91,   91,   91,   91,    9,    8,
       91,    0,    0,    0,   91,   72,   75,   78,   81,   84,
        5,    1,   87
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="344" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a82" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst short int</type>
        <definition>yyconst short int yy_def[64]</definition>
        <argsstring>[64]</argsstring>
        <name>yy_def</name>
        <initializer>
    {   0,
       56,   56,    2,    2,    2,    2,    2,    2,    2,    2,
       55,   11,    2,    2,   57,   57,   58,   58,   59,   59,
       55,   55,   55,   55,   60,   61,   55,   62,   55,   55,
       63,   55,   55,   55,   55,   55,   55,   55,   60,   55,
       55,   55,   55,   60,   55,   55,   55,   55,   60,   60,
       55,   61,   62,   63,    0,   55,   55,   55,   55,   55,
       55,   55,   55
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="355" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a83" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst short int</type>
        <definition>yyconst short int yy_nxt[105]</definition>
        <argsstring>[105]</argsstring>
        <name>yy_nxt</name>
        <initializer>
    {   0,
       55,   23,   24,   53,   25,   23,   24,   52,   25,   28,
       51,   51,   51,   51,   29,   28,   51,   55,   34,   34,
       29,   31,   23,   24,   32,   25,   33,   31,   31,   22,
       31,   31,   31,   31,   36,   37,   38,   39,   30,   30,
       27,   27,   26,   40,   36,   37,   38,   39,   26,   55,
       55,   55,   55,   40,   42,   43,   55,   44,   45,   42,
       43,   55,   44,   45,   47,   48,   55,   49,   47,   48,
       55,   49,   22,   22,   22,   35,   35,   35,   41,   41,
       41,   46,   46,   46,   50,   50,   50,   54,   55,   54,
       21,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="371" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a84" prot="public" static="yes" volatile="no" mutable="no">
        <type>yyconst short int</type>
        <definition>yyconst short int yy_chk[105]</definition>
        <argsstring>[105]</argsstring>
        <name>yy_chk</name>
        <initializer>
    {   0,
        0,    1,    1,   62,    1,    2,    2,   61,    2,    7,
       50,   49,   44,   39,    7,    8,   25,   21,   14,   13,
        8,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   15,   15,   15,   15,   10,    9,
        6,    5,    4,   15,   16,   16,   16,   16,    3,    0,
        0,    0,    0,   16,   17,   17,    0,   17,   17,   18,
       18,    0,   18,   18,   19,   19,    0,   19,   20,   20,
        0,   20,   56,   56,   56,   57,   57,   57,   58,   58,
       58,   59,   59,   59,   60,   60,   60,   63,    0,   63,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="387" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a85" prot="public" static="yes" volatile="no" mutable="no">
        <type><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref></type>
        <definition>yy_state_type yy_last_accepting_state</definition>
        <argsstring></argsstring>
        <name>yy_last_accepting_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="389" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a86" prot="public" static="yes" volatile="no" mutable="no">
        <type>char *</type>
        <definition>char* yy_last_accepting_cpos</definition>
        <argsstring></argsstring>
        <name>yy_last_accepting_cpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="390" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a87" prot="public" static="no" volatile="no" mutable="no">
        <type>int</type>
        <definition>int yylineno</definition>
        <argsstring></argsstring>
        <name>yylineno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="410" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a88" prot="public" static="no" volatile="no" mutable="no">
        <type>char</type>
        <definition>char err_str[ERRLEN]</definition>
        <argsstring>[ERRLEN]</argsstring>
        <name>err_str</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="416" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a89" prot="public" static="no" volatile="no" mutable="no">
        <type>char</type>
        <definition>char YY_PARSED_STRING[MAXSTRLEN]</definition>
        <argsstring>[MAXSTRLEN]</argsstring>
        <name>YY_PARSED_STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="419" bodystart="419" bodyend="-1"/>
        <referencedby refid="conf__lex_8c_1a109" compoundref="conf__lex_8c" startline="421" endline="423">YY_BUFFER_APPEND</referencedby>
        <referencedby refid="conf__lex_8c_1a110" compoundref="conf__lex_8c" startline="425" endline="430">YY_BUFFER_RESET</referencedby>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a90" prot="public" static="no" volatile="no" mutable="no">
        <type>register char *</type>
        <definition>register char* yy_bp</definition>
        <argsstring></argsstring>
        <name>yy_bp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1167" bodystart="1167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a91" prot="public" static="no" volatile="no" mutable="no">
        <type>int</type>
        <definition>yy_size_t size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1343" bodystart="1676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a92" prot="public" static="no" volatile="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1395" bodystart="1395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="conf__lex_8c_1a93" prot="public" static="no" volatile="no" mutable="no">
        <type>int</type>
        <definition>int len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c" line="1508" bodystart="1508" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>A<sp/>lexical<sp/>scanner<sp/>generated<sp/>by<sp/>flex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scanner<sp/>skeleton<sp/>version:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>$Header:<sp/>/home/daffy/u0/vern/flex/RCS/flex.skl,v<sp/>2.91<sp/>96/09/10<sp/>16:58:48<sp/>vern<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="conf__lex_8c_1a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLEX_SCANNER</highlight></codeline>
<codeline lineno="8" refid="conf__lex_8c_1a1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_FLEX_MAJOR_VERSION<sp/>2</highlight></codeline>
<codeline lineno="9" refid="conf__lex_8c_1a2" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_FLEX_MINOR_VERSION<sp/>5</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cfront<sp/>1.2<sp/>defines<sp/>&quot;c_plusplus&quot;<sp/>instead<sp/>of<sp/>&quot;__cplusplus&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>c_plusplus</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__cplusplus</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>prototypes<sp/>in<sp/>function<sp/>declarations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>&quot;const&quot;<sp/>storage-class-modifier<sp/>is<sp/>valid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_CONST</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!<sp/>__cplusplus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC__</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_CONST</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>__STDC__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>!<sp/>__cplusplus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__TURBOC__</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#pragma<sp/>warn<sp/>-rch</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#pragma<sp/>warn<sp/>-use</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_CONST</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_CONST</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yyconst<sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="55" refid="conf__lex_8c_1a3" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yyconst</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_PROTO(proto)<sp/>proto</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="62" refid="conf__lex_8c_1a4" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_PROTO(proto)<sp/>()</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returned<sp/>upon<sp/>end-of-file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="conf__lex_8c_1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_NULL<sp/>0</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Promotes<sp/>a<sp/>possibly<sp/>negative,<sp/>possibly<sp/>signed<sp/>char<sp/>to<sp/>an<sp/>unsigned</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>integer<sp/>for<sp/>use<sp/>as<sp/>an<sp/>array<sp/>index.<sp/><sp/>If<sp/>the<sp/>signed<sp/>char<sp/>is<sp/>negative,</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>we<sp/>want<sp/>to<sp/>instead<sp/>treat<sp/>it<sp/>as<sp/>an<sp/>8-bit<sp/>unsigned<sp/>char,<sp/>hence<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>double<sp/>cast.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="conf__lex_8c_1a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_SC_TO_UI(c)<sp/>((unsigned<sp/>int)<sp/>(unsigned<sp/>char)<sp/>c)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enter<sp/>a<sp/>start<sp/>condition.<sp/><sp/>This<sp/>macro<sp/>really<sp/>ought<sp/>to<sp/>take<sp/>a<sp/>parameter,</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>but<sp/>we<sp/>do<sp/>it<sp/>the<sp/>disgusting<sp/>crufty<sp/>way<sp/>forced<sp/>on<sp/>us<sp/>by<sp/>the<sp/>()-less</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>definition<sp/>of<sp/>BEGIN.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="conf__lex_8c_1a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEGIN<sp/>yy_start<sp/>=<sp/>1<sp/>+<sp/>2<sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Translate<sp/>the<sp/>current<sp/>start<sp/>state<sp/>into<sp/>a<sp/>value<sp/>that<sp/>can<sp/>be<sp/>later<sp/>handed</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>to<sp/>BEGIN<sp/>to<sp/>return<sp/>to<sp/>the<sp/>state.<sp/><sp/>The<sp/>YYSTATE<sp/>alias<sp/>is<sp/>for<sp/>lex</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>compatibility.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="conf__lex_8c_1a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_START<sp/>((yy_start<sp/>-<sp/>1)<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="86" refid="conf__lex_8c_1a9" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YYSTATE<sp/>YY_START</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Action<sp/>number<sp/>for<sp/>EOF<sp/>rule<sp/>of<sp/>a<sp/>given<sp/>start<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="conf__lex_8c_1a10" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_STATE_EOF(state)<sp/>(YY_END_OF_BUFFER<sp/>+<sp/>state<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Special<sp/>action<sp/>meaning<sp/>&quot;start<sp/>processing<sp/>a<sp/>new<sp/>file&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="conf__lex_8c_1a11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_NEW_FILE<sp/>yyrestart(<sp/>yyin<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="conf__lex_8c_1a12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_END_OF_BUFFER_CHAR<sp/>0</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>default<sp/>input<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="conf__lex_8c_1a13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_BUF_SIZE<sp/>16384</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="conf__lex_8c_1a63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structyy__buffer__state" kindref="compound">yy_buffer_state</ref><sp/>*<ref refid="structyy__buffer__state" kindref="compound">YY_BUFFER_STATE</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyleng;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FILE<sp/>*yyin,<sp/>*yyout;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="conf__lex_8c_1a14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOB_ACT_CONTINUE_SCAN<sp/>0</highlight></codeline>
<codeline lineno="105" refid="conf__lex_8c_1a15" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EOB_ACT_END_OF_FILE<sp/>1</highlight></codeline>
<codeline lineno="106" refid="conf__lex_8c_1a16" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EOB_ACT_LAST_MATCH<sp/>2</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>funky<sp/>do-while<sp/>in<sp/>the<sp/>following<sp/>#define<sp/>is<sp/>used<sp/>to<sp/>turn<sp/>the<sp/>definition</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>int<sp/>a<sp/>single<sp/>C<sp/>statement<sp/>(which<sp/>needs<sp/>a<sp/>semi-colon<sp/>terminator).<sp/><sp/>This</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>avoids<sp/>problems<sp/>with<sp/>code<sp/>like:</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>condition_holds<sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyless(<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_something_else();</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>Prior<sp/>to<sp/>using<sp/>the<sp/>do-while<sp/>the<sp/>compiler<sp/>would<sp/>get<sp/>upset<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>&quot;else&quot;<sp/>because<sp/>it<sp/>interpreted<sp/>the<sp/>&quot;if&quot;<sp/>statement<sp/>as<sp/>being<sp/>all</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>done<sp/>when<sp/>it<sp/>reached<sp/>the<sp/>&apos;;&apos;<sp/>after<sp/>the<sp/>yyless()<sp/>call.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>all<sp/>but<sp/>the<sp/>first<sp/>&apos;n&apos;<sp/>matched<sp/>characters<sp/>back<sp/>to<sp/>the<sp/>input<sp/>stream.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="conf__lex_8c_1a62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yyless(n)<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>effects<sp/>of<sp/>setting<sp/>up<sp/>yytext.<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>yy_hold_char;<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_RESTORE_YY_MORE_OFFSET<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/>yy_cp<sp/>=<sp/>yy_bp<sp/>+<sp/>n<sp/>-<sp/>YY_MORE_ADJ;<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_DO_BEFORE_ACTION;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>yytext<sp/>again<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="conf__lex_8c_1a18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>unput(c)<sp/>yyunput(<sp/>c,<sp/>yytext_ptr<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>is<sp/>because<sp/>we<sp/>cannot<sp/>portably<sp/>get<sp/>our<sp/>hands<sp/>on<sp/>size_t</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>(without<sp/>autoconf&apos;s<sp/>help,<sp/>which<sp/>isn&apos;t<sp/>available<sp/>because<sp/>we<sp/>want</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>flex-generated<sp/>scanners<sp/>to<sp/>compile<sp/>on<sp/>their<sp/>own).</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="conf__lex_8c_1a67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_size_t;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structyy__buffer__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structyy__buffer__state" kindref="compound">yy_buffer_state</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146" refid="structyy__buffer__state_1o0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*yy_input_file;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structyy__buffer__state_1o1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_ch_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structyy__buffer__state_1o2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_buf_pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>position<sp/>in<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>input<sp/>buffer<sp/>in<sp/>bytes,<sp/>not<sp/>including<sp/>room<sp/>for<sp/>EOB</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>characters.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structyy__buffer__state_1o3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref><sp/>yy_buf_size;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>characters<sp/>read<sp/>into<sp/>yy_ch_buf,<sp/>not<sp/>including<sp/>EOB</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>characters.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structyy__buffer__state_1o4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_n_chars;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>we<sp/>&quot;own&quot;<sp/>the<sp/>buffer<sp/>-<sp/>i.e.,<sp/>we<sp/>know<sp/>we<sp/>created<sp/>it,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>can<sp/>realloc()<sp/>it<sp/>to<sp/>grow<sp/>it,<sp/>and<sp/>should<sp/>free()<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>delete<sp/>it.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structyy__buffer__state_1o5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_is_our_buffer;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>this<sp/>is<sp/>an<sp/>&quot;interactive&quot;<sp/>input<sp/>source;<sp/>if<sp/>so,<sp/>and</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>we&apos;re<sp/>using<sp/>stdio<sp/>for<sp/>input,<sp/>then<sp/>we<sp/>want<sp/>to<sp/>use<sp/>getc()</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>instead<sp/>of<sp/>fread(),<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>stop<sp/>fetching<sp/>input<sp/>after</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>each<sp/>newline.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="structyy__buffer__state_1o6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_is_interactive;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>we&apos;re<sp/>considered<sp/>to<sp/>be<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>line.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>so,<sp/>&apos;^&apos;<sp/>rules<sp/>will<sp/>be<sp/>active<sp/>on<sp/>the<sp/>next<sp/>match,<sp/>otherwise</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>not.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structyy__buffer__state_1o7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_at_bol;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>to<sp/>try<sp/>to<sp/>fill<sp/>the<sp/>input<sp/>buffer<sp/>when<sp/>we<sp/>reach<sp/>the</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>end<sp/>of<sp/>it.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structyy__buffer__state_1o8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_fill_buffer;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structyy__buffer__state_1o9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_buffer_status;</highlight></codeline>
<codeline lineno="186" refid="conf__lex_8c_1a19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_BUFFER_NEW<sp/>0</highlight></codeline>
<codeline lineno="187" refid="conf__lex_8c_1a20" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_BUFFER_NORMAL<sp/>1</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>an<sp/>EOF&apos;s<sp/>been<sp/>seen<sp/>but<sp/>there&apos;s<sp/>still<sp/>some<sp/>text<sp/>to<sp/>process</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>we<sp/>mark<sp/>the<sp/>buffer<sp/>as<sp/>YY_EOF_PENDING,<sp/>to<sp/>indicate<sp/>that<sp/>we</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>shouldn&apos;t<sp/>try<sp/>reading<sp/>from<sp/>the<sp/>input<sp/>source<sp/>any<sp/>more.<sp/><sp/>We<sp/>might</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>still<sp/>have<sp/>a<sp/>bunch<sp/>of<sp/>tokens<sp/>to<sp/>match,<sp/>though,<sp/>because<sp/>of</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>possible<sp/>backing-up.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>we<sp/>actually<sp/>see<sp/>the<sp/>EOF,<sp/>we<sp/>change<sp/>the<sp/>status<sp/>to<sp/>&quot;new&quot;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(via<sp/>yyrestart()),<sp/>so<sp/>that<sp/>the<sp/>user<sp/>can<sp/>continue<sp/>scanning<sp/>by</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>pointing<sp/>yyin<sp/>at<sp/>a<sp/>new<sp/>input<sp/>file.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="conf__lex_8c_1a21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_BUFFER_EOF_PENDING<sp/>2</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_current_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>provide<sp/>macros<sp/>for<sp/>accessing<sp/>buffer<sp/>states<sp/>in<sp/>case<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>future<sp/>we<sp/>want<sp/>to<sp/>put<sp/>the<sp/>buffer<sp/>states<sp/>in<sp/>a<sp/>more<sp/>general</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>&quot;scanner<sp/>state&quot;.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="conf__lex_8c_1a22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_CURRENT_BUFFER<sp/>yy_current_buffer</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yy_hold_char<sp/>holds<sp/>the<sp/>character<sp/>lost<sp/>when<sp/>yytext<sp/>is<sp/>formed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_n_chars;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>characters<sp/>read<sp/>into<sp/>yy_ch_buf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="conf__lex_8c_1a64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyleng;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Points<sp/>to<sp/>current<sp/>character<sp/>in<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_c_buf_p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_init<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>whether<sp/>we<sp/>need<sp/>to<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_start<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>state<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flag<sp/>which<sp/>is<sp/>used<sp/>to<sp/>allow<sp/>yywrap()&apos;s<sp/>to<sp/>do<sp/>buffer<sp/>switches</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>instead<sp/>of<sp/>setting<sp/>up<sp/>a<sp/>fresh<sp/>yyin.<sp/><sp/>A<sp/>bit<sp/>of<sp/>a<sp/>hack<sp/>...</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_did_buffer_switch_on_eof;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyrestart<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>FILE<sp/>*input_file<sp/>));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_switch_to_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>YY_BUFFER_STATE<sp/>new_buffer<sp/>));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_load_buffer_state<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_create_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>FILE<sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_delete_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>YY_BUFFER_STATE<sp/>b<sp/>));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_init_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>YY_BUFFER_STATE<sp/>b,<sp/>FILE<sp/>*file<sp/>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flush_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>YY_BUFFER_STATE<sp/>b<sp/>));</highlight></codeline>
<codeline lineno="236" refid="conf__lex_8c_1a23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_FLUSH_BUFFER<sp/>yy_flush_buffer(<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/>yy_size_t<sp/>size<sp/>));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_string<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_str<sp/>));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_bytes<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_alloc<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yy_size_t<sp/>));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_realloc<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>yy_size_t<sp/>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_free<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="conf__lex_8c_1a24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yy_new_buffer<sp/>yy_create_buffer</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="conf__lex_8c_1a25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yy_set_interactive(is_interactive)<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!<sp/>yy_current_buffer<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=<sp/>yy_create_buffer(<sp/>yyin,<sp/>YY_BUF_SIZE<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;yy_is_interactive<sp/>=<sp/>is_interactive;<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="conf__lex_8c_1a26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yy_set_bol(at_bol)<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!<sp/>yy_current_buffer<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=<sp/>yy_create_buffer(<sp/>yyin,<sp/>YY_BUF_SIZE<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;yy_at_bol<sp/>=<sp/>at_bol;<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="conf__lex_8c_1a27" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_AT_BOL()<sp/>(yy_current_buffer-&gt;yy_at_bol)</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="conf__lex_8c_1a75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>YY_CHAR;</highlight></codeline>
<codeline lineno="265" refid="conf__lex_8c_1a65" refkind="member"><highlight class="normal">FILE<sp/>*<ref refid="conf__lex_8c_1a65" kindref="member">yyin</ref><sp/>=<sp/>(FILE<sp/>*)<sp/>0,<sp/>*<ref refid="conf__lex_8c_1a66" kindref="member">yyout</ref><sp/>=<sp/>(FILE<sp/>*)<sp/>0;</highlight></codeline>
<codeline lineno="266" refid="conf__lex_8c_1a76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_state_type;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yytext;</highlight></codeline>
<codeline lineno="268" refid="conf__lex_8c_1a28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>yytext_ptr<sp/>yytext</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_get_previous_state<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_try_NUL_trans<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yy_state_type<sp/>current_state<sp/>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_get_next_buffer<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_fatal_error<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[]<sp/>));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Done<sp/>after<sp/>the<sp/>current<sp/>pattern<sp/>has<sp/>been<sp/>matched<sp/>and<sp/>before<sp/>the</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>corresponding<sp/>action<sp/>-<sp/>sets<sp/>up<sp/>yytext.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="conf__lex_8c_1a29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_DO_BEFORE_ACTION<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytext_ptr<sp/>=<sp/>yy_bp;<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyleng<sp/>=<sp/>(int)<sp/>(yy_cp<sp/>-<sp/>yy_bp);<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_hold_char<sp/>=<sp/>*yy_cp;<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>&apos;\0&apos;;<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="conf__lex_8c_1a30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_NUM_RULES<sp/>23</highlight></codeline>
<codeline lineno="286" refid="conf__lex_8c_1a31" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_END_OF_BUFFER<sp/>24</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_accept[56]<sp/>=</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/>22,<sp/><sp/><sp/>20,<sp/><sp/><sp/>21,<sp/><sp/><sp/>22,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>5,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/>13,<sp/><sp/><sp/>13,<sp/><sp/><sp/>12,<sp/><sp/><sp/>11,<sp/><sp/><sp/>13,<sp/><sp/><sp/>10,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/>18,<sp/><sp/><sp/>17,<sp/><sp/><sp/>18,<sp/><sp/><sp/>16,<sp/><sp/><sp/>15,<sp/><sp/><sp/>15,<sp/><sp/><sp/>14,<sp/><sp/><sp/>15,<sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_ec[256]<sp/>=</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>3,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/>12,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>13,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_meta[14]<sp/>=</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_base[64]<sp/>=</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/>41,<sp/><sp/><sp/>35,<sp/><sp/><sp/>30,<sp/><sp/><sp/>29,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/>30,<sp/><sp/><sp/>29,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>11,<sp/><sp/><sp/>10,<sp/><sp/><sp/>33,<sp/><sp/><sp/>43,<sp/><sp/><sp/>53,<sp/><sp/><sp/>58,<sp/><sp/><sp/>63,<sp/><sp/><sp/>67,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>14,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>11,<sp/><sp/><sp/>91,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>10,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>9,<sp/><sp/><sp/><sp/>8,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>91,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>91,<sp/><sp/><sp/>72,<sp/><sp/><sp/>75,<sp/><sp/><sp/>78,<sp/><sp/><sp/>81,<sp/><sp/><sp/>84,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>87</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_def[64]<sp/>=</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>56,<sp/><sp/><sp/>56,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>11,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/>57,<sp/><sp/><sp/>57,<sp/><sp/><sp/>58,<sp/><sp/><sp/>58,<sp/><sp/><sp/>59,<sp/><sp/><sp/>59,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>60,<sp/><sp/><sp/>61,<sp/><sp/><sp/>55,<sp/><sp/><sp/>62,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>63,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>60,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>60,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>60,<sp/><sp/><sp/>60,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>61,<sp/><sp/><sp/>62,<sp/><sp/><sp/>63,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_nxt[105]<sp/>=</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>23,<sp/><sp/><sp/>24,<sp/><sp/><sp/>53,<sp/><sp/><sp/>25,<sp/><sp/><sp/>23,<sp/><sp/><sp/>24,<sp/><sp/><sp/>52,<sp/><sp/><sp/>25,<sp/><sp/><sp/>28,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>51,<sp/><sp/><sp/>51,<sp/><sp/><sp/>51,<sp/><sp/><sp/>51,<sp/><sp/><sp/>29,<sp/><sp/><sp/>28,<sp/><sp/><sp/>51,<sp/><sp/><sp/>55,<sp/><sp/><sp/>34,<sp/><sp/><sp/>34,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>29,<sp/><sp/><sp/>31,<sp/><sp/><sp/>23,<sp/><sp/><sp/>24,<sp/><sp/><sp/>32,<sp/><sp/><sp/>25,<sp/><sp/><sp/>33,<sp/><sp/><sp/>31,<sp/><sp/><sp/>31,<sp/><sp/><sp/>22,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>31,<sp/><sp/><sp/>31,<sp/><sp/><sp/>31,<sp/><sp/><sp/>31,<sp/><sp/><sp/>36,<sp/><sp/><sp/>37,<sp/><sp/><sp/>38,<sp/><sp/><sp/>39,<sp/><sp/><sp/>30,<sp/><sp/><sp/>30,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27,<sp/><sp/><sp/>27,<sp/><sp/><sp/>26,<sp/><sp/><sp/>40,<sp/><sp/><sp/>36,<sp/><sp/><sp/>37,<sp/><sp/><sp/>38,<sp/><sp/><sp/>39,<sp/><sp/><sp/>26,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>40,<sp/><sp/><sp/>42,<sp/><sp/><sp/>43,<sp/><sp/><sp/>55,<sp/><sp/><sp/>44,<sp/><sp/><sp/>45,<sp/><sp/><sp/>42,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>43,<sp/><sp/><sp/>55,<sp/><sp/><sp/>44,<sp/><sp/><sp/>45,<sp/><sp/><sp/>47,<sp/><sp/><sp/>48,<sp/><sp/><sp/>55,<sp/><sp/><sp/>49,<sp/><sp/><sp/>47,<sp/><sp/><sp/>48,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>49,<sp/><sp/><sp/>22,<sp/><sp/><sp/>22,<sp/><sp/><sp/>22,<sp/><sp/><sp/>35,<sp/><sp/><sp/>35,<sp/><sp/><sp/>35,<sp/><sp/><sp/>41,<sp/><sp/><sp/>41,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>41,<sp/><sp/><sp/>46,<sp/><sp/><sp/>46,<sp/><sp/><sp/>46,<sp/><sp/><sp/>50,<sp/><sp/><sp/>50,<sp/><sp/><sp/>50,<sp/><sp/><sp/>54,<sp/><sp/><sp/>55,<sp/><sp/><sp/>54,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a3" kindref="member">yyconst</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_chk[105]<sp/>=</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/>62,<sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/>61,<sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/>7,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,<sp/><sp/><sp/>49,<sp/><sp/><sp/>44,<sp/><sp/><sp/>39,<sp/><sp/><sp/><sp/>7,<sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/>25,<sp/><sp/><sp/>21,<sp/><sp/><sp/>14,<sp/><sp/><sp/>13,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>11,<sp/><sp/><sp/>15,<sp/><sp/><sp/>15,<sp/><sp/><sp/>15,<sp/><sp/><sp/>15,<sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/>9,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/>5,<sp/><sp/><sp/><sp/>4,<sp/><sp/><sp/>15,<sp/><sp/><sp/>16,<sp/><sp/><sp/>16,<sp/><sp/><sp/>16,<sp/><sp/><sp/>16,<sp/><sp/><sp/><sp/>3,<sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>16,<sp/><sp/><sp/>17,<sp/><sp/><sp/>17,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>17,<sp/><sp/><sp/>17,<sp/><sp/><sp/>18,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>18,<sp/><sp/><sp/>18,<sp/><sp/><sp/>19,<sp/><sp/><sp/>19,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>19,<sp/><sp/><sp/>20,<sp/><sp/><sp/>20,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>20,<sp/><sp/><sp/>56,<sp/><sp/><sp/>56,<sp/><sp/><sp/>56,<sp/><sp/><sp/>57,<sp/><sp/><sp/>57,<sp/><sp/><sp/>57,<sp/><sp/><sp/>58,<sp/><sp/><sp/>58,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>58,<sp/><sp/><sp/>59,<sp/><sp/><sp/>59,<sp/><sp/><sp/>59,<sp/><sp/><sp/>60,<sp/><sp/><sp/>60,<sp/><sp/><sp/>60,<sp/><sp/><sp/>63,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>63,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55,<sp/><sp/><sp/>55</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_last_accepting_state;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_last_accepting_cpos;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>intent<sp/>behind<sp/>this<sp/>definition<sp/>is<sp/>that<sp/>it&apos;ll<sp/>catch</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>any<sp/>uses<sp/>of<sp/>REJECT<sp/>which<sp/>flex<sp/>missed.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="conf__lex_8c_1a32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REJECT<sp/>reject_used_but_not_detected</highlight></codeline>
<codeline lineno="396" refid="conf__lex_8c_1a33" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yymore()<sp/>yymore_used_but_not_detected</highlight></codeline>
<codeline lineno="397" refid="conf__lex_8c_1a34" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_MORE_ADJ<sp/>0</highlight></codeline>
<codeline lineno="398" refid="conf__lex_8c_1a35" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_RESTORE_YY_MORE_OFFSET</highlight></codeline>
<codeline lineno="399" refid="conf__lex_8c_1a77" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yytext;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>1<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="401" refid="conf__lex_8c_1a36" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INITIAL<sp/>0</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#line<sp/>2<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="analyse_8h" kindref="compound">analyse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conf__yacc_8h" kindref="compound">conf_yacc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Numero<sp/>de<sp/>la<sp/>ligne<sp/>courante<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="conf__lex_8c_1a87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yylineno;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Traitement<sp/>des<sp/>messages<sp/>d&apos;erreur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="conf__yacc_8c_1a88" kindref="member">set_error</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="conf__lex_8c_1a37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERRLEN<sp/>1024</highlight></codeline>
<codeline lineno="416" refid="conf__lex_8c_1a88" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>[ERRLEN]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Stockage<sp/>des<sp/>chaines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="conf__lex_8c_1a89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a89" kindref="member">YY_PARSED_STRING</ref>[MAXSTRLEN];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="conf__lex_8c_1a109" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a109" kindref="member">YY_BUFFER_APPEND</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>s){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>strncat(<sp/><ref refid="conf__lex_8c_1a89" kindref="member">YY_PARSED_STRING</ref>,s,<sp/><ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="conf__lex_8c_1a110" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a110" kindref="member">YY_BUFFER_RESET</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;MAXSTRLEN;i++){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a89" kindref="member">YY_PARSED_STRING</ref>[i]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialisation<sp/>du<sp/>parser<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="conf__lex_8c_1a38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_USER_INIT<sp/>{\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>yylineno=1;\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BEGIN<sp/>YY_INIT;\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG_PARSING</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_LEX<sp/><sp/><sp/>printf</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="442" refid="conf__lex_8c_1a39" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_LEX</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lettre<sp/>posant<sp/>probleme<sp/>dans<sp/>une<sp/>chaine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>comment<sp/>est<sp/>compose<sp/>un<sp/>identifiant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="conf__lex_8c_1a40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_INIT<sp/>1</highlight></codeline>
<codeline lineno="449" refid="conf__lex_8c_1a41" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BLOC<sp/>2</highlight></codeline>
<codeline lineno="450" refid="conf__lex_8c_1a42" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INBLOC<sp/>3</highlight></codeline>
<codeline lineno="451" refid="conf__lex_8c_1a43" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>AFFECT<sp/>4</highlight></codeline>
<codeline lineno="452" refid="conf__lex_8c_1a44" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VALUE<sp/>5</highlight></codeline>
<codeline lineno="453" refid="conf__lex_8c_1a45" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDVALUE<sp/>6</highlight></codeline>
<codeline lineno="454" refid="conf__lex_8c_1a46" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STRING1<sp/>7</highlight></codeline>
<codeline lineno="455" refid="conf__lex_8c_1a47" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STRING2<sp/>8</highlight></codeline>
<codeline lineno="456" refid="conf__lex_8c_1a48" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ESC1<sp/>9</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>459<sp/>&quot;conf_lex.c&quot;</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>after<sp/>this<sp/>point<sp/>can<sp/>all<sp/>be<sp/>overridden<sp/>by<sp/>user<sp/>definitions<sp/>in</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>section<sp/>1.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_SKIP_YYWRAP</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yywrap<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yywrap<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_UNPUT</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyunput<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr<sp/>));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>yytext_ptr</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_strncpy<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_NEED_STRLEN</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_flex_strlen<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_INPUT</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyinput<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YY_STACK_USED</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_start_stack_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_start_stack_depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yy_start_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_PUSH_STATE</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_push_state<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_state<sp/>));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_POP_STATE</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_pop_state<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_TOP_STATE</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_top_state<sp/><ref refid="conf__lex_8c_1a4" kindref="member">YY_PROTO</ref>((<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="507" refid="conf__lex_8c_1a49" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_NO_PUSH_STATE<sp/>1</highlight></codeline>
<codeline lineno="508" refid="conf__lex_8c_1a50" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_NO_POP_STATE<sp/>1</highlight></codeline>
<codeline lineno="509" refid="conf__lex_8c_1a51" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_NO_TOP_STATE<sp/>1</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_MALLOC_DECL</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"></highlight><highlight class="normal">YY_MALLOC_DECL</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>__STDC__</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Just<sp/>try<sp/>to<sp/>get<sp/>by<sp/>without<sp/>declaring<sp/>the<sp/>routines.<sp/><sp/>This<sp/>will<sp/>fail</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>miserably<sp/>on<sp/>non-ANSI<sp/>systems<sp/>for<sp/>which<sp/>sizeof(size_t)<sp/>!=<sp/>sizeof(int)</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>or<sp/>sizeof(void*)<sp/>!=<sp/>sizeof(int).</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Amount<sp/>of<sp/>stuff<sp/>to<sp/>slurp<sp/>up<sp/>with<sp/>each<sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_READ_BUF_SIZE</highlight></codeline>
<codeline lineno="529" refid="conf__lex_8c_1a52" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_READ_BUF_SIZE<sp/>8192</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>whatever<sp/>the<sp/>last<sp/>rule<sp/>matched<sp/>to<sp/>the<sp/>standard<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ECHO</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>This<sp/>used<sp/>to<sp/>be<sp/>an<sp/>fputs(),<sp/>but<sp/>since<sp/>the<sp/>string<sp/>might<sp/>contain<sp/>NUL&apos;s,</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*<sp/>we<sp/>now<sp/>use<sp/>fwrite().</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="conf__lex_8c_1a53" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ECHO<sp/>(void)<sp/>fwrite(<sp/>yytext,<sp/>yyleng,<sp/>1,<sp/>yyout<sp/>)</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Gets<sp/>input<sp/>and<sp/>stuffs<sp/>it<sp/>into<sp/>&quot;buf&quot;.<sp/><sp/>number<sp/>of<sp/>characters<sp/>read,<sp/>or<sp/>YY_NULL,</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>is<sp/>returned<sp/>in<sp/>&quot;result&quot;.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_INPUT</highlight></codeline>
<codeline lineno="545" refid="conf__lex_8c_1a54" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_INPUT(buf,result,max_size)<sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>yy_current_buffer-&gt;yy_is_interactive<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>c<sp/>=<sp/>&apos;*&apos;,<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>max_size<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c<sp/>=<sp/>getc(<sp/>yyin<sp/>))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>&apos;\n&apos;;<sp/>++n<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>(char)<sp/>c;<sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>c<sp/>==<sp/>&apos;\n&apos;<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n++]<sp/>=<sp/>(char)<sp/>c;<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>c<sp/>==<sp/>EOF<sp/>&amp;&amp;<sp/>ferror(<sp/>yyin<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_FATAL_ERROR(<sp/>&quot;input<sp/>in<sp/>flex<sp/>scanner<sp/>failed&quot;<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(<sp/>((result<sp/>=<sp/>fread(<sp/>buf,<sp/>1,<sp/>max_size,<sp/>yyin<sp/>))<sp/>==<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ferror(<sp/>yyin<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_FATAL_ERROR(<sp/>&quot;input<sp/>in<sp/>flex<sp/>scanner<sp/>failed&quot;<sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>semi-colon<sp/>after<sp/>return;<sp/>correct<sp/>usage<sp/>is<sp/>to<sp/>write<sp/>&quot;yyterminate();&quot;<sp/>-</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>we<sp/>don&apos;t<sp/>want<sp/>an<sp/>extra<sp/>&apos;;&apos;<sp/>after<sp/>the<sp/>&quot;return&quot;<sp/>because<sp/>that<sp/>will<sp/>cause</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>some<sp/>compilers<sp/>to<sp/>complain<sp/>about<sp/>unreachable<sp/>statements.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>yyterminate</highlight></codeline>
<codeline lineno="568" refid="conf__lex_8c_1a55" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yyterminate()<sp/>return<sp/>YY_NULL</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>entries<sp/>by<sp/>which<sp/>start-condition<sp/>stack<sp/>grows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_START_STACK_INCR</highlight></codeline>
<codeline lineno="573" refid="conf__lex_8c_1a56" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_START_STACK_INCR<sp/>25</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Report<sp/>a<sp/>fatal<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_FATAL_ERROR</highlight></codeline>
<codeline lineno="578" refid="conf__lex_8c_1a57" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_FATAL_ERROR(msg)<sp/>yy_fatal_error(<sp/>msg<sp/>)</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Default<sp/>declaration<sp/>of<sp/>generated<sp/>scanner<sp/>-<sp/>a<sp/>define<sp/>so<sp/>the<sp/>user<sp/>can</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>easily<sp/>add<sp/>parameters.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_DECL</highlight></codeline>
<codeline lineno="585" refid="conf__lex_8c_1a58" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_DECL<sp/>int<sp/>yylex<sp/>YY_PROTO((<sp/>void<sp/>))</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Code<sp/>executed<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>each<sp/>rule,<sp/>after<sp/>yytext<sp/>and<sp/>yyleng</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/>have<sp/>been<sp/>set<sp/>up.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_USER_ACTION</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_USER_ACTION</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Code<sp/>executed<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>rule.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_BREAK</highlight></codeline>
<codeline lineno="597" refid="conf__lex_8c_1a59" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_BREAK<sp/>break;</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="conf__lex_8c_1a60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YY_RULE_SETUP<sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_USER_ACTION</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><ref refid="conf__lex_8c_1a58" kindref="member">YY_DECL</ref></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_current_state;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_cp<sp/>=<sp/>NULL,<sp/>*<ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_act;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>61<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>615<sp/>&quot;conf_lex.c&quot;</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_init<sp/>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USER_INIT</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_USER_INIT;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_start<sp/>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_start<sp/>=<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>start<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yyin<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a65" kindref="member">yyin</ref><sp/>=<sp/>stdin;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yyout<sp/>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a66" kindref="member">yyout</ref><sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_create_buffer(<sp/><ref refid="conf__lex_8c_1a65" kindref="member">yyin</ref>,<sp/><ref refid="conf__lex_8c_1a13" kindref="member">YY_BUF_SIZE</ref><sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_load_buffer_state();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loops<sp/>until<sp/>end-of-file<sp/>is<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Support<sp/>of<sp/>yytext.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yy_bp<sp/>points<sp/>to<sp/>the<sp/>position<sp/>in<sp/>yy_ch_buf<sp/>of<sp/>the<sp/>start<sp/>of</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>current<sp/>run.</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_start;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">yy_match:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a75" kindref="member">YY_CHAR</ref><sp/>yy_c<sp/>=<sp/>yy_ec[<ref refid="conf__lex_8c_1a6" kindref="member">YY_SC_TO_UI</ref>(*yy_cp)];</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_accept[yy_current_state]<sp/>)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_state<sp/>=<sp/>yy_current_state;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_cpos<sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>yy_chk[yy_base[yy_current_state]<sp/>+<sp/>yy_c]<sp/>!=<sp/>yy_current_state<sp/>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>(int)<sp/>yy_def[yy_current_state];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_state<sp/>&gt;=<sp/>56<sp/>)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c<sp/>=<sp/>yy_meta[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_nxt[yy_base[yy_current_state]<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++yy_cp;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>yy_base[yy_current_state]<sp/>!=<sp/>91<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">yy_find_action:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_act<sp/>=<sp/>yy_accept[yy_current_state];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_act<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>have<sp/>to<sp/>back<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_last_accepting_cpos;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_last_accepting_state;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_act<sp/>=<sp/>yy_accept[yy_current_state];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_DO_BEFORE_ACTION;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal">do_action:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>label<sp/>is<sp/>used<sp/>only<sp/>to<sp/>access<sp/>EOF<sp/>actions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>yy_act<sp/>)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>beginning<sp/>of<sp/>action<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>back<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>undo<sp/>the<sp/>effects<sp/>of<sp/>YY_DO_BEFORE_ACTION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_last_accepting_cpos;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_last_accepting_state;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yy_find_action;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>65<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>identifier<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;[bloc:%s]\n&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/>strncpy(<ref refid="conf__yacc_8c_1a75" kindref="member">yylval</ref>.<ref refid="unionYYSTYPE_1o0" kindref="member">str_val</ref>,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>,<ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);<sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>BLOC;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IDENTIFIER;}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>68<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>identifier<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;BEGIN_BLOCK\n&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>INBLOC;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BEGIN_BLOCK;}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>70<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>identifier<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;[id:%s&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);strncpy(<ref refid="conf__yacc_8c_1a75" kindref="member">yylval</ref>.<ref refid="unionYYSTYPE_1o0" kindref="member">str_val</ref>,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>,<ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);<sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>AFFECT;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IDENTIFIER;}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>71<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>identifier<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;END_BLOCK\n&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>YY_INIT;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>END_BLOCK;}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>73<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>identifier<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>VALUE;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AFFECTATION;}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>75<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="725"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>STRING1;<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;value:&lt;&quot;</highlight><highlight class="normal">);<ref refid="conf__lex_8c_1a110" kindref="member">YY_BUFFER_RESET</ref>();}<sp/></highlight><highlight class="comment">/*<sp/>ouverture<sp/>string<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>76<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>STRING2;<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;value:&lt;&quot;</highlight><highlight class="normal">);<ref refid="conf__lex_8c_1a110" kindref="member">YY_BUFFER_RESET</ref>();}<sp/></highlight><highlight class="comment">/*<sp/>ouverture<sp/>string<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>77<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight><highlight class="comment">/*<sp/>valeur<sp/>*/</highlight><highlight class="normal"><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;value:%s&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>ENDVALUE;strncpy(<ref refid="conf__yacc_8c_1a75" kindref="member">yylval</ref>.<ref refid="unionYYSTYPE_1o0" kindref="member">str_val</ref>,<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>,<ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KEYVALUE;}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>79<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>INBLOC;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>END_AFFECT;}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>81<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>ESC1;}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>82<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="750"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);strncpy(<ref refid="conf__yacc_8c_1a75" kindref="member">yylval</ref>.<ref refid="unionYYSTYPE_1o0" kindref="member">str_val</ref>,<ref refid="conf__lex_8c_1a89" kindref="member">YY_PARSED_STRING</ref>,<ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>ENDVALUE;</highlight><highlight class="comment">/*<sp/>chaine<sp/>finie<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KEYVALUE;}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>83<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"></highlight><highlight class="normal">{snprintf(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>,<ref refid="conf__lex_8c_1a37" kindref="member">ERRLEN</ref>,</highlight><highlight class="stringliteral">&quot;line<sp/>%d:<sp/>missing<sp/>closing<sp/>quote.&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__yacc_8c_1a88" kindref="member">set_error</ref>(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>);<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>++;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ERROR_;}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>84<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a109" kindref="member">YY_BUFFER_APPEND</ref>(<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);</highlight><highlight class="comment">/*<sp/>caractere<sp/>de<sp/>la<sp/>chaine<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>86<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>STRING1;<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>++;</highlight><highlight class="comment">/*<sp/>ignore<sp/>un<sp/>saut<sp/>de<sp/>ligne<sp/>echappe*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>87<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<ref refid="conf__lex_8c_1a109" kindref="member">YY_BUFFER_APPEND</ref>(<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>STRING1;</highlight><highlight class="comment">/*<sp/>caractere<sp/>de<sp/>la<sp/>chaine<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>89<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);strncpy(<ref refid="conf__yacc_8c_1a75" kindref="member">yylval</ref>.<ref refid="unionYYSTYPE_1o0" kindref="member">str_val</ref>,<ref refid="conf__lex_8c_1a89" kindref="member">YY_PARSED_STRING</ref>,<ref refid="analyse_8h_1a0" kindref="member">MAXSTRLEN</ref>);<ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref><sp/>ENDVALUE;</highlight><highlight class="comment">/*<sp/>chaine<sp/>finie<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>KEYVALUE;}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>17:</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>90<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="780"><highlight class="preprocessor"></highlight><highlight class="normal">{snprintf(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>,<ref refid="conf__lex_8c_1a37" kindref="member">ERRLEN</ref>,</highlight><highlight class="stringliteral">&quot;line<sp/>%d:<sp/>closing<sp/>quote<sp/>missing.&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__yacc_8c_1a88" kindref="member">set_error</ref>(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>);<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>++;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ERROR_;}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>18:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>91<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"></highlight><highlight class="normal">{<ref refid="conf__lex_8c_1a109" kindref="member">YY_BUFFER_APPEND</ref>(<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<ref refid="conf__lex_8c_1a39" kindref="member">DEBUG_LEX</ref>(</highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);</highlight><highlight class="comment">/*<sp/>caractere<sp/>de<sp/>la<sp/>chaine<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>19:</highlight></codeline>
<codeline lineno="788"><highlight class="normal">*yy_cp<sp/>=<sp/>yy_hold_char;<sp/></highlight><highlight class="comment">/*<sp/>undo<sp/>effects<sp/>of<sp/>setting<sp/>up<sp/>yytext<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal">yy_c_buf_p<sp/>=<sp/>yy_cp<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">YY_DO_BEFORE_ACTION;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>yytext<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>93<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"></highlight><highlight class="normal">;</highlight><highlight class="comment">/*<sp/>ignore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>20:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>94<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="798"><highlight class="preprocessor"></highlight><highlight class="normal">;</highlight><highlight class="comment">/*<sp/>ignore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>21:</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>95<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="803"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>++;</highlight><highlight class="comment">/*<sp/>ignore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>22:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>97<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="808"><highlight class="preprocessor"></highlight><highlight class="normal">{<sp/>snprintf(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>,<ref refid="conf__lex_8c_1a37" kindref="member">ERRLEN</ref>,</highlight><highlight class="stringliteral">&quot;line<sp/>%d:<sp/>&apos;%c&apos;<sp/>unexpected&quot;</highlight><highlight class="normal">,<ref refid="conf__lex_8c_1a87" kindref="member">yylineno</ref>,*<ref refid="conf__lex_8c_1a77" kindref="member">yytext</ref>);<sp/><ref refid="conf__yacc_8c_1a88" kindref="member">set_error</ref>(<ref refid="conf__lex_8c_1a88" kindref="member">err_str</ref>);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ERROR_;}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>23:</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><ref refid="conf__lex_8c_1a60" kindref="member">YY_RULE_SETUP</ref></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>99<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="813"><highlight class="preprocessor"></highlight><highlight class="normal">ECHO;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a59" kindref="member">YY_BREAK</ref></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#line<sp/>816<sp/>&quot;conf_lex.c&quot;</highlight></codeline>
<codeline lineno="816"><highlight class="preprocessor"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a36" kindref="member">INITIAL</ref>):</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a40" kindref="member">YY_INIT</ref>):</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a41" kindref="member">BLOC</ref>):</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a42" kindref="member">INBLOC</ref>):</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a43" kindref="member">AFFECT</ref>):</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a44" kindref="member">VALUE</ref>):</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a45" kindref="member">ENDVALUE</ref>):</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a46" kindref="member">STRING1</ref>):</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a47" kindref="member">STRING2</ref>):</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a48" kindref="member">ESC1</ref>):</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a55" kindref="member">yyterminate</ref>();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a31" kindref="member">YY_END_OF_BUFFER</ref>:</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Amount<sp/>of<sp/>text<sp/>matched<sp/>not<sp/>including<sp/>the<sp/>EOB<sp/>char.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_amount_of_matched_text<sp/>=<sp/>(int)<sp/>(yy_cp<sp/>-<sp/>yytext_ptr)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>the<sp/>effects<sp/>of<sp/>YY_DO_BEFORE_ACTION.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a35" kindref="member">YY_RESTORE_YY_MORE_OFFSET</ref></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>==<sp/>YY_BUFFER_NEW<sp/>)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>scanning<sp/>a<sp/>new<sp/>file<sp/>or<sp/>input<sp/>source.<sp/><sp/>It&apos;s</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>possible<sp/>that<sp/>this<sp/>happened<sp/>because<sp/>the<sp/>user</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>pointed<sp/>yyin<sp/>at<sp/>a<sp/>new<sp/>source<sp/>and<sp/>called</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>yylex().<sp/><sp/>If<sp/>so,<sp/>then<sp/>we<sp/>have<sp/>to<sp/>assure</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consistency<sp/>between<sp/>yy_current_buffer<sp/>and<sp/>our</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>globals.<sp/><sp/>Here<sp/>is<sp/>the<sp/>right<sp/>place<sp/>to<sp/>do<sp/>so,<sp/>because</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>the<sp/>first<sp/>action<sp/>(other<sp/>than<sp/>possibly<sp/>a</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>back-up)<sp/>that<sp/>will<sp/>match<sp/>for<sp/>the<sp/>new<sp/>input<sp/>source.</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_n_chars<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o0" kindref="member">yy_input_file</ref><sp/>=<sp/>yyin;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>=<sp/>YY_BUFFER_NORMAL;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>here<sp/>we<sp/>test<sp/>for<sp/>yy_c_buf_p<sp/>&quot;&lt;=&quot;<sp/>to<sp/>the<sp/>position</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>first<sp/>EOB<sp/>in<sp/>the<sp/>buffer,<sp/>since<sp/>yy_c_buf_p<sp/>will</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>already<sp/>have<sp/>been<sp/>incremented<sp/>past<sp/>the<sp/>NUL<sp/>character</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(since<sp/>all<sp/>states<sp/>make<sp/>transitions<sp/>on<sp/>EOB<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>end-of-buffer<sp/>state).<sp/><sp/>Contrast<sp/>this<sp/>with<sp/>the<sp/>test</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>input().</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_c_buf_p<sp/>&lt;=<sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars]<sp/>)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>was<sp/>really<sp/>a<sp/>NUL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_next_state;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>yy_amount_of_matched_text;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_get_previous_state();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Okay,<sp/>we&apos;re<sp/>now<sp/>positioned<sp/>to<sp/>make<sp/>the<sp/>NUL</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>transition.<sp/><sp/>We<sp/>couldn&apos;t<sp/>have</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>yy_get_previous_state()<sp/>go<sp/>ahead<sp/>and<sp/>do<sp/>it</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>us<sp/>because<sp/>it<sp/>doesn&apos;t<sp/>know<sp/>how<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>the<sp/>possibility<sp/>of<sp/>jamming<sp/>(and<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>want<sp/>to<sp/>build<sp/>jamming<sp/>into<sp/>it<sp/>because<sp/>then<sp/>it</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>run<sp/>more<sp/>slowly).</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_next_state<sp/>=<sp/>yy_try_NUL_trans(<sp/>yy_current_state<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>YY_MORE_ADJ;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_next_state<sp/>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Consume<sp/>the<sp/>NUL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>++yy_c_buf_p;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_next_state;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yy_match;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yy_find_action;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>yy_get_next_buffer()<sp/>)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a15" kindref="member">EOB_ACT_END_OF_FILE</ref>:</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_did_buffer_switch_on_eof<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yywrap()<sp/>)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>because<sp/>we&apos;ve<sp/>taken<sp/>care<sp/>in</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>yy_get_next_buffer()<sp/>to<sp/>have<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>yytext,<sp/>we<sp/>can<sp/>now<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>yy_c_buf_p<sp/>so<sp/>that<sp/>if<sp/>some<sp/>total</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hoser<sp/>(like<sp/>flex<sp/>itself)<sp/>wants<sp/>to</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>the<sp/>scanner<sp/>after<sp/>we<sp/>return<sp/>the</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>YY_NULL,<sp/>it&apos;ll<sp/>still<sp/>work<sp/>-<sp/>another</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>YY_NULL<sp/>will<sp/>get<sp/>returned.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>YY_MORE_ADJ;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_act<sp/>=<sp/><ref refid="conf__lex_8c_1a10" kindref="member">YY_STATE_EOF</ref>(<ref refid="conf__lex_8c_1a8" kindref="member">YY_START</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>do_action;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_did_buffer_switch_on_eof<sp/>)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_NEW_FILE;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a14" kindref="member">EOB_ACT_CONTINUE_SCAN</ref>:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>yy_amount_of_matched_text;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_get_previous_state();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>YY_MORE_ADJ;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yy_match;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a16" kindref="member">EOB_ACT_LAST_MATCH</ref>:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars];</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_get_previous_state();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>YY_MORE_ADJ;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>yy_find_action;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fatal<sp/>flex<sp/>scanner<sp/>internal<sp/>error--no<sp/>action<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>action<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>scanning<sp/>one<sp/>token<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>yylex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yy_get_next_buffer<sp/>-<sp/>try<sp/>to<sp/>read<sp/>in<sp/>a<sp/>new<sp/>buffer</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>code<sp/>representing<sp/>an<sp/>action:</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>EOB_ACT_LAST_MATCH<sp/>-</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>EOB_ACT_CONTINUE_SCAN<sp/>-<sp/>continue<sp/>scanning<sp/>from<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>EOB_ACT_END_OF_FILE<sp/>-<sp/>end<sp/>of<sp/>file</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_get_next_buffer()</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source<sp/>=<sp/>yytext_ptr;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_to_move,<sp/>i;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_c_buf_p<sp/>&gt;<sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars<sp/>+<sp/>1]<sp/>)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fatal<sp/>flex<sp/>scanner<sp/>internal<sp/>error--end<sp/>of<sp/>buffer<sp/>missed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o8" kindref="member">yy_fill_buffer</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>try<sp/>to<sp/>fill<sp/>the<sp/>buffer,<sp/>so<sp/>this<sp/>is<sp/>an<sp/>EOF.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_c_buf_p<sp/>-<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>-<sp/><ref refid="conf__lex_8c_1a34" kindref="member">YY_MORE_ADJ</ref><sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>matched<sp/>a<sp/>single<sp/>character,<sp/>the<sp/>EOB,<sp/>so</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>treat<sp/>this<sp/>as<sp/>a<sp/>final<sp/>EOF.</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOB_ACT_END_OF_FILE;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>matched<sp/>some<sp/>text<sp/>prior<sp/>to<sp/>the<sp/>EOB,<sp/>first</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>process<sp/>it.</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOB_ACT_LAST_MATCH;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>read<sp/>more<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>move<sp/>last<sp/>chars<sp/>to<sp/>start<sp/>of<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_to_move<sp/>=<sp/>(int)<sp/>(yy_c_buf_p<sp/>-<sp/>yytext_ptr)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>number_to_move;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(dest++)<sp/>=<sp/>*(source++);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>==<sp/>YY_BUFFER_EOF_PENDING<sp/>)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>do<sp/>the<sp/>read,<sp/>it&apos;s<sp/>not<sp/>guaranteed<sp/>to<sp/>return<sp/>an<sp/>EOF,</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>force<sp/>an<sp/>EOF</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=<sp/>yy_n_chars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_to_read<sp/>=</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>-<sp/>number_to_move<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>num_to_read<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>enough<sp/>room<sp/>in<sp/>the<sp/>buffer<sp/>-<sp/>grow<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USES_REJECT</highlight></codeline>
<codeline lineno="1018"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;input<sp/>buffer<sp/>overflow,<sp/>can&apos;t<sp/>enlarge<sp/>buffer<sp/>because<sp/>scanner<sp/>uses<sp/>REJECT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1021"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>a<sp/>shorter<sp/>name<sp/>for<sp/>the<sp/>current<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>b<sp/>=<sp/>yy_current_buffer;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_c_buf_p_offset<sp/>=</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)<sp/>(yy_c_buf_p<sp/>-<sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b-&gt;<ref refid="structyy__buffer__state_1o5" kindref="member">yy_is_our_buffer</ref><sp/>)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_size<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>+=<sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Include<sp/>room<sp/>in<sp/>for<sp/>2<sp/>EOB<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_flex_realloc(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>+<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>grow<sp/>it,<sp/>we<sp/>don&apos;t<sp/>own<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fatal<sp/>error<sp/>-<sp/>scanner<sp/>input<sp/>buffer<sp/>overflow&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/>&amp;b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_c_buf_p_offset];</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_to_read<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>-</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_to_move<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1055"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num_to_read<sp/>&gt;<sp/>YY_READ_BUF_SIZE<sp/>)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_to_read<sp/>=<sp/>YY_READ_BUF_SIZE;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>more<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a54" kindref="member">YY_INPUT</ref>(<sp/>(&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[number_to_move]),</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_n_chars,<sp/>num_to_read<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=<sp/>yy_n_chars;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_n_chars<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>number_to_move<sp/>==<sp/>YY_MORE_ADJ<sp/>)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/>EOB_ACT_END_OF_FILE;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyrestart(<sp/>yyin<sp/>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/>EOB_ACT_LAST_MATCH;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>=</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_BUFFER_EOF_PENDING;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/>EOB_ACT_CONTINUE_SCAN;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_n_chars<sp/>+=<sp/>number_to_move;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars]<sp/>=<sp/>YY_END_OF_BUFFER_CHAR;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars<sp/>+<sp/>1]<sp/>=<sp/>YY_END_OF_BUFFER_CHAR;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>=<sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[0];</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yy_get_previous_state<sp/>-<sp/>get<sp/>the<sp/>state<sp/>just<sp/>before<sp/>the<sp/>EOB<sp/>char<sp/>was<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_get_previous_state()</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_cp;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_start;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>yy_cp<sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>YY_MORE_ADJ;<sp/>yy_cp<sp/>&lt;<sp/>yy_c_buf_p;<sp/>++yy_cp<sp/>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a75" kindref="member">YY_CHAR</ref><sp/>yy_c<sp/>=<sp/>(*yy_cp<sp/>?<sp/>yy_ec[<ref refid="conf__lex_8c_1a6" kindref="member">YY_SC_TO_UI</ref>(*yy_cp)]<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_accept[yy_current_state]<sp/>)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_state<sp/>=<sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_cpos<sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>yy_chk[yy_base[yy_current_state]<sp/>+<sp/>yy_c]<sp/>!=<sp/>yy_current_state<sp/>)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>(int)<sp/>yy_def[yy_current_state];</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_state<sp/>&gt;=<sp/>56<sp/>)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c<sp/>=<sp/>yy_meta[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_nxt[yy_base[yy_current_state]<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yy_try_NUL_trans<sp/>-<sp/>try<sp/>to<sp/>make<sp/>a<sp/>transition<sp/>on<sp/>the<sp/>NUL<sp/>character</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/>*<sp/>synopsis</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>next_state<sp/>=<sp/>yy_try_NUL_trans(<sp/>current_state<sp/>);</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_try_NUL_trans(<sp/>yy_state_type<sp/>yy_current_state<sp/>)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a76" kindref="member">yy_state_type</ref><sp/>yy_try_NUL_trans(<sp/>yy_current_state<sp/>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">yy_state_type<sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_is_jam;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a75" kindref="member">YY_CHAR</ref><sp/>yy_c<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_accept[yy_current_state]<sp/>)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_state<sp/>=<sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_last_accepting_cpos<sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>yy_chk[yy_base[yy_current_state]<sp/>+<sp/>yy_c]<sp/>!=<sp/>yy_current_state<sp/>)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>(int)<sp/>yy_def[yy_current_state];</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_state<sp/>&gt;=<sp/>56<sp/>)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c<sp/>=<sp/>yy_meta[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_state<sp/>=<sp/>yy_nxt[yy_base[yy_current_state]<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>yy_c];</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_is_jam<sp/>=<sp/>(yy_current_state<sp/>==<sp/>55);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy_is_jam<sp/>?<sp/>0<sp/>:<sp/>yy_current_state;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_UNPUT</highlight></codeline>
<codeline lineno="1162"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1163"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyunput(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_bp<sp/>)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyunput(<sp/>c,<sp/>yy_bp<sp/>)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">int<sp/>c;</highlight></codeline>
<codeline lineno="1167" refid="conf__lex_8c_1a90" refkind="member"><highlight class="normal">register<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_bp;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_cp<sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>undo<sp/>effects<sp/>of<sp/>setting<sp/>up<sp/>yytext<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_cp<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_cp<sp/>&lt;<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>+<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>shift<sp/>things<sp/>up<sp/>to<sp/>make<sp/>room<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+2<sp/>for<sp/>EOB<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_to_move<sp/>=<sp/>yy_n_chars<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest<sp/>=<sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source<sp/>=</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[number_to_move];</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>source<sp/>&gt;<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*--dest<sp/>=<sp/>*--source;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_cp<sp/>+=<sp/>(int)<sp/>(dest<sp/>-<sp/>source);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a90" kindref="member">yy_bp</ref><sp/>+=<sp/>(int)<sp/>(dest<sp/>-<sp/>source);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_n_chars<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_cp<sp/>&lt;<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>+<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;flex<sp/>scanner<sp/>push-back<sp/>overflow&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*--yy_cp<sp/>=<sp/>(char)<sp/>c;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>=<sp/>yy_bp;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_hold_char<sp/>=<sp/>*yy_cp;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/>yy_cp;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ifndef<sp/>YY_NO_UNPUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_INPUT</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1208"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyinput()</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input()</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_c_buf_p<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>*yy_c_buf_p<sp/>==<sp/>YY_END_OF_BUFFER_CHAR<sp/>)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yy_c_buf_p<sp/>now<sp/>points<sp/>to<sp/>the<sp/>character<sp/>we<sp/>want<sp/>to<sp/>return.</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>this<sp/>occurs<sp/>*before*<sp/>the<sp/>EOB<sp/>characters,<sp/>then<sp/>it&apos;s<sp/>a</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>valid<sp/>NUL;<sp/>if<sp/>not,<sp/>then<sp/>we&apos;ve<sp/>hit<sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_c_buf_p<sp/>&lt;<sp/>&amp;yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[yy_n_chars]<sp/>)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>was<sp/>really<sp/>a<sp/>NUL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_c_buf_p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>need<sp/>more<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>yy_c_buf_p<sp/>-<sp/>yytext_ptr;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++yy_c_buf_p;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>yy_get_next_buffer()<sp/>)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a16" kindref="member">EOB_ACT_LAST_MATCH</ref>:</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>happens<sp/>because<sp/>yy_g_n_b()</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sees<sp/>that<sp/>we&apos;ve<sp/>accumulated<sp/>a</highlight></codeline>
<codeline lineno="1237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>token<sp/>and<sp/>flags<sp/>that<sp/>we<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>try<sp/>matching<sp/>the<sp/>token<sp/>before</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>proceeding.<sp/><sp/>But<sp/>for<sp/>input(),</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>there&apos;s<sp/>no<sp/>matching<sp/>to<sp/>consider.</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>So<sp/>convert<sp/>the<sp/>EOB_ACT_LAST_MATCH</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>EOB_ACT_END_OF_FILE.</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>buffer<sp/>status.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyrestart(<sp/>yyin<sp/>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a15" kindref="member">EOB_ACT_END_OF_FILE</ref>:</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yywrap()<sp/>)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_did_buffer_switch_on_eof<sp/>)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YY_NEW_FILE;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1258"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yyinput();</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1260"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>input();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="conf__lex_8c_1a14" kindref="member">EOB_ACT_CONTINUE_SCAN</ref>:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>yy_c_buf_p;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cast<sp/>for<sp/>8-bit<sp/>char&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_c_buf_p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>preserve<sp/>yytext<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_hold_char<sp/>=<sp/>*++yy_c_buf_p;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>YY_NO_INPUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1281"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyrestart(<sp/>FILE<sp/>*input_file<sp/>)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yyrestart(<sp/>input_file<sp/>)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">FILE<sp/>*input_file;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=<sp/>yy_create_buffer(<sp/>yyin,<sp/>YY_BUF_SIZE<sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_init_buffer(<sp/>yy_current_buffer,<sp/>input_file<sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_load_buffer_state();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1296"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_switch_to_buffer(<sp/>YY_BUFFER_STATE<sp/>new_buffer<sp/>)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_switch_to_buffer(<sp/>new_buffer<sp/>)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">YY_BUFFER_STATE<sp/>new_buffer;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_buffer<sp/>==<sp/>new_buffer<sp/>)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>out<sp/>information<sp/>for<sp/>old<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_c_buf_p<sp/>=<sp/>yy_hold_char;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o2" kindref="member">yy_buf_pos</ref><sp/>=<sp/>yy_c_buf_p;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=<sp/>yy_n_chars;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=<sp/>new_buffer;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_load_buffer_state();</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>actually<sp/>know<sp/>whether<sp/>we<sp/>did<sp/>this<sp/>switch<sp/>during</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>EOF<sp/>(yywrap())<sp/>processing,<sp/>but<sp/>the<sp/>only<sp/>time<sp/>this<sp/>flag</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>looked<sp/>at<sp/>is<sp/>after<sp/>yywrap()<sp/>is<sp/>called,<sp/>so<sp/>it&apos;s<sp/>safe</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>go<sp/>ahead<sp/>and<sp/>always<sp/>set<sp/>it.</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_did_buffer_switch_on_eof<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1326"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_load_buffer_state(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_load_buffer_state()</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_n_chars<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a28" kindref="member">yytext_ptr</ref><sp/>=<sp/>yy_c_buf_p<sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o2" kindref="member">yy_buf_pos</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a65" kindref="member">yyin</ref><sp/>=<sp/>yy_current_buffer-&gt;<ref refid="structyy__buffer__state_1o0" kindref="member">yy_input_file</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_hold_char<sp/>=<sp/>*yy_c_buf_p;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1339"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_create_buffer(<sp/>FILE<sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_create_buffer(<sp/>file,<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">FILE<sp/>*file;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>b;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(YY_BUFFER_STATE)<sp/>yy_flex_alloc(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structyy__buffer__state" kindref="compound">yy_buffer_state</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>dynamic<sp/>memory<sp/>in<sp/>yy_create_buffer()&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yy_ch_buf<sp/>has<sp/>to<sp/>be<sp/>2<sp/>characters<sp/>longer<sp/>than<sp/>the<sp/>size<sp/>given<sp/>because</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>to<sp/>put<sp/>in<sp/>2<sp/>end-of-buffer<sp/>characters.</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>yy_flex_alloc(<sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>+<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>dynamic<sp/>memory<sp/>in<sp/>yy_create_buffer()&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o5" kindref="member">yy_is_our_buffer</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_init_buffer(<sp/>b,<sp/>file<sp/>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_delete_buffer(<sp/>YY_BUFFER_STATE<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_delete_buffer(<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">YY_BUFFER_STATE<sp/>b;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_current_buffer<sp/>=<sp/>(YY_BUFFER_STATE)<sp/>0;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b-&gt;yy_is_our_buffer<sp/>)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_flex_free(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>b-&gt;yy_ch_buf<sp/>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_flex_free(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1391"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_init_buffer(<sp/>YY_BUFFER_STATE<sp/>b,<sp/>FILE<sp/>*file<sp/>)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_init_buffer(<sp/>b,<sp/>file<sp/>)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">YY_BUFFER_STATE<sp/>b;</highlight></codeline>
<codeline lineno="1395" refid="conf__lex_8c_1a92" refkind="member"><highlight class="normal">FILE<sp/>*file;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_flush_buffer(<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o0" kindref="member">yy_input_file</ref><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o8" kindref="member">yy_fill_buffer</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YY_ALWAYS_INTERACTIVE</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o6" kindref="member">yy_is_interactive</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1408"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>YY_NEVER_INTERACTIVE</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o6" kindref="member">yy_is_interactive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o6" kindref="member">yy_is_interactive</ref><sp/>=<sp/><ref refid="conf__lex_8c_1a92" kindref="member">file</ref><sp/>?<sp/>(isatty(<sp/>fileno(<ref refid="conf__lex_8c_1a92" kindref="member">file</ref>)<sp/>)<sp/>&gt;<sp/>0)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1414"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1418"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flush_buffer(<sp/>YY_BUFFER_STATE<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flush_buffer(<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">YY_BUFFER_STATE<sp/>b;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>always<sp/>need<sp/>two<sp/>end-of-buffer<sp/>characters.<sp/><sp/>The<sp/>first<sp/>causes</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>transition<sp/>to<sp/>the<sp/>end-of-buffer<sp/>state.<sp/><sp/>The<sp/>second<sp/>causes</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>jam<sp/>in<sp/>that<sp/>state.</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[0]<sp/>=<sp/>YY_END_OF_BUFFER_CHAR;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[1]<sp/>=<sp/>YY_END_OF_BUFFER_CHAR;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o2" kindref="member">yy_buf_pos</ref><sp/>=<sp/>&amp;b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref>[0];</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o7" kindref="member">yy_at_bol</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>=<sp/>YY_BUFFER_NEW;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/>yy_current_buffer<sp/>)</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_load_buffer_state();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_SCAN_BUFFER</highlight></codeline>
<codeline lineno="1448"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_buffer(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/>yy_size_t<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_buffer(<sp/>base,<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">char<sp/>*base;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">yy_size_t<sp/>size;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>b;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="conf__lex_8c_1a91" kindref="member">size</ref><sp/>&lt;<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base[<ref refid="conf__lex_8c_1a91" kindref="member">size</ref>-2]<sp/>!=<sp/><ref refid="conf__lex_8c_1a12" kindref="member">YY_END_OF_BUFFER_CHAR</ref><sp/>||</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base[<ref refid="conf__lex_8c_1a91" kindref="member">size</ref>-1]<sp/>!=<sp/>YY_END_OF_BUFFER_CHAR<sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>They<sp/>forgot<sp/>to<sp/>leave<sp/>room<sp/>for<sp/>the<sp/>EOB&apos;s.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(YY_BUFFER_STATE)<sp/>yy_flex_alloc(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structyy__buffer__state" kindref="compound">yy_buffer_state</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>dynamic<sp/>memory<sp/>in<sp/>yy_scan_buffer()&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref><sp/>=<sp/><ref refid="conf__lex_8c_1a91" kindref="member">size</ref><sp/>-<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;-<sp/>2&quot;<sp/>to<sp/>take<sp/>care<sp/>of<sp/>EOB&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o2" kindref="member">yy_buf_pos</ref><sp/>=<sp/>b-&gt;<ref refid="structyy__buffer__state_1o1" kindref="member">yy_ch_buf</ref><sp/>=<sp/>base;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o5" kindref="member">yy_is_our_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o0" kindref="member">yy_input_file</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o4" kindref="member">yy_n_chars</ref><sp/>=<sp/>b-&gt;<ref refid="structyy__buffer__state_1o3" kindref="member">yy_buf_size</ref>;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o6" kindref="member">yy_is_interactive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o7" kindref="member">yy_at_bol</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o8" kindref="member">yy_fill_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o9" kindref="member">yy_buffer_status</ref><sp/>=<sp/>YY_BUFFER_NEW;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_switch_to_buffer(<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1483"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_SCAN_STRING</highlight></codeline>
<codeline lineno="1486"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1487"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_string(<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_str<sp/>)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_string(<sp/>yy_str<sp/>)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*yy_str;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="conf__lex_8c_1a93" kindref="member">len</ref><sp/>=<sp/>0;<sp/>yy_str[len];<sp/>++len<sp/>)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy_scan_bytes(<sp/>yy_str,<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1500"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_SCAN_BYTES</highlight></codeline>
<codeline lineno="1503"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1504"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_bytes(<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>yy_scan_bytes(<sp/>bytes,<sp/>len<sp/>)</highlight></codeline>
<codeline lineno="1507"><highlight class="normal">yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes;</highlight></codeline>
<codeline lineno="1508" refid="conf__lex_8c_1a93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a63" kindref="member">YY_BUFFER_STATE</ref><sp/>b;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref><sp/>n;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>memory<sp/>for<sp/>full<sp/>buffer,<sp/>including<sp/>space<sp/>for<sp/>trailing<sp/>EOB&apos;s.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="conf__lex_8c_1a93" kindref="member">len</ref><sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>yy_flex_alloc(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>buf<sp/>)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>dynamic<sp/>memory<sp/>in<sp/>yy_scan_bytes()&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>bytes[i];</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[len]<sp/>=<sp/>buf[<ref refid="conf__lex_8c_1a93" kindref="member">len</ref>+1]<sp/>=<sp/>YY_END_OF_BUFFER_CHAR;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>yy_scan_buffer(<sp/>buf,<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>buffer<sp/>in<sp/>yy_scan_bytes()&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>okay<sp/>to<sp/>grow<sp/>etc.<sp/>this<sp/>buffer,<sp/>and<sp/>we<sp/>should<sp/>throw<sp/>it</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>away<sp/>when<sp/>we&apos;re<sp/>done.</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structyy__buffer__state_1o5" kindref="member">yy_is_our_buffer</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1539"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_PUSH_STATE</highlight></codeline>
<codeline lineno="1542"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1543"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_push_state(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_state<sp/>)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_push_state(<sp/>new_state<sp/>)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">int<sp/>new_state;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yy_start_stack_ptr<sp/>&gt;=<sp/>yy_start_stack_depth<sp/>)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a67" kindref="member">yy_size_t</ref><sp/>new_size;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_start_stack_depth<sp/>+=<sp/>YY_START_STACK_INCR;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_size<sp/>=<sp/>yy_start_stack_depth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>int<sp/>);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_start_stack<sp/>)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_start_stack<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>yy_flex_alloc(<sp/>new_size<sp/>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_start_stack<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>yy_flex_realloc(</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>yy_start_stack,<sp/>new_size<sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>yy_start_stack<sp/>)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>expanding<sp/>start-condition<sp/>stack&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_start_stack[yy_start_stack_ptr++]<sp/>=<sp/>YY_START;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref>(new_state);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1573"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_POP_STATE</highlight></codeline>
<codeline lineno="1576"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_pop_state()</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>--yy_start_stack_ptr<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a57" kindref="member">YY_FATAL_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;start-condition<sp/>stack<sp/>underflow&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__lex_8c_1a7" kindref="member">BEGIN</ref>(yy_start_stack[yy_start_stack_ptr]);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1584"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_NO_TOP_STATE</highlight></codeline>
<codeline lineno="1587"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_top_state()</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy_start_stack[yy_start_stack_ptr<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1592"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>YY_EXIT_FAILURE</highlight></codeline>
<codeline lineno="1594"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YY_EXIT_FAILURE<sp/>2</highlight></codeline>
<codeline lineno="1595"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1596"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1598"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_fatal_error(<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[]<sp/>)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_fatal_error(<sp/>msg<sp/>)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">char<sp/>msg[];</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>fprintf(<sp/>stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<sp/>YY_EXIT_FAILURE<sp/>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Redefine<sp/>yyless()<sp/>so<sp/>it<sp/>works<sp/>in<sp/>section<sp/>3<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>yyless</highlight></codeline>
<codeline lineno="1613"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>yyless(n)<sp/>\</highlight></codeline>
<codeline lineno="1614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>\</highlight></codeline>
<codeline lineno="1615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1616"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>effects<sp/>of<sp/>setting<sp/>up<sp/>yytext.<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yytext[yyleng]<sp/>=<sp/>yy_hold_char;<sp/>\</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_c_buf_p<sp/>=<sp/>yytext<sp/>+<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_hold_char<sp/>=<sp/>*yy_c_buf_p;<sp/>\</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*yy_c_buf_p<sp/>=<sp/>&apos;\0&apos;;<sp/>\</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yyleng<sp/>=<sp/>n;<sp/>\</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>utility<sp/>routines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>yytext_ptr</highlight></codeline>
<codeline lineno="1629"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1630"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_strncpy(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_strncpy(<sp/>s1,<sp/>s2,<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">char<sp/>*s1;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1[i]<sp/>=<sp/>s2[i];</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1643"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_NEED_STRLEN</highlight></codeline>
<codeline lineno="1645"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1646"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_flex_strlen(<sp/>yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy_flex_strlen(<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">yyconst<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>n<sp/>=<sp/>0;<sp/>s[n];<sp/>++n<sp/>)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1659"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1662"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_alloc(<sp/>yy_size_t<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_alloc(<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">yy_size_t<sp/>size;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1672"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_realloc(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/>yy_size_t<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*yy_flex_realloc(<sp/>ptr,<sp/>size<sp/>)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">void<sp/>*ptr;</highlight></codeline>
<codeline lineno="1676" refid="conf__lex_8c_1a91" refkind="member"><highlight class="normal">yy_size_t<sp/>size;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cast<sp/>to<sp/>(char<sp/>*)<sp/>in<sp/>the<sp/>following<sp/>accommodates<sp/>both</highlight></codeline>
<codeline lineno="1680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>implementations<sp/>that<sp/>use<sp/>char*<sp/>generic<sp/>pointers,<sp/>and<sp/>those</highlight></codeline>
<codeline lineno="1681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>use<sp/>void*<sp/>generic<sp/>pointers.<sp/><sp/>It<sp/>works<sp/>with<sp/>the<sp/>latter</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>both<sp/>ANSI<sp/>C<sp/>and<sp/>C++<sp/>allow<sp/>castless<sp/>assignment<sp/>from</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>any<sp/>pointer<sp/>type<sp/>to<sp/>void*,<sp/>and<sp/>deal<sp/>with<sp/>argument<sp/>conversions</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>as<sp/>though<sp/>doing<sp/>an<sp/>assignment.</highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>realloc(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ptr,<sp/><ref refid="conf__lex_8c_1a91" kindref="member">size</ref><sp/>);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>YY_USE_PROTOS</highlight></codeline>
<codeline lineno="1690"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_free(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>yy_flex_free(<sp/>ptr<sp/>)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">void<sp/>*ptr;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>YY_MAIN</highlight></codeline>
<codeline lineno="1700"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="verif__syntax_8c_1a0" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conf__yacc_8c_1a84" kindref="member">yylex</ref>();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1706"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#line<sp/>99<sp/>&quot;conf_lex.l&quot;</highlight></codeline>
<codeline lineno="1707"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yywrap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/philippe/GANESHA/src/ConfigParsing/conf_lex.c"/>
  </compounddef>
</doxygen>
